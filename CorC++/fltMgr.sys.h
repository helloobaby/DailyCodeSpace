// #################################################################################
// Generated by Symbol Type Viewer 32Bit/64Bit - Version 1.0.0.3 beta
// http://www.syseclabs.com
// Coding by Lionel d'Hauenens
// #################################################################################
// Image         : 64bit
// ImageName     : C:\Users\asdf\Desktop\fltMgr.sys
// LoadedPdbName : C:\symbols\fltMgr.pdb\BC51A3998E5EDB185B539372C686C5D51\fltMgr.pdb

#ifdef __cplusplus
extern "C" {
#endif

//////////////////
//   C Define   //
//////////////////

#define VOID void
#define STDCALL __stdcall
#define FASTCALL __fastcall
#define CDECL __cdecl
#define THISCALL __thiscall
#define NEAR 
#define FAR 
//---------------------------------------------------------------------

//////////////////
// C Basic Type //
//////////////////

typedef signed char INT8;
typedef signed char CHAR;
typedef signed short INT16;
typedef signed int INT32;
typedef signed int BOOL;
typedef signed __int64 INT64;
typedef signed __int64 LONG64;
typedef signed long LONG32;
typedef unsigned char UINT8;
typedef unsigned char BYTE;
typedef unsigned short UINT16;
typedef unsigned short WCHAR;
typedef unsigned int UINT32;
typedef unsigned __int64 UINT64;
typedef unsigned __int64 ULONG64;
typedef unsigned long ULONG32;
typedef float FLOAT32;
typedef double FLOAT64;
typedef struct {unsigned short W[5];} FLOAT80;
typedef struct { __int64 LowPart;__int64 HighPart;} FLOAT128;
typedef double DATE;
typedef signed long HRESULT;
typedef union { struct {unsigned long Lo; long Hi;}; __int64 int64;} CURRENCY;
typedef wchar_t OLECHAR;
//---------------------------------------------------------------------

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Enum types

typedef enum _BUS_QUERY_ID_TYPE  // 6 elements, 0x4 bytes
{
    BusQueryDeviceID           = 0 /*0x0*/,
    BusQueryHardwareIDs        = 1 /*0x1*/,
    BusQueryCompatibleIDs      = 2 /*0x2*/,
    BusQueryInstanceID         = 3 /*0x3*/,
    BusQueryDeviceSerialNumber = 4 /*0x4*/,
    BusQueryContainerID        = 5 /*0x5*/
}BUS_QUERY_ID_TYPE, *PBUS_QUERY_ID_TYPE;

typedef enum _CALLBACK_NODE_FLAGS  // 4 elements, 0x4 bytes
{
    CBNFL_SKIP_PAGING_IO       = 1 /*0x1*/,
    CBNFL_SKIP_CACHED_IO       = 2 /*0x2*/,
    CBNFL_USE_NAME_CALLBACK_EX = 4 /*0x4*/,
    CBNFL_SKIP_NON_DASD_IO     = 8 /*0x8*/
}CALLBACK_NODE_FLAGS, *PCALLBACK_NODE_FLAGS;

typedef enum _DEVICE_POWER_STATE  // 6 elements, 0x4 bytes
{
    PowerDeviceUnspecified = 0 /*0x0*/,
    PowerDeviceD0          = 1 /*0x1*/,
    PowerDeviceD1          = 2 /*0x2*/,
    PowerDeviceD2          = 3 /*0x3*/,
    PowerDeviceD3          = 4 /*0x4*/,
    PowerDeviceMaximum     = 5 /*0x5*/
}DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef enum _DEVICE_RELATION_TYPE  // 7 elements, 0x4 bytes
{
    BusRelations         = 0 /*0x0*/,
    EjectionRelations    = 1 /*0x1*/,
    PowerRelations       = 2 /*0x2*/,
    RemovalRelations     = 3 /*0x3*/,
    TargetDeviceRelation = 4 /*0x4*/,
    SingleBusRelations   = 5 /*0x5*/,
    TransportRelations   = 6 /*0x6*/
}DEVICE_RELATION_TYPE, *PDEVICE_RELATION_TYPE;

typedef enum _DEVICE_TEXT_TYPE  // 2 elements, 0x4 bytes
{
    DeviceTextDescription         = 0 /*0x0*/,
    DeviceTextLocationInformation = 1 /*0x1*/
}DEVICE_TEXT_TYPE, *PDEVICE_TEXT_TYPE;

typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE  // 6 elements, 0x4 bytes
{
    DeviceUsageTypeUndefined   = 0 /*0x0*/,
    DeviceUsageTypePaging      = 1 /*0x1*/,
    DeviceUsageTypeHibernation = 2 /*0x2*/,
    DeviceUsageTypeDumpFile    = 3 /*0x3*/,
    DeviceUsageTypeBoot        = 4 /*0x4*/,
    DeviceUsageTypePostDisplay = 5 /*0x5*/
}DEVICE_USAGE_NOTIFICATION_TYPE, *PDEVICE_USAGE_NOTIFICATION_TYPE;

typedef enum _DEVICE_WAKE_DEPTH  // 7 elements, 0x4 bytes
{
    DeviceWakeDepthNotWakeable = 0 /*0x0*/,
    DeviceWakeDepthD0          = 1 /*0x1*/,
    DeviceWakeDepthD1          = 2 /*0x2*/,
    DeviceWakeDepthD2          = 3 /*0x3*/,
    DeviceWakeDepthD3hot       = 4 /*0x4*/,
    DeviceWakeDepthD3cold      = 5 /*0x5*/,
    DeviceWakeDepthMaximum     = 6 /*0x6*/
}DEVICE_WAKE_DEPTH, *PDEVICE_WAKE_DEPTH;

typedef enum _DIRECTORY_NOTIFY_INFORMATION_CLASS  // 2 elements, 0x4 bytes
{
    DirectoryNotifyInformation         = 1 /*0x1*/,
    DirectoryNotifyExtendedInformation = 2 /*0x2*/
}DIRECTORY_NOTIFY_INFORMATION_CLASS, *PDIRECTORY_NOTIFY_INFORMATION_CLASS;

typedef enum _DMA_COMPLETION_STATUS  // 4 elements, 0x4 bytes
{
    DmaComplete  = 0 /*0x0*/,
    DmaAborted   = 1 /*0x1*/,
    DmaError     = 2 /*0x2*/,
    DmaCancelled = 3 /*0x3*/
}DMA_COMPLETION_STATUS, *PDMA_COMPLETION_STATUS;

typedef enum _EVENT_INFO_CLASS  // 5 elements, 0x4 bytes
{
    EventProviderBinaryTrackInfo   = 0 /*0x0*/,
    EventProviderSetReserved1      = 1 /*0x1*/,
    EventProviderSetTraits         = 2 /*0x2*/,
    EventProviderUseDescriptorType = 3 /*0x3*/,
    MaxEventInfo                   = 4 /*0x4*/
}EVENT_INFO_CLASS, *PEVENT_INFO_CLASS;

typedef enum _EVENT_TYPE  // 2 elements, 0x4 bytes
{
    NotificationEvent    = 0 /*0x0*/,
    SynchronizationEvent = 1 /*0x1*/
}EVENT_TYPE, *PEVENT_TYPE;

typedef enum _EXCEPTION_DISPOSITION  // 4 elements, 0x4 bytes
{
    ExceptionContinueExecution = 0 /*0x0*/,
    ExceptionContinueSearch    = 1 /*0x1*/,
    ExceptionNestedException   = 2 /*0x2*/,
    ExceptionCollidedUnwind    = 3 /*0x3*/
}EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

typedef enum _FILE_INFORMATION_CLASS  // 76 elements, 0x4 bytes
{
    FileDirectoryInformation                     = 1 /*0x1*/,
    FileFullDirectoryInformation                 = 2 /*0x2*/,
    FileBothDirectoryInformation                 = 3 /*0x3*/,
    FileBasicInformation                         = 4 /*0x4*/,
    FileStandardInformation                      = 5 /*0x5*/,
    FileInternalInformation                      = 6 /*0x6*/,
    FileEaInformation                            = 7 /*0x7*/,
    FileAccessInformation                        = 8 /*0x8*/,
    FileNameInformation                          = 9 /*0x9*/,
    FileRenameInformation                        = 10 /*0xA*/,
    FileLinkInformation                          = 11 /*0xB*/,
    FileNamesInformation                         = 12 /*0xC*/,
    FileDispositionInformation                   = 13 /*0xD*/,
    FilePositionInformation                      = 14 /*0xE*/,
    FileFullEaInformation                        = 15 /*0xF*/,
    FileModeInformation                          = 16 /*0x10*/,
    FileAlignmentInformation                     = 17 /*0x11*/,
    FileAllInformation                           = 18 /*0x12*/,
    FileAllocationInformation                    = 19 /*0x13*/,
    FileEndOfFileInformation                     = 20 /*0x14*/,
    FileAlternateNameInformation                 = 21 /*0x15*/,
    FileStreamInformation                        = 22 /*0x16*/,
    FilePipeInformation                          = 23 /*0x17*/,
    FilePipeLocalInformation                     = 24 /*0x18*/,
    FilePipeRemoteInformation                    = 25 /*0x19*/,
    FileMailslotQueryInformation                 = 26 /*0x1A*/,
    FileMailslotSetInformation                   = 27 /*0x1B*/,
    FileCompressionInformation                   = 28 /*0x1C*/,
    FileObjectIdInformation                      = 29 /*0x1D*/,
    FileCompletionInformation                    = 30 /*0x1E*/,
    FileMoveClusterInformation                   = 31 /*0x1F*/,
    FileQuotaInformation                         = 32 /*0x20*/,
    FileReparsePointInformation                  = 33 /*0x21*/,
    FileNetworkOpenInformation                   = 34 /*0x22*/,
    FileAttributeTagInformation                  = 35 /*0x23*/,
    FileTrackingInformation                      = 36 /*0x24*/,
    FileIdBothDirectoryInformation               = 37 /*0x25*/,
    FileIdFullDirectoryInformation               = 38 /*0x26*/,
    FileValidDataLengthInformation               = 39 /*0x27*/,
    FileShortNameInformation                     = 40 /*0x28*/,
    FileIoCompletionNotificationInformation      = 41 /*0x29*/,
    FileIoStatusBlockRangeInformation            = 42 /*0x2A*/,
    FileIoPriorityHintInformation                = 43 /*0x2B*/,
    FileSfioReserveInformation                   = 44 /*0x2C*/,
    FileSfioVolumeInformation                    = 45 /*0x2D*/,
    FileHardLinkInformation                      = 46 /*0x2E*/,
    FileProcessIdsUsingFileInformation           = 47 /*0x2F*/,
    FileNormalizedNameInformation                = 48 /*0x30*/,
    FileNetworkPhysicalNameInformation           = 49 /*0x31*/,
    FileIdGlobalTxDirectoryInformation           = 50 /*0x32*/,
    FileIsRemoteDeviceInformation                = 51 /*0x33*/,
    FileUnusedInformation                        = 52 /*0x34*/,
    FileNumaNodeInformation                      = 53 /*0x35*/,
    FileStandardLinkInformation                  = 54 /*0x36*/,
    FileRemoteProtocolInformation                = 55 /*0x37*/,
    FileRenameInformationBypassAccessCheck       = 56 /*0x38*/,
    FileLinkInformationBypassAccessCheck         = 57 /*0x39*/,
    FileVolumeNameInformation                    = 58 /*0x3A*/,
    FileIdInformation                            = 59 /*0x3B*/,
    FileIdExtdDirectoryInformation               = 60 /*0x3C*/,
    FileReplaceCompletionInformation             = 61 /*0x3D*/,
    FileHardLinkFullIdInformation                = 62 /*0x3E*/,
    FileIdExtdBothDirectoryInformation           = 63 /*0x3F*/,
    FileDispositionInformationEx                 = 64 /*0x40*/,
    FileRenameInformationEx                      = 65 /*0x41*/,
    FileRenameInformationExBypassAccessCheck     = 66 /*0x42*/,
    FileDesiredStorageClassInformation           = 67 /*0x43*/,
    FileStatInformation                          = 68 /*0x44*/,
    FileMemoryPartitionInformation               = 69 /*0x45*/,
    FileStatLxInformation                        = 70 /*0x46*/,
    FileCaseSensitiveInformation                 = 71 /*0x47*/,
    FileLinkInformationEx                        = 72 /*0x48*/,
    FileLinkInformationExBypassAccessCheck       = 73 /*0x49*/,
    FileStorageReserveIdInformation              = 74 /*0x4A*/,
    FileCaseSensitiveInformationForceAccessCheck = 75 /*0x4B*/,
    FileMaximumInformation                       = 76 /*0x4C*/
}FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef enum _FILE_LIST_CTRL_FLAGS  // 3 elements, 0x4 bytes
{
    FLCFL_LINKED_TO_FILE     = 1 /*0x1*/,
    FLCFL_CLEANED_UP         = 2 /*0x2*/,
    FLCFL_LINKED_AS_STRM_CTX = 4 /*0x4*/
}FILE_LIST_CTRL_FLAGS, *PFILE_LIST_CTRL_FLAGS;

typedef enum _FLT_CALLBACK_DATA_QUEUE_FLAGS  // 0 elements, 0x0 bytes
{
}FLT_CALLBACK_DATA_QUEUE_FLAGS, *PFLT_CALLBACK_DATA_QUEUE_FLAGS;

//文件系统的类型
typedef enum _FLT_FILESYSTEM_TYPE  // 30 elements, 0x4 bytes
{
    FLT_FSTYPE_UNKNOWN    = 0 /*0x0*/,
    FLT_FSTYPE_RAW        = 1 /*0x1*/,
    FLT_FSTYPE_NTFS       = 2 /*0x2*/,
    FLT_FSTYPE_FAT        = 3 /*0x3*/,
    FLT_FSTYPE_CDFS       = 4 /*0x4*/,
    FLT_FSTYPE_UDFS       = 5 /*0x5*/,
    FLT_FSTYPE_LANMAN     = 6 /*0x6*/,
    FLT_FSTYPE_WEBDAV     = 7 /*0x7*/,
    FLT_FSTYPE_RDPDR      = 8 /*0x8*/,
    FLT_FSTYPE_NFS        = 9 /*0x9*/,
    FLT_FSTYPE_MS_NETWARE = 10 /*0xA*/,
    FLT_FSTYPE_NETWARE    = 11 /*0xB*/,
    FLT_FSTYPE_BSUDF      = 12 /*0xC*/,
    FLT_FSTYPE_MUP        = 13 /*0xD*/,
    FLT_FSTYPE_RSFX       = 14 /*0xE*/,
    FLT_FSTYPE_ROXIO_UDF1 = 15 /*0xF*/,
    FLT_FSTYPE_ROXIO_UDF2 = 16 /*0x10*/,
    FLT_FSTYPE_ROXIO_UDF3 = 17 /*0x11*/,
    FLT_FSTYPE_TACIT      = 18 /*0x12*/,
    FLT_FSTYPE_FS_REC     = 19 /*0x13*/,
    FLT_FSTYPE_INCD       = 20 /*0x14*/,
    FLT_FSTYPE_INCD_FAT   = 21 /*0x15*/,
    FLT_FSTYPE_EXFAT      = 22 /*0x16*/,
    FLT_FSTYPE_PSFS       = 23 /*0x17*/,
    FLT_FSTYPE_GPFS       = 24 /*0x18*/,
    FLT_FSTYPE_NPFS       = 25 /*0x19*/,
    FLT_FSTYPE_MSFS       = 26 /*0x1A*/,
    FLT_FSTYPE_CSVFS      = 27 /*0x1B*/,
    FLT_FSTYPE_REFS       = 28 /*0x1C*/,
    FLT_FSTYPE_OPENAFS    = 29 /*0x1D*/
}FLT_FILESYSTEM_TYPE, *PFLT_FILESYSTEM_TYPE;

typedef enum _FLT_FILTER_FLAGS  // 6 elements, 0x4 bytes
{
    FLTFL_MANDATORY_UNLOAD_IN_PROGRESS = 1 /*0x1*/,
    FLTFL_FILTERING_INITIATED          = 2 /*0x2*/,
    FLTFL_NAME_PROVIDER                = 4 /*0x4*/,
    FLTFL_SUPPORTS_PIPES_MAILSLOTS     = 8 /*0x8*/,
    FLTFL_BACKED_BY_PAGEFILE           = 16 /*0x10*/,
    FLTFL_SUPPORTS_DAX_VOLUME          = 32 /*0x20*/
}FLT_FILTER_FLAGS, *PFLT_FILTER_FLAGS;

typedef enum _FLT_INSTANCE_FLAGS  // 7 elements, 0x4 bytes
{
    INSFL_CAN_BE_DETACHED           = 1 /*0x1*/,
    INSFL_DELETING                  = 2 /*0x2*/,
    INSFL_INITING                   = 4 /*0x4*/,
    INSFL_VOLUME_ATTRIBUTES_QUERIED = 8 /*0x8*/,
    INSFL_SUPPORTS_NAMED_STREAMS    = 16 /*0x10*/,
    INSFL_IN_STREAM_LIST_CTRL       = 32 /*0x20*/,
    INSFL_IN_FILE_LIST_CTRL         = 64 /*0x40*/
}FLT_INSTANCE_FLAGS, *PFLT_INSTANCE_FLAGS;

typedef enum _FLT_NPAGED_LOOKASIDE_NUMBER  // 3 elements, 0x4 bytes
{
    LookasideSmallIrpCtrlList = 0 /*0x0*/,
    LookasideLargeIrpCtrlList = 1 /*0x1*/,
    NumLookasideLists         = 2 /*0x2*/
}FLT_NPAGED_LOOKASIDE_NUMBER, *PFLT_NPAGED_LOOKASIDE_NUMBER;

typedef enum _FLT_OBJECT_FLAGS  // 5 elements, 0x4 bytes
{
    FLT_OBFL_DRAINING      = 1 /*0x1*/,
    FLT_OBFL_ZOMBIED       = 2 /*0x2*/,
    FLT_OBFL_TYPE_INSTANCE = 16777216 /*0x1000000*/,
    FLT_OBFL_TYPE_FILTER   = 33554432 /*0x2000000*/,
    FLT_OBFL_TYPE_VOLUME   = 67108864 /*0x4000000*/
}FLT_OBJECT_FLAGS, *PFLT_OBJECT_FLAGS;

//post 回调返回值
typedef enum _FLT_POSTOP_CALLBACK_STATUS  // 3 elements, 0x4 bytes
{
    FLT_POSTOP_FINISHED_PROCESSING      = 0 /*0x0*/,
    FLT_POSTOP_MORE_PROCESSING_REQUIRED = 1 /*0x1*/,
    FLT_POSTOP_DISALLOW_FSFILTER_IO     = 2 /*0x2*/
}FLT_POSTOP_CALLBACK_STATUS, *PFLT_POSTOP_CALLBACK_STATUS;

//pre回调返回值
typedef enum _FLT_PREOP_CALLBACK_STATUS  // 8 elements, 0x4 bytes
{
    FLT_PREOP_SUCCESS_WITH_CALLBACK = 0 /*0x0*/,
    FLT_PREOP_SUCCESS_NO_CALLBACK   = 1 /*0x1*/,
    FLT_PREOP_PENDING               = 2 /*0x2*/,
    FLT_PREOP_DISALLOW_FASTIO       = 3 /*0x3*/,
    FLT_PREOP_COMPLETE              = 4 /*0x4*/,
    FLT_PREOP_SYNCHRONIZE           = 5 /*0x5*/,
    FLT_PREOP_DISALLOW_FSFILTER_IO  = 6 /*0x6*/,
    FLT_PREOP_USE_DATA_NODE         = 10000 /*0x2710*/
}FLT_PREOP_CALLBACK_STATUS, *PFLT_PREOP_CALLBACK_STATUS;

typedef enum _FLT_VERIFIER_EXTENSION_FLAGS  // 1 elements, 0x4 bytes
{
    FLTVFL_ALLOCATION_FAILURE = 1 /*0x1*/
}FLT_VERIFIER_EXTENSION_FLAGS, *PFLT_VERIFIER_EXTENSION_FLAGS;

typedef enum _FLT_VOLUME_FLAGS  // 12 elements, 0x4 bytes
{
    VOLFL_NETWORK_FILESYSTEM           = 1 /*0x1*/,
    VOLFL_PENDING_MOUNT_SETUP_NOTIFIES = 2 /*0x2*/,
    VOLFL_MOUNT_SETUP_NOTIFIES_CALLED  = 4 /*0x4*/,
    VOLFL_MOUNTING                     = 8 /*0x8*/,
    VOLFL_SENT_SHUTDOWN_IRP            = 16 /*0x10*/,
    VOLFL_ENABLE_NAME_CACHING          = 32 /*0x20*/,
    VOLFL_FILTER_EVER_ATTACHED         = 64 /*0x40*/,
    VOLFL_STANDARD_LINK_NOT_SUPPORTED  = 128 /*0x80*/,
    VOLFL_ENABLE_DATASCAN              = 256 /*0x100*/,
    VOLFL_READ_ONLY_DATASCAN           = 512 /*0x200*/,
    VOLFL_SUPPORTED_FEATURES_KNOWN     = 1024 /*0x400*/,
    VOLFL_DAX_VOLUME                   = 2048 /*0x800*/
}FLT_VOLUME_FLAGS, *PFLT_VOLUME_FLAGS;

typedef enum _FLTP_WORK_QUEUE_TYPE  // 4 elements, 0x4 bytes
{
    FltpCriticalWorkQueue      = 0 /*0x0*/,
    FltpDelayedWorkQueue       = 1 /*0x1*/,
    FltpHyperCriticalWorkQueue = 2 /*0x2*/,
    FltpMaximumWorkQueue       = 3 /*0x3*/
}FLTP_WORK_QUEUE_TYPE, *PFLTP_WORK_QUEUE_TYPE;

typedef enum _FS_FILTER_SECTION_SYNC_TYPE  // 2 elements, 0x4 bytes
{
    SyncTypeOther         = 0 /*0x0*/,
    SyncTypeCreateSection = 1 /*0x1*/
}FS_FILTER_SECTION_SYNC_TYPE, *PFS_FILTER_SECTION_SYNC_TYPE;

typedef enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE  // 2 elements, 0x4 bytes
{
    NotifyTypeCreate  = 0 /*0x0*/,
    NotifyTypeRetired = 1 /*0x1*/
}FS_FILTER_STREAM_FO_NOTIFICATION_TYPE, *PFS_FILTER_STREAM_FO_NOTIFICATION_TYPE;

typedef enum _FSINFOCLASS  // 15 elements, 0x4 bytes
{
    FileFsVolumeInformation       = 1 /*0x1*/,
    FileFsLabelInformation        = 2 /*0x2*/,
    FileFsSizeInformation         = 3 /*0x3*/,
    FileFsDeviceInformation       = 4 /*0x4*/,
    FileFsAttributeInformation    = 5 /*0x5*/,
    FileFsControlInformation      = 6 /*0x6*/,
    FileFsFullSizeInformation     = 7 /*0x7*/,
    FileFsObjectIdInformation     = 8 /*0x8*/,
    FileFsDriverPathInformation   = 9 /*0x9*/,
    FileFsVolumeFlagsInformation  = 10 /*0xA*/,
    FileFsSectorSizeInformation   = 11 /*0xB*/,
    FileFsDataCopyInformation     = 12 /*0xC*/,
    FileFsMetadataSizeInformation = 13 /*0xD*/,
    FileFsFullSizeInformationEx   = 14 /*0xE*/,
    FileFsMaximumInformation      = 15 /*0xF*/
}FSINFOCLASS, *PFSINFOCLASS;

typedef enum _ICC_FLAGS  // 8 elements, 0x4 bytes
{
    ICCFL_SKIP_STARTING_NODE         = 1 /*0x1*/,
    ICCFL_SKIP_DEREF                 = 2 /*0x2*/,
    ICCFL_DO_LEGACY_PROCESSING       = 4 /*0x4*/,
    ICCFL_DO_SKIP                    = 8 /*0x8*/,
    ICCFL_TARGETED_NAME_PROVIDERS    = 16 /*0x10*/,
    ICCFL_NESTED_FASTIO_OPERATION    = 256 /*0x100*/,
    ICCFL_DO_FOCTX_CLEANUP           = 512 /*0x200*/,
    ICCFL_USE_EXISTING_STARTING_NODE = 1024 /*0x400*/
}ICC_FLAGS, *PICC_FLAGS;

typedef enum _INTERFACE_TYPE  // 20 elements, 0x4 bytes
{
    InterfaceTypeUndefined = -1 /*0xFF*/,
    Internal               = 0 /*0x0*/,
    Isa                    = 1 /*0x1*/,
    Eisa                   = 2 /*0x2*/,
    MicroChannel           = 3 /*0x3*/,
    TurboChannel           = 4 /*0x4*/,
    PCIBus                 = 5 /*0x5*/,
    VMEBus                 = 6 /*0x6*/,
    NuBus                  = 7 /*0x7*/,
    PCMCIABus              = 8 /*0x8*/,
    CBus                   = 9 /*0x9*/,
    MPIBus                 = 10 /*0xA*/,
    MPSABus                = 11 /*0xB*/,
    ProcessorInternal      = 12 /*0xC*/,
    InternalPowerBus       = 13 /*0xD*/,
    PNPISABus              = 14 /*0xE*/,
    PNPBus                 = 15 /*0xF*/,
    Vmcs                   = 16 /*0x10*/,
    ACPIBus                = 17 /*0x11*/,
    MaximumInterfaceType   = 18 /*0x12*/
}INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef enum _INTERLOCKED_RESULT  // 3 elements, 0x4 bytes
{
    ResultNegative = 1 /*0x1*/,
    ResultZero     = 0 /*0x0*/,
    ResultPositive = 2 /*0x2*/
}INTERLOCKED_RESULT, *PINTERLOCKED_RESULT;

typedef enum _IO_ALLOCATION_ACTION  // 3 elements, 0x4 bytes
{
    KeepObject                    = 1 /*0x1*/,
    DeallocateObject              = 2 /*0x2*/,
    DeallocateObjectKeepRegisters = 3 /*0x3*/
}IO_ALLOCATION_ACTION, *PIO_ALLOCATION_ACTION;

typedef enum _IO_PRIORITY_HINT  // 6 elements, 0x4 bytes
{
    IoPriorityVeryLow  = 0 /*0x0*/,
    IoPriorityLow      = 1 /*0x1*/,
    IoPriorityNormal   = 2 /*0x2*/,
    IoPriorityHigh     = 3 /*0x3*/,
    IoPriorityCritical = 4 /*0x4*/,
    MaxIoPriorityTypes = 5 /*0x5*/
}IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

typedef enum _IRQ_DEVICE_POLICY  // 7 elements, 0x4 bytes
{
    IrqPolicyMachineDefault                    = 0 /*0x0*/,
    IrqPolicyAllCloseProcessors                = 1 /*0x1*/,
    IrqPolicyOneCloseProcessor                 = 2 /*0x2*/,
    IrqPolicyAllProcessorsInMachine            = 3 /*0x3*/,
    IrqPolicySpecifiedProcessors               = 4 /*0x4*/,
    IrqPolicySpreadMessagesAcrossAllProcessors = 5 /*0x5*/,
    IrqPolicyAllProcessorsInMachineWhenSteered = 6 /*0x6*/
}IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

typedef enum _IRQ_PRIORITY  // 4 elements, 0x4 bytes
{
    IrqPriorityUndefined = 0 /*0x0*/,
    IrqPriorityLow       = 1 /*0x1*/,
    IrqPriorityNormal    = 2 /*0x2*/,
    IrqPriorityHigh      = 3 /*0x3*/
}IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef enum _JOB_OBJECT_IO_RATE_CONTROL_FLAGS  // 5 elements, 0x4 bytes
{
    JOB_OBJECT_IO_RATE_CONTROL_ENABLE                        = 1 /*0x1*/,
    JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME             = 2 /*0x2*/,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL         = 4 /*0x4*/,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 8 /*0x8*/,
    JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS                   = 15 /*0xF*/
}JOB_OBJECT_IO_RATE_CONTROL_FLAGS, *PJOB_OBJECT_IO_RATE_CONTROL_FLAGS;

typedef enum _KINTERRUPT_POLARITY  // 8 elements, 0x4 bytes
{
    InterruptPolarityUnknown       = 0 /*0x0*/,
    InterruptActiveHigh            = 1 /*0x1*/,
    InterruptRisingEdge            = 1 /*0x1*/,
    InterruptActiveLow             = 2 /*0x2*/,
    InterruptFallingEdge           = 2 /*0x2*/,
    InterruptActiveBoth            = 3 /*0x3*/,
    InterruptActiveBothTriggerLow  = 3 /*0x3*/,
    InterruptActiveBothTriggerHigh = 4 /*0x4*/
}KINTERRUPT_POLARITY, *PKINTERRUPT_POLARITY;

typedef enum _LOCK_OPERATION  // 3 elements, 0x4 bytes
{
    IoReadAccess   = 0 /*0x0*/,
    IoWriteAccess  = 1 /*0x1*/,
    IoModifyAccess = 2 /*0x2*/
}LOCK_OPERATION, *PLOCK_OPERATION;

typedef enum _MEMORY_CACHING_TYPE  // 8 elements, 0x4 bytes
{
    MmNonCached              = 0 /*0x0*/,
    MmCached                 = 1 /*0x1*/,
    MmWriteCombined          = 2 /*0x2*/,
    MmHardwareCoherentCached = 3 /*0x3*/,
    MmNonCachedUnordered     = 4 /*0x4*/,
    MmUSWCCached             = 5 /*0x5*/,
    MmMaximumCacheType       = 6 /*0x6*/,
    MmNotMapped              = -1 /*0xFF*/
}MEMORY_CACHING_TYPE, *PMEMORY_CACHING_TYPE;

typedef enum _MEMORY_CACHING_TYPE_ORIG  // 1 elements, 0x4 bytes
{
    MmFrameBufferCached = 2 /*0x2*/
}MEMORY_CACHING_TYPE_ORIG, *PMEMORY_CACHING_TYPE_ORIG;

typedef enum _MODE  // 3 elements, 0x4 bytes
{
    KernelMode  = 0 /*0x0*/,
    UserMode    = 1 /*0x1*/,
    MaximumMode = 2 /*0x2*/
}MODE, *PMODE;

typedef enum _PERFINFO_KERNELMEMORY_USAGE_TYPE  // 2 elements, 0x4 bytes
{
    PerfInfoMemUsagePfnMetadata = 0 /*0x0*/,
    PerfInfoMemUsageMax         = 1 /*0x1*/
}PERFINFO_KERNELMEMORY_USAGE_TYPE, *PPERFINFO_KERNELMEMORY_USAGE_TYPE;

typedef enum _PERFINFO_MM_STAT  // 4 elements, 0x4 bytes
{
    PerfInfoMMStatNotUsed              = 0 /*0x0*/,
    PerfInfoMMStatAggregatePageCombine = 1 /*0x1*/,
    PerfInfoMMStatIterationPageCombine = 2 /*0x2*/,
    PerfInfoMMStatMax                  = 3 /*0x3*/
}PERFINFO_MM_STAT, *PPERFINFO_MM_STAT;

typedef enum _POOL_TYPE  // 23 elements, 0x4 bytes
{
    NonPagedPool                         = 0 /*0x0*/,
    NonPagedPoolExecute                  = 0 /*0x0*/,
    PagedPool                            = 1 /*0x1*/,
    NonPagedPoolMustSucceed              = 2 /*0x2*/,
    DontUseThisType                      = 3 /*0x3*/,
    NonPagedPoolCacheAligned             = 4 /*0x4*/,
    PagedPoolCacheAligned                = 5 /*0x5*/,
    NonPagedPoolCacheAlignedMustS        = 6 /*0x6*/,
    MaxPoolType                          = 7 /*0x7*/,
    NonPagedPoolBase                     = 0 /*0x0*/,
    NonPagedPoolBaseMustSucceed          = 2 /*0x2*/,
    NonPagedPoolBaseCacheAligned         = 4 /*0x4*/,
    NonPagedPoolBaseCacheAlignedMustS    = 6 /*0x6*/,
    NonPagedPoolSession                  = 32 /*0x20*/,
    PagedPoolSession                     = 33 /*0x21*/,
    NonPagedPoolMustSucceedSession       = 34 /*0x22*/,
    DontUseThisTypeSession               = 35 /*0x23*/,
    NonPagedPoolCacheAlignedSession      = 36 /*0x24*/,
    PagedPoolCacheAlignedSession         = 37 /*0x25*/,
    NonPagedPoolCacheAlignedMustSSession = 38 /*0x26*/,
    NonPagedPoolNx                       = 512 /*0x200*/,
    NonPagedPoolNxCacheAligned           = 516 /*0x204*/,
    NonPagedPoolSessionNx                = 544 /*0x220*/
}POOL_TYPE, *PPOOL_TYPE;

typedef enum _POWER_ACTION  // 9 elements, 0x4 bytes
{
    PowerActionNone          = 0 /*0x0*/,
    PowerActionReserved      = 1 /*0x1*/,
    PowerActionSleep         = 2 /*0x2*/,
    PowerActionHibernate     = 3 /*0x3*/,
    PowerActionShutdown      = 4 /*0x4*/,
    PowerActionShutdownReset = 5 /*0x5*/,
    PowerActionShutdownOff   = 6 /*0x6*/,
    PowerActionWarmEject     = 7 /*0x7*/,
    PowerActionDisplayOff    = 8 /*0x8*/
}POWER_ACTION, *PPOWER_ACTION;

typedef enum _POWER_STATE_TYPE  // 2 elements, 0x4 bytes
{
    SystemPowerState = 0 /*0x0*/,
    DevicePowerState = 1 /*0x1*/
}POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

typedef enum _REG_NOTIFY_CLASS  // 61 elements, 0x4 bytes
{
    RegNtDeleteKey                    = 0 /*0x0*/,
    RegNtPreDeleteKey                 = 0 /*0x0*/,
    RegNtSetValueKey                  = 1 /*0x1*/,
    RegNtPreSetValueKey               = 1 /*0x1*/,
    RegNtDeleteValueKey               = 2 /*0x2*/,
    RegNtPreDeleteValueKey            = 2 /*0x2*/,
    RegNtSetInformationKey            = 3 /*0x3*/,
    RegNtPreSetInformationKey         = 3 /*0x3*/,
    RegNtRenameKey                    = 4 /*0x4*/,
    RegNtPreRenameKey                 = 4 /*0x4*/,
    RegNtEnumerateKey                 = 5 /*0x5*/,
    RegNtPreEnumerateKey              = 5 /*0x5*/,
    RegNtEnumerateValueKey            = 6 /*0x6*/,
    RegNtPreEnumerateValueKey         = 6 /*0x6*/,
    RegNtQueryKey                     = 7 /*0x7*/,
    RegNtPreQueryKey                  = 7 /*0x7*/,
    RegNtQueryValueKey                = 8 /*0x8*/,
    RegNtPreQueryValueKey             = 8 /*0x8*/,
    RegNtQueryMultipleValueKey        = 9 /*0x9*/,
    RegNtPreQueryMultipleValueKey     = 9 /*0x9*/,
    RegNtPreCreateKey                 = 10 /*0xA*/,
    RegNtPostCreateKey                = 11 /*0xB*/,
    RegNtPreOpenKey                   = 12 /*0xC*/,
    RegNtPostOpenKey                  = 13 /*0xD*/,
    RegNtKeyHandleClose               = 14 /*0xE*/,
    RegNtPreKeyHandleClose            = 14 /*0xE*/,
    RegNtPostDeleteKey                = 15 /*0xF*/,
    RegNtPostSetValueKey              = 16 /*0x10*/,
    RegNtPostDeleteValueKey           = 17 /*0x11*/,
    RegNtPostSetInformationKey        = 18 /*0x12*/,
    RegNtPostRenameKey                = 19 /*0x13*/,
    RegNtPostEnumerateKey             = 20 /*0x14*/,
    RegNtPostEnumerateValueKey        = 21 /*0x15*/,
    RegNtPostQueryKey                 = 22 /*0x16*/,
    RegNtPostQueryValueKey            = 23 /*0x17*/,
    RegNtPostQueryMultipleValueKey    = 24 /*0x18*/,
    RegNtPostKeyHandleClose           = 25 /*0x19*/,
    RegNtPreCreateKeyEx               = 26 /*0x1A*/,
    RegNtPostCreateKeyEx              = 27 /*0x1B*/,
    RegNtPreOpenKeyEx                 = 28 /*0x1C*/,
    RegNtPostOpenKeyEx                = 29 /*0x1D*/,
    RegNtPreFlushKey                  = 30 /*0x1E*/,
    RegNtPostFlushKey                 = 31 /*0x1F*/,
    RegNtPreLoadKey                   = 32 /*0x20*/,
    RegNtPostLoadKey                  = 33 /*0x21*/,
    RegNtPreUnLoadKey                 = 34 /*0x22*/,
    RegNtPostUnLoadKey                = 35 /*0x23*/,
    RegNtPreQueryKeySecurity          = 36 /*0x24*/,
    RegNtPostQueryKeySecurity         = 37 /*0x25*/,
    RegNtPreSetKeySecurity            = 38 /*0x26*/,
    RegNtPostSetKeySecurity           = 39 /*0x27*/,
    RegNtCallbackObjectContextCleanup = 40 /*0x28*/,
    RegNtPreRestoreKey                = 41 /*0x29*/,
    RegNtPostRestoreKey               = 42 /*0x2A*/,
    RegNtPreSaveKey                   = 43 /*0x2B*/,
    RegNtPostSaveKey                  = 44 /*0x2C*/,
    RegNtPreReplaceKey                = 45 /*0x2D*/,
    RegNtPostReplaceKey               = 46 /*0x2E*/,
    RegNtPreQueryKeyName              = 47 /*0x2F*/,
    RegNtPostQueryKeyName             = 48 /*0x30*/,
    MaxRegNtNotifyClass               = 49 /*0x31*/
}REG_NOTIFY_CLASS, *PREG_NOTIFY_CLASS;

typedef enum _ReplacesCorHdrNumericDefines  // 25 elements, 0x4 bytes
{
    COMIMAGE_FLAGS_ILONLY                      = 1 /*0x1*/,
    COMIMAGE_FLAGS_32BITREQUIRED               = 2 /*0x2*/,
    COMIMAGE_FLAGS_IL_LIBRARY                  = 4 /*0x4*/,
    COMIMAGE_FLAGS_STRONGNAMESIGNED            = 8 /*0x8*/,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT           = 16 /*0x10*/,
    COMIMAGE_FLAGS_TRACKDEBUGDATA              = 65536 /*0x10000*/,
    COMIMAGE_FLAGS_32BITPREFERRED              = 131072 /*0x20000*/,
    COR_VERSION_MAJOR_V2                       = 2 /*0x2*/,
    COR_VERSION_MAJOR                          = 2 /*0x2*/,
    COR_VERSION_MINOR                          = 5 /*0x5*/,
    COR_DELETED_NAME_LENGTH                    = 8 /*0x8*/,
    COR_VTABLEGAP_NAME_LENGTH                  = 8 /*0x8*/,
    NATIVE_TYPE_MAX_CB                         = 1 /*0x1*/,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE       = 255 /*0xFF*/,
    IMAGE_COR_MIH_METHODRVA                    = 1 /*0x1*/,
    IMAGE_COR_MIH_EHRVA                        = 2 /*0x2*/,
    IMAGE_COR_MIH_BASICBLOCK                   = 8 /*0x8*/,
    COR_VTABLE_32BIT                           = 1 /*0x1*/,
    COR_VTABLE_64BIT                           = 2 /*0x2*/,
    COR_VTABLE_FROM_UNMANAGED                  = 4 /*0x4*/,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8 /*0x8*/,
    COR_VTABLE_CALL_MOST_DERIVED               = 16 /*0x10*/,
    IMAGE_COR_EATJ_THUNK_SIZE                  = 32 /*0x20*/,
    MAX_CLASS_NAME                             = 1024 /*0x400*/,
    MAX_PACKAGE_NAME                           = 1024 /*0x400*/
}ReplacesCorHdrNumericDefines, *PReplacesCorHdrNumericDefines;

typedef enum _SECURITY_IMPERSONATION_LEVEL  // 4 elements, 0x4 bytes
{
    SecurityAnonymous      = 0 /*0x0*/,
    SecurityIdentification = 1 /*0x1*/,
    SecurityImpersonation  = 2 /*0x2*/,
    SecurityDelegation     = 3 /*0x3*/
}SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

typedef enum _STATIC_IRP_CTRL_OPERATION_TYPE  // 12 elements, 0x4 bytes
{
    StaticOperationNone         = -1 /*0xFF*/,
    StaticPageFileRead          = 0 /*0x0*/,
    StaticPageFileWrite         = 1 /*0x1*/,
    StaticPagingRead            = 2 /*0x2*/,
    StaticPagingWrite           = 3 /*0x3*/,
    StaticAcquireForSectionSync = 4 /*0x4*/,
    StaticReleaseForSectionSync = 5 /*0x5*/,
    StaticAcquireForModWrite    = 6 /*0x6*/,
    StaticReleaseForModWrite    = 7 /*0x7*/,
    StaticAcquireForCcFlush     = 8 /*0x8*/,
    StaticReleaseForCcFlush     = 9 /*0x9*/,
    StaticOperationCount        = 10 /*0xA*/
}STATIC_IRP_CTRL_OPERATION_TYPE, *PSTATIC_IRP_CTRL_OPERATION_TYPE;

typedef enum _SYSTEM_POWER_STATE  // 8 elements, 0x4 bytes
{
    PowerSystemUnspecified = 0 /*0x0*/,
    PowerSystemWorking     = 1 /*0x1*/,
    PowerSystemSleeping1   = 2 /*0x2*/,
    PowerSystemSleeping2   = 3 /*0x3*/,
    PowerSystemSleeping3   = 4 /*0x4*/,
    PowerSystemHibernate   = 5 /*0x5*/,
    PowerSystemShutdown    = 6 /*0x6*/,
    PowerSystemMaximum     = 7 /*0x7*/
}SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

typedef enum _TlgBlob_t  // 7 elements, 0x4 bytes
{
    _TlgBlobNone      = 0 /*0x0*/,
    _TlgBlobEnd       = 1 /*0x1*/,
    _TlgBlobProvider  = 2 /*0x2*/,
    _TlgBlobEvent3    = 3 /*0x3*/,
    _TlgBlobProvider3 = 4 /*0x4*/,
    _TlgBlobEvent2    = 5 /*0x5*/,
    _TlgBlobMax       = 6 /*0x6*/
}TlgBlob_t, *PTlgBlob_t;

typedef enum _TlgIn_t  // 37 elements, 0x4 bytes
{
    TlgInNULL                 = 0 /*0x0*/,
    TlgInUNICODESTRING        = 1 /*0x1*/,
    TlgInANSISTRING           = 2 /*0x2*/,
    TlgInINT8                 = 3 /*0x3*/,
    TlgInUINT8                = 4 /*0x4*/,
    TlgInINT16                = 5 /*0x5*/,
    TlgInUINT16               = 6 /*0x6*/,
    TlgInINT32                = 7 /*0x7*/,
    TlgInUINT32               = 8 /*0x8*/,
    TlgInINT64                = 9 /*0x9*/,
    TlgInUINT64               = 10 /*0xA*/,
    TlgInFLOAT                = 11 /*0xB*/,
    TlgInDOUBLE               = 12 /*0xC*/,
    TlgInBOOL32               = 13 /*0xD*/,
    TlgInBINARY               = 14 /*0xE*/,
    TlgInGUID                 = 15 /*0xF*/,
    _TlgInPOINTER_unsupported = 16 /*0x10*/,
    TlgInFILETIME             = 17 /*0x11*/,
    TlgInSYSTEMTIME           = 18 /*0x12*/,
    TlgInSID                  = 19 /*0x13*/,
    TlgInHEXINT32             = 20 /*0x14*/,
    TlgInHEXINT64             = 21 /*0x15*/,
    TlgInCOUNTEDSTRING        = 22 /*0x16*/,
    TlgInCOUNTEDANSISTRING    = 23 /*0x17*/,
    _TlgInSTRUCT              = 24 /*0x18*/,
    TlgInCOUNTEDBINARY        = 25 /*0x19*/,
    _TlgInMax                 = 26 /*0x1A*/,
    TlgInINTPTR               = 9 /*0x9*/,
    TlgInUINTPTR              = 10 /*0xA*/,
    TlgInPOINTER              = 21 /*0x15*/,
    _TlgInCcount              = 32 /*0x20*/,
    TlgInVcount               = 64 /*0x40*/,
    _TlgInChain               = 128 /*0x80*/,
    _TlgInCustom              = 96 /*0x60*/,
    _TlgInTypeMask            = 31 /*0x1F*/,
    _TlgInCountMask           = 96 /*0x60*/,
    _TlgInFlagMask            = 224 /*0xE0*/
}TlgIn_t, *PTlgIn_t;

typedef enum _TlgOut_t  // 25 elements, 0x4 bytes
{
    TlgOutNULL                 = 0 /*0x0*/,
    TlgOutNOPRINT              = 1 /*0x1*/,
    TlgOutSTRING               = 2 /*0x2*/,
    TlgOutBOOLEAN              = 3 /*0x3*/,
    TlgOutHEX                  = 4 /*0x4*/,
    TlgOutPID                  = 5 /*0x5*/,
    TlgOutTID                  = 6 /*0x6*/,
    TlgOutPORT                 = 7 /*0x7*/,
    TlgOutIPV4                 = 8 /*0x8*/,
    TlgOutIPV6                 = 9 /*0x9*/,
    TlgOutSOCKETADDRESS        = 10 /*0xA*/,
    TlgOutXML                  = 11 /*0xB*/,
    TlgOutJSON                 = 12 /*0xC*/,
    TlgOutWIN32ERROR           = 13 /*0xD*/,
    TlgOutNTSTATUS             = 14 /*0xE*/,
    TlgOutHRESULT              = 15 /*0xF*/,
    TlgOutFILETIME             = 16 /*0x10*/,
    TlgOutSIGNED               = 17 /*0x11*/,
    TlgOutUNSIGNED             = 18 /*0x12*/,
    TlgOutUTF8                 = 35 /*0x23*/,
    TlgOutPKCS7_WITH_TYPE_INFO = 36 /*0x24*/,
    TlgOutCODE_POINTER         = 37 /*0x25*/,
    _TlgOutMax                 = 38 /*0x26*/,
    _TlgOutChain               = 128 /*0x80*/,
    _TlgOutTypeMask            = 127 /*0x7F*/
}TlgOut_t, *PTlgOut_t;

typedef enum _USER_ACTIVITY_PRESENCE  // 5 elements, 0x4 bytes
{
    PowerUserPresent    = 0 /*0x0*/,
    PowerUserNotPresent = 1 /*0x1*/,
    PowerUserInactive   = 2 /*0x2*/,
    PowerUserMaximum    = 3 /*0x3*/,
    PowerUserInvalid    = 3 /*0x3*/
}USER_ACTIVITY_PRESENCE, *PUSER_ACTIVITY_PRESENCE;

typedef enum _WHEA_ERROR_PACKET_DATA_FORMAT  // 9 elements, 0x4 bytes
{
    WheaDataFormatIPFSalRecord = 0 /*0x0*/,
    WheaDataFormatXPFMCA       = 1 /*0x1*/,
    WheaDataFormatMemory       = 2 /*0x2*/,
    WheaDataFormatPCIExpress   = 3 /*0x3*/,
    WheaDataFormatNMIPort      = 4 /*0x4*/,
    WheaDataFormatPCIXBus      = 5 /*0x5*/,
    WheaDataFormatPCIXDevice   = 6 /*0x6*/,
    WheaDataFormatGeneric      = 7 /*0x7*/,
    WheaDataFormatMax          = 8 /*0x8*/
}WHEA_ERROR_PACKET_DATA_FORMAT, *PWHEA_ERROR_PACKET_DATA_FORMAT;

typedef enum _WHEA_ERROR_SEVERITY  // 4 elements, 0x4 bytes
{
    WheaErrSevRecoverable   = 0 /*0x0*/,
    WheaErrSevFatal         = 1 /*0x1*/,
    WheaErrSevCorrected     = 2 /*0x2*/,
    WheaErrSevInformational = 3 /*0x3*/
}WHEA_ERROR_SEVERITY, *PWHEA_ERROR_SEVERITY;

typedef enum _WHEA_ERROR_SOURCE_TYPE  // 15 elements, 0x4 bytes
{
    WheaErrSrcTypeMCE          = 0 /*0x0*/,
    WheaErrSrcTypeCMC          = 1 /*0x1*/,
    WheaErrSrcTypeCPE          = 2 /*0x2*/,
    WheaErrSrcTypeNMI          = 3 /*0x3*/,
    WheaErrSrcTypePCIe         = 4 /*0x4*/,
    WheaErrSrcTypeGeneric      = 5 /*0x5*/,
    WheaErrSrcTypeINIT         = 6 /*0x6*/,
    WheaErrSrcTypeBOOT         = 7 /*0x7*/,
    WheaErrSrcTypeSCIGeneric   = 8 /*0x8*/,
    WheaErrSrcTypeIPFMCA       = 9 /*0x9*/,
    WheaErrSrcTypeIPFCMC       = 10 /*0xA*/,
    WheaErrSrcTypeIPFCPE       = 11 /*0xB*/,
    WheaErrSrcTypeGenericV2    = 12 /*0xC*/,
    WheaErrSrcTypeSCIGenericV2 = 13 /*0xD*/,
    WheaErrSrcTypeMax          = 14 /*0xE*/
}WHEA_ERROR_SOURCE_TYPE, *PWHEA_ERROR_SOURCE_TYPE;

typedef enum _WHEA_ERROR_TYPE  // 7 elements, 0x4 bytes
{
    WheaErrTypeProcessor  = 0 /*0x0*/,
    WheaErrTypeMemory     = 1 /*0x1*/,
    WheaErrTypePCIExpress = 2 /*0x2*/,
    WheaErrTypeNMI        = 3 /*0x3*/,
    WheaErrTypePCIXBus    = 4 /*0x4*/,
    WheaErrTypePCIXDevice = 5 /*0x5*/,
    WheaErrTypeGeneric    = 6 /*0x6*/
}WHEA_ERROR_TYPE, *PWHEA_ERROR_TYPE;

typedef enum _WHEA_EVENT_LOG_ENTRY_ID  // 3 elements, 0x4 bytes
{
    WheaEventLogEntryIdCmcPollingTimeout = -2147483647 /*0x80000001*/,
    WheaEventLogEntryIdWheaInit          = -2147483646 /*0x80000002*/,
    WheaEventLogEntryIdMax               = -2147483645 /*0x80000003*/
}WHEA_EVENT_LOG_ENTRY_ID, *PWHEA_EVENT_LOG_ENTRY_ID;

typedef enum _WHEA_EVENT_LOG_ENTRY_TYPE  // 3 elements, 0x4 bytes
{
    WheaEventLogEntryTypeInformational = 0 /*0x0*/,
    WheaEventLogEntryTypeWarning       = 1 /*0x1*/,
    WheaEventLogEntryTypeError         = 2 /*0x2*/
}WHEA_EVENT_LOG_ENTRY_TYPE, *PWHEA_EVENT_LOG_ENTRY_TYPE;

typedef enum _WORK_QUEUE_TYPE  // 9 elements, 0x4 bytes
{
    CriticalWorkQueue       = 0 /*0x0*/,
    DelayedWorkQueue        = 1 /*0x1*/,
    HyperCriticalWorkQueue  = 2 /*0x2*/,
    NormalWorkQueue         = 3 /*0x3*/,
    BackgroundWorkQueue     = 4 /*0x4*/,
    RealTimeWorkQueue       = 5 /*0x5*/,
    SuperCriticalWorkQueue  = 6 /*0x6*/,
    MaximumWorkQueue        = 7 /*0x7*/,
    CustomPriorityWorkQueue = 32 /*0x20*/
}WORK_QUEUE_TYPE, *PWORK_QUEUE_TYPE;

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Information about structure types

typedef struct _ACCESS_REASONS;
typedef struct _ACCESS_STATE;
typedef struct _ALLOCATE_CONTEXT_DIRECT;
typedef struct _ALLOCATE_CONTEXT_HEADER;
typedef struct _ALLOCATE_CONTEXT_LOOKASIDE;
typedef struct _ALLOCATE_CONTEXT_ROUTINES;
typedef struct _ASYNC_IO_COMPLETION_CONTEXT;
typedef struct _AUX_ACCESS_DATA;
typedef struct _BACKPOCKET_THREAD_ENTRY;
typedef struct _CALLBACK_CTRL;
typedef struct _CALLBACK_NODE;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_LIST;
typedef struct _CM_RESOURCE_LIST;
typedef struct _COMPLETION_NODE;
typedef struct _COMPLETION_NODE_TRACKING_LIST;
typedef struct _COMPRESSED_DATA_INFO;
typedef struct _CONTEXT;
typedef struct _CONTEXT_LIST_CTRL;
typedef struct _CONTEXT_NODE;
typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;
typedef struct _DEVICE_CAPABILITIES;
typedef struct _DEVICE_EXTENSION_HEADER;
typedef struct _DEVICE_OBJECT;
typedef struct _DEVICE_OBJECT_POWER_EXTENSION;
typedef struct _DEVOBJ_EXTENSION;
typedef struct _DISPATCHER_HEADER;
typedef struct _DMA_ADAPTER;
typedef struct _DMA_ADAPTER_INFO;
typedef struct _DMA_ADAPTER_INFO_V1;
typedef struct _DMA_OPERATIONS;
typedef struct _DMA_TRANSFER_INFO;
typedef struct _DMA_TRANSFER_INFO_V1;
typedef struct _DMA_TRANSFER_INFO_V2;
typedef struct _DRIVER_EXTENSION;
typedef struct _DRIVER_OBJECT;
typedef struct _ECP_LIST;
typedef struct _EJOB;
typedef struct _EPROCESS;
typedef struct _ERESOURCE;
typedef struct _ETW_KERNEL_TRACE_TIMESTAMP;
typedef struct _EVENT_DATA_DESCRIPTOR;
typedef struct _EVENT_DESCRIPTOR;
typedef struct _EVENT_FILTER_DESCRIPTOR;
typedef struct _EX_PUSH_LOCK;
typedef struct _EX_PUSH_LOCK_CACHE_AWARE_LEGACY;
typedef struct _EX_RUNDOWN_REF;
typedef struct _EX_RUNDOWN_REF_CACHE_AWARE;
typedef struct _EX_TIMER;
typedef struct _EXCEPTION_RECORD;
typedef struct _EXCEPTION_REGISTRATION_RECORD;
typedef struct _EXT_DELETE_PARAMETERS;
typedef struct _EXT_SET_PARAMETERS_V0;
typedef struct _FAST_IO_DISPATCH;
typedef struct _FAST_MUTEX;
typedef struct _FILE_BASIC_INFORMATION;
typedef struct _FILE_GET_QUOTA_INFORMATION;
typedef struct _FILE_LIST_CTRL;
typedef struct _FILE_NAMES_INFORMATION;
typedef struct _FILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_OBJECT;
typedef struct _FILE_STANDARD_INFORMATION;
typedef struct _FILTER_CCB;
typedef struct _FLT_CALLBACK_DATA;
typedef struct _FLT_CALLBACK_DATA_QUEUE;
typedef struct _FLT_CCB;
typedef struct _FLT_CONTEXT_REGISTRATION;
typedef struct _FLT_DEFERRED_IO_WORKITEM;
typedef struct _FLT_FILE_NAME_INFORMATION;
typedef struct _FLT_FILTER;
typedef struct _FLT_GENERIC_WORKITEM;
typedef struct _FLT_INSTANCE;
typedef struct _FLT_IO_PARAMETER_BLOCK;
typedef struct _FLT_MESSAGE_WAITER;
typedef struct _FLT_MESSAGE_WAITER_QUEUE;
typedef struct _FLT_MUTEX_LIST_HEAD;
typedef struct _FLT_NAME_CONTROL;
typedef struct _FLT_OBJECT;
typedef struct _FLT_OPERATION_REGISTRATION;
typedef union _FLT_PARAMETERS;
typedef struct _FLT_PORT;
typedef struct _FLT_PORT_OBJECT;
typedef struct _FLT_PRCB;
typedef struct _FLT_REGISTRATION;
typedef struct _FLT_RELATED_CONTEXTS;
typedef struct _FLT_RELATED_OBJECTS;
typedef struct _FLT_RESOURCE_LIST_HEAD;
typedef struct _FLT_SERVER_PORT_OBJECT;
typedef struct _FLT_TAG_DATA_BUFFER;
typedef struct _FLT_TELEMETRY_STOPWATCH;
typedef union _FLT_TYPE;
typedef struct _FLT_VERIFIER_EXTENSION;
typedef struct _FLT_VERIFIER_OBJECT;
typedef struct _FLT_VERIFIER_OPERATIONS;
typedef struct _FLT_VOLUME;
typedef struct _FLT_VOLUME_PROPERTIES;
typedef struct _FLTP_FRAME;
typedef struct _FLTP_IRPCTRL_STACK_PROFILER;
typedef struct _FLTP_WORKITEM;
typedef struct _FLTPP_LOOKASIDE_LIST;
typedef struct _FS_CONTROL_DEVICE_EXTENSION;
typedef struct _FS_FILTER_CALLBACK_DATA;
typedef union _FS_FILTER_PARAMETERS;
typedef struct _FS_FILTER_SECTION_SYNC_OUTPUT;
typedef struct _FSRTL_ADVANCED_FCB_HEADER;
typedef struct _FSRTL_PER_FILE_CONTEXT;
typedef struct _FSRTL_PER_STREAM_CONTEXT;
typedef struct _GENERAL_LOOKASIDE;
typedef struct _GENERAL_LOOKASIDE_POOL;
typedef struct _GENERIC_MAPPING;
typedef struct _GLOBALS;
typedef struct _GUID;
typedef struct _INITIAL_PRIVILEGE_SET;
typedef struct _INSTANCE_CCB;
typedef struct _INTERFACE;
typedef struct _IO_COMPLETION_CONTEXT;
typedef struct _IO_CSQ;
typedef struct _IO_DRIVER_CREATE_CONTEXT;
typedef struct _IO_PRIORITY_INFO;
typedef struct _IO_RESOURCE_DESCRIPTOR;
typedef struct _IO_RESOURCE_LIST;
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST;
typedef struct _IO_SECURITY_CONTEXT;
typedef struct _IO_STACK_LOCATION;
typedef struct _IO_STATUS_BLOCK;
typedef struct _IO_TIMER;
typedef struct _IO_WORKITEM;
typedef struct _IRP;
typedef struct _IRP_CALL_CTRL;
typedef struct _IRP_CTRL;
typedef struct _KAPC;
typedef struct _KDEVICE_QUEUE;
typedef struct _KDEVICE_QUEUE_ENTRY;
typedef struct _KDPC;
typedef struct _KENLISTMENT;
typedef struct _KEVENT;
typedef struct _KFLOATING_SAVE;
typedef union _KGDTENTRY64;
typedef union _KIDTENTRY64;
typedef struct _KLOCK_QUEUE_HANDLE;
typedef struct _KPCR;
typedef struct _KPRCB;
typedef struct _KPROCESS;
typedef struct _KRESOURCEMANAGER;
typedef struct _KSEMAPHORE;
typedef struct _KSPIN_LOCK_QUEUE;
typedef struct _KTHREAD;
typedef struct _KTIMER;
typedef struct _KTRANSACTION;
typedef struct _KTSS64;
typedef union _LARGE_INTEGER;
typedef struct _LIST_ENTRY;
typedef struct _LIST_ENTRY32;
typedef struct _LIST_ENTRY64;
typedef struct _LOOKASIDE_LIST_EX;
typedef struct _LUID;
typedef struct _LUID_AND_ATTRIBUTES;
typedef struct _M128A;
typedef struct _MAILSLOT_CREATE_PARAMETERS;
typedef struct _MANAGER_CCB;
typedef struct _MDL;
typedef struct _NAME_CACHE_CREATE_CTRL;
typedef struct _NAME_CACHE_LIST_CTRL;
typedef struct _NAME_CACHE_LIST_CTRL_STATS;
typedef struct _NAME_CACHE_NODE;
typedef struct _NAME_CACHE_VOLUME_CTRL;
typedef struct _NAME_CACHE_VOLUME_CTRL_STATS;
typedef struct _NAME_CONTROL;
typedef struct _NAMED_PIPE_CREATE_PARAMETERS;
typedef struct _NPAGED_LOOKASIDE_LIST;
typedef struct _NT_TIB;
typedef struct _OBJECT_TYPE;
typedef struct _OWNER_ENTRY;
typedef struct _PAGED_LOOKASIDE_LIST;
typedef struct _PERFINFO_GROUPMASK;
typedef struct _PORT_CCB;
typedef struct _POWER_SEQUENCE;
typedef union _POWER_STATE;
typedef struct _PRIVILEGE_SET;
typedef struct _RESERVE_IRPCTRL;
typedef struct _RTL_BITMAP;
typedef struct _RTL_DYNAMIC_HASH_TABLE;
typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
typedef struct _RTL_QUERY_REGISTRY_TABLE;
typedef struct _RTL_SPLAY_LINKS;
typedef struct _SCATTER_GATHER_ELEMENT;
typedef struct _SCATTER_GATHER_LIST;
typedef struct _SCSI_REQUEST_BLOCK;
typedef struct _SECTION_CONFLICT_QUEUE;
typedef struct _SECTION_CONTEXT_EXTENSION;
typedef struct _SECTION_LIST_CTRL;
typedef struct _SECTION_OBJECT_POINTERS;
typedef struct _SECURITY_QUALITY_OF_SERVICE;
typedef struct _SECURITY_SUBJECT_CONTEXT;
typedef struct _SET_PURGE_FAILURE_MODE_INPUT;
typedef struct _SID;
typedef struct _SID_IDENTIFIER_AUTHORITY;
typedef struct _SINGLE_LIST_ENTRY;
typedef struct _SLIST_ENTRY;
typedef union _SLIST_HEADER;
typedef struct _STREAM_LIST_CTRL;
typedef struct _STRING;
typedef struct _SYSTEM_POWER_STATE_CONTEXT;
typedef struct _TELEMETRY_GLOBALS;
typedef struct _THROTTLE_ELEMENT;
typedef struct _THROTTLED_WORK_ITEM_CTRL;
typedef struct _TlgProvider_t;
typedef struct _TlgProviderMetadata_t;
typedef struct _TraceLoggingMetadata_t;
typedef struct _TRACK_COMPLETION_NODES;
typedef struct _TREE_NODE;
typedef struct _TREE_ROOT;
typedef struct _TX_CONTEXT_EXTENSION;
typedef struct _TXN_PARAMETER_BLOCK;
typedef union _ULARGE_INTEGER;
typedef struct _UNICODE_STRING;
typedef struct _VOLUME_CCB;
typedef struct _VOLUME_DEVICE_EXTENSION;
typedef struct _VPB;
typedef struct _WAIT_CONTEXT_BLOCK;
typedef union _WHEA_ERROR_PACKET_FLAGS;
typedef struct _WHEA_ERROR_PACKET_V2;
typedef struct _WHEA_ERROR_RECORD;
typedef struct _WHEA_ERROR_RECORD_HEADER;
typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS;
typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS;
typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;
typedef struct _WHEA_EVENT_LOG_ENTRY;
typedef union _WHEA_EVENT_LOG_ENTRY_FLAGS;
typedef struct _WHEA_EVENT_LOG_ENTRY_HEADER;
typedef union _WHEA_PERSISTENCE_INFO;
typedef union _WHEA_REVISION;
typedef union _WHEA_TIMESTAMP;
typedef struct _WMI_FLTIO_NOTIFY_ROUTINES;
typedef struct _WORK_CONTEXT;
typedef struct _WORK_QUEUE_ITEM;
typedef struct _WPP_TRACE_CONTROL_BLOCK;
typedef struct _XSAVE_FORMAT;

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Function types

typedef LONG32 (NEAR CDECL FUNCT_002F_002E_QueryRoutine) (WCHAR*, ULONG32, VOID*, ULONG32, VOID*, VOID*);
typedef VOID* (NEAR CDECL FUNCT_0036_00E0_AllocateEx) (enum _POOL_TYPE, UINT64, ULONG32, struct _LOOKASIDE_LIST_EX*);
typedef VOID* (NEAR CDECL FUNCT_0036_00E7_Allocate) (enum _POOL_TYPE, UINT64, ULONG32);
typedef VOID (NEAR CDECL FUNCT_0037_00EC_FreeEx) (VOID*, struct _LOOKASIDE_LIST_EX*);
typedef VOID (NEAR CDECL FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify) (VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_014A_UserApcRoutine) (VOID*, struct _IO_STATUS_BLOCK*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_0037_014F_CancelRoutine_DriverStartIo) (struct _DEVICE_OBJECT*, struct _IRP*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0185_AddDevice) (struct _DRIVER_OBJECT*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_01A8_FastIoCheckIfPossible) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, UINT8, ULONG32, UINT8, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_01E8_FastIoRead_FastIoWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, UINT8, ULONG32, VOID*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_01F2_FastIoQueryBasicInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_BASIC_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0200_FastIoQueryStandardInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_STANDARD_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_020E_FastIoLock) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, union _LARGE_INTEGER*, struct _KPROCESS*, ULONG32, UINT8, UINT8, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_021B_FastIoUnlockSingle) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, union _LARGE_INTEGER*, struct _KPROCESS*, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0224_FastIoUnlockAll) (struct _FILE_OBJECT*, struct _KPROCESS*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_022A_FastIoUnlockAllByKey) (struct _FILE_OBJECT*, VOID*, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0231_FastIoDeviceControl) (struct _FILE_OBJECT*, UINT8, VOID*, ULONG32, VOID*, ULONG32, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef VOID (NEAR CDECL FUNCT_0037_023C_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection) (struct _FILE_OBJECT*);
typedef VOID (NEAR CDECL FUNCT_0037_023F_FastIoDetachDevice) (struct _DEVICE_OBJECT*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0243_FastIoQueryNetworkOpenInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_NETWORK_OPEN_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0253_AcquireForModWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, struct _ERESOURCE**, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0275_MdlRead_PrepareMdlWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, ULONG32, struct _MDL**, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_027F_MdlReadComplete_MdlReadCompleteCompressed) (struct _FILE_OBJECT*, struct _MDL*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_0284_MdlWriteComplete_MdlWriteCompleteCompressed) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, struct _MDL*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_028A_FastIoReadCompressed_FastIoWriteCompressed) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, ULONG32, VOID*, struct _MDL**, struct _IO_STATUS_BLOCK*, struct _COMPRESSED_DATA_INFO*, ULONG32, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_009D_02A0_FastIoQueryOpen) (struct _IRP*, struct _FILE_NETWORK_OPEN_INFORMATION*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_02A5_ReleaseForModWrite) (struct _FILE_OBJECT*, struct _ERESOURCE*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_02AA_AcquireForCcFlush_ReleaseForCcFlush) (struct _FILE_OBJECT*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_02AE_DriverInit) (struct _DRIVER_OBJECT*, struct _UNICODE_STRING*);
typedef VOID (NEAR CDECL FUNCT_0037_02B2_DriverUnload_OldDriverUnload) (struct _DRIVER_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_02B6_MajorFunction) (struct _DEVICE_OBJECT*, struct _IRP*);
typedef enum _IO_ALLOCATION_ACTION (NEAR CDECL FUNCT_02D1_02D0_DeviceRoutine) (struct _DEVICE_OBJECT*, struct _IRP*, VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_02E8_DeferredRoutine) (struct _KDPC*, VOID*, VOID*, VOID*);
typedef LONG32 (NEAR CDECL FUNCT_002F_05D4_CompletionRoutine) (struct _DEVICE_OBJECT*, struct _IRP*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_0632_PutDmaAdapter_FreeAdapterChannel) (struct _DMA_ADAPTER*);
typedef VOID* (NEAR CDECL FUNCT_0036_0636_AllocateCommonBuffer) (struct _DMA_ADAPTER*, ULONG32, union _LARGE_INTEGER*, UINT8);
typedef VOID (NEAR CDECL FUNCT_0037_063C_FreeCommonBuffer) (struct _DMA_ADAPTER*, ULONG32, union _LARGE_INTEGER, VOID*, UINT8);
typedef LONG32 (NEAR CDECL FUNCT_002F_0643_AllocateAdapterChannel) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, ULONG32, FUNCT_02D1_02D0_DeviceRoutine*, VOID*);
typedef UINT8 (NEAR CDECL FUNCT_009D_064A_FlushAdapterBuffers) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, VOID*, ULONG32, UINT8);
typedef VOID (NEAR CDECL FUNCT_0037_0652_FreeMapRegisters) (struct _DMA_ADAPTER*, VOID*, ULONG32);
typedef union _LARGE_INTEGER (NEAR CDECL FUNCT_0039_0657_MapTransfer) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, VOID*, ULONG32*, UINT8);
typedef ULONG32 (NEAR CDECL FUNCT_0009_065F_GetDmaAlignment_ReadDmaCounter) (struct _DMA_ADAPTER*);
typedef VOID (NEAR CDECL FUNCT_0037_066B) (struct _DEVICE_OBJECT*, struct _IRP*, struct _SCATTER_GATHER_LIST*, VOID*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0661_GetScatterGatherList) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, struct _MDL*, VOID*, ULONG32, FUNCT_0037_066B*, VOID*, UINT8);
typedef VOID (NEAR CDECL FUNCT_0037_066B) (struct _DEVICE_OBJECT*, struct _IRP*, struct _SCATTER_GATHER_LIST*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_067B_PutScatterGatherList) (struct _DMA_ADAPTER*, struct _SCATTER_GATHER_LIST*, UINT8);
typedef LONG32 (NEAR CDECL FUNCT_002F_0680_CalculateScatterGatherList) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, ULONG32, ULONG32*, ULONG32*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0688_BuildScatterGatherList) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, struct _MDL*, VOID*, ULONG32, FUNCT_0037_066B*, VOID*, UINT8, VOID*, ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_002F_0694_BuildMdlFromScatterGatherList) (struct _DMA_ADAPTER*, struct _SCATTER_GATHER_LIST*, struct _MDL*, struct _MDL**);
typedef LONG32 (NEAR CDECL FUNCT_002F_069A_GetDmaAdapterInfo) (struct _DMA_ADAPTER*, struct _DMA_ADAPTER_INFO*);
typedef LONG32 (NEAR CDECL FUNCT_002F_06A8_GetDmaTransferInfo) (struct _DMA_ADAPTER*, struct _MDL*, UINT64, ULONG32, UINT8, struct _DMA_TRANSFER_INFO*);
typedef LONG32 (NEAR CDECL FUNCT_002F_06BE_InitializeDmaTransferContext_CancelMappedTransfer_JoinDmaDomain) (struct _DMA_ADAPTER*, VOID*);
typedef VOID* (NEAR CDECL FUNCT_0036_06C2_AllocateCommonBufferEx) (struct _DMA_ADAPTER*, union _LARGE_INTEGER*, ULONG32, union _LARGE_INTEGER*, UINT8, ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_002F_06CA_AllocateAdapterChannelEx) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*, ULONG32, ULONG32, FUNCT_02D1_02D0_DeviceRoutine*, VOID*, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_06D5_ConfigureAdapterChannel) (struct _DMA_ADAPTER*, ULONG32, VOID*);
typedef UINT8 (NEAR CDECL FUNCT_009D_06DA_CancelAdapterChannel) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_06EC) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*, enum _DMA_COMPLETION_STATUS);
typedef LONG32 (NEAR CDECL FUNCT_002F_06DF_MapTransferEx) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, UINT64, ULONG32, ULONG32*, UINT8, struct _SCATTER_GATHER_LIST*, ULONG32, FUNCT_0037_06EC*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_06EC) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*, enum _DMA_COMPLETION_STATUS);
typedef LONG32 (NEAR CDECL FUNCT_002F_06F7_GetScatterGatherListEx) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*, struct _MDL*, UINT64, ULONG32, ULONG32, FUNCT_0037_066B*, VOID*, UINT8, FUNCT_0037_06EC*, VOID*, struct _SCATTER_GATHER_LIST**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0707_BuildScatterGatherListEx) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, VOID*, struct _MDL*, UINT64, ULONG32, ULONG32, FUNCT_0037_066B*, VOID*, UINT8, VOID*, ULONG32, FUNCT_0037_06EC*, VOID*, VOID*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0718_FlushAdapterBuffersEx) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, UINT64, ULONG32, UINT8);
typedef VOID (NEAR CDECL FUNCT_0037_0720_FreeAdapterObject) (struct _DMA_ADAPTER*, enum _IO_ALLOCATION_ACTION);
typedef LONG32 (NEAR CDECL FUNCT_002F_0724_AllocateDomainCommonBuffer) (struct _DMA_ADAPTER*, VOID*, union _LARGE_INTEGER*, ULONG32, ULONG32, enum _MEMORY_CACHING_TYPE*, ULONG32, union _LARGE_INTEGER*, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0730_FlushDmaBuffer) (struct _DMA_ADAPTER*, struct _MDL*, UINT8);
typedef LONG32 (NEAR CDECL FUNCT_002F_0735_LeaveDmaDomain) (struct _DMA_ADAPTER*);
typedef VOID* (NEAR CDECL FUNCT_0036_0737_GetDmaDomain) (struct _DMA_ADAPTER*);
typedef VOID* (NEAR CDECL FUNCT_0036_0739_AllocateCommonBufferWithBounds) (struct _DMA_ADAPTER*, union _LARGE_INTEGER*, union _LARGE_INTEGER*, ULONG32, ULONG32, enum _MEMORY_CACHING_TYPE*, ULONG32, union _LARGE_INTEGER*);
typedef enum _EXCEPTION_DISPOSITION (NEAR CDECL FUNCT_0794_0793_Handler) (struct _EXCEPTION_RECORD*, VOID*, struct _CONTEXT*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_091B_DeRefSecurityDescriptor) (VOID*, VOID*);
typedef enum _FLT_PREOP_CALLBACK_STATUS (NEAR CDECL FUNCT_0A38_0A37_PreOperation_PreVolumeMount) (struct _FLT_CALLBACK_DATA*, struct _FLT_RELATED_OBJECTS*, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BBC_FilterUnload_FilterUnloadCallback) (ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BBF_InstanceSetup_InstanceSetupCallback) (struct _FLT_RELATED_OBJECTS*, ULONG32, ULONG32, enum _FLT_FILESYSTEM_TYPE);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BC5_InstanceQueryTeardown_InstanceQueryTeardownCallback) (struct _FLT_RELATED_OBJECTS*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback) (struct _FLT_RELATED_OBJECTS*, ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BCB_GenerateFileName_GenerateFileNameCallback) (struct _FLT_INSTANCE*, struct _FILE_OBJECT*, struct _FLT_CALLBACK_DATA*, ULONG32, UINT8*, struct _FLT_NAME_CONTROL*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BD7_NormalizeNameComponent_NormalizeNameComponentCallback) (struct _FLT_INSTANCE*, struct _UNICODE_STRING*, UINT16, struct _UNICODE_STRING*, struct _FILE_NAMES_INFORMATION*, ULONG32, ULONG32, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0BE8_NormalizeNameComponentEx_NormalizeNameComponentExCallback) (struct _FLT_INSTANCE*, struct _FILE_OBJECT*, struct _UNICODE_STRING*, UINT16, struct _UNICODE_STRING*, struct _FILE_NAMES_INFORMATION*, ULONG32, ULONG32, VOID**);
typedef enum _FLT_POSTOP_CALLBACK_STATUS (NEAR CDECL FUNCT_0BF8_0BF7_PostOperation_PostVolumeMount) (struct _FLT_CALLBACK_DATA*, struct _FLT_RELATED_OBJECTS*, VOID*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback) (VOID*, UINT16);
typedef VOID (NEAR CDECL FUNCT_0037_0C10_NormalizeContextCleanup_NormalizeContextCleanupCallback) (VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0C13_KtmNotification_TransactionNotificationCallback) (struct _FLT_RELATED_OBJECTS*, VOID*, ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_002F_0C18_SectionNotification_SectionNotificationCallback) (struct _FLT_INSTANCE*, VOID*, struct _FLT_CALLBACK_DATA*);
typedef VOID (NEAR CDECL FUNCT_0037_0C63_AsyncCompletionRoutine_UserCallback) (struct _FLT_CALLBACK_DATA*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_0C7C_PostCompletionRoutine) (struct _IRP_CTRL*);
typedef VOID (NEAR CDECL FUNCT_0037_0CBF_CsqInsertIrp_CsqRemoveIrp_CsqCompleteCanceledIrp) (struct _IO_CSQ*, struct _IRP*);
typedef struct _IRP* (NEAR CDECL FUNCT_013B_0CC4_CsqPeekNextIrp) (struct _IO_CSQ*, struct _IRP*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_0CC9_CsqAcquireLock) (struct _IO_CSQ*, UINT8*);
typedef VOID (NEAR CDECL FUNCT_0037_0CCD_CsqReleaseLock) (struct _IO_CSQ*, UINT8);
typedef VOID (NEAR CDECL FUNCT_0037_0D32_EnableCallback) (struct _GUID*, ULONG32, UINT8, UINT64, UINT64, struct _EVENT_FILTER_DESCRIPTOR*, VOID*);
typedef VOID* (NEAR CDECL FUNCT_0036_0DA8_ContextAllocateCallback) (enum _POOL_TYPE, UINT64, UINT16);
typedef VOID (NEAR CDECL FUNCT_0037_0DBD_DeferredWorkerRoutine) (struct _FLT_DEFERRED_IO_WORKITEM*, struct _FLT_CALLBACK_DATA*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_0DCD_GenericWorkerRoutine) (struct _FLT_GENERIC_WORKITEM*, VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_0EF7_TimeStampRoutine) (struct _ETW_KERNEL_TRACE_TIMESTAMP*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_0037_0EFC_FailureNotifyRoutine_InitiationNotifyRoutine) (VOID*, ULONG32, ULONG32, UINT16);
typedef VOID (NEAR CDECL FUNCT_0037_0F02_CompletionNotifyRoutine_FastCompletionNotifyRoutine) (VOID*, ULONG32, ULONG32, UINT16, struct _ETW_KERNEL_TRACE_TIMESTAMP*);
typedef VOID (NEAR CDECL FUNCT_0037_0F09_IoRedirectionNotifyRoutine) (struct _IRP*, struct _FILE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0F3C_ConnectNotify) (struct _FLT_PORT*, VOID*, VOID*, ULONG32, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_002F_0F45_MessageNotify) (VOID*, VOID*, ULONG32, VOID*, ULONG32, ULONG32*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0F69_Callback) (UINT8, VOID*, ULONG32, VOID*, VOID*, ULONG32*);
typedef LONG32 (NEAR CDECL FUNCT_002F_0FF6_SyncOpRoutine) (VOID*);
typedef LONG32 (NEAR CDECL FUNCT_002F_106C_InsertIo) (struct _FLT_CALLBACK_DATA_QUEUE*, struct _FLT_CALLBACK_DATA*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_1072_RemoveIo_CompleteCanceledIo) (struct _FLT_CALLBACK_DATA_QUEUE*, struct _FLT_CALLBACK_DATA*);
typedef struct _FLT_CALLBACK_DATA* (NEAR CDECL FUNCT_0A3C_1076_PeekNextIo) (struct _FLT_CALLBACK_DATA_QUEUE*, struct _FLT_CALLBACK_DATA*, VOID*);
typedef VOID (NEAR CDECL FUNCT_0037_1078_Acquire) (struct _FLT_CALLBACK_DATA_QUEUE*, UINT8*);
typedef VOID (NEAR CDECL FUNCT_0037_107C_Release) (struct _FLT_CALLBACK_DATA_QUEUE*, UINT8);

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Structure types

          typedef struct _ACCESS_REASONS // 1 elements, 0x80 bytes (sizeof) 
          {                                                                 
/*0x000*/     ULONG32      Data[32];                                        
          }ACCESS_REASONS, *PACCESS_REASONS;                                   
                                                                            
          typedef struct _LUID       // 2 elements, 0x8 bytes (sizeof) 
          {                                                            
/*0x000*/     ULONG32      LowPart;                                    
/*0x004*/     LONG32       HighPart;                                   
          }LUID, *PLUID;                                               
                                                                       
          typedef struct _SECURITY_SUBJECT_CONTEXT                   // 4 elements, 0x20 bytes (sizeof) 
          {                                                                                             
/*0x000*/     VOID*        ClientToken;                                                                 
/*0x008*/     enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;                                    
/*0x00C*/     UINT8        _PADDING0_[0x4];                                                             
/*0x010*/     VOID*        PrimaryToken;                                                                
/*0x018*/     VOID*        ProcessAuditId;                                                              
          }SECURITY_SUBJECT_CONTEXT, *PSECURITY_SUBJECT_CONTEXT;                                        
                                                                                                        
          typedef struct _LUID_AND_ATTRIBUTES // 2 elements, 0xC bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _LUID Luid;              // 2 elements, 0x8 bytes (sizeof) 
/*0x008*/     ULONG32      Attributes;                                          
          }LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES;                                  
                                                                                
          typedef struct _INITIAL_PRIVILEGE_SET         // 3 elements, 0x2C bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      PrivilegeCount;                                                 
/*0x004*/     ULONG32      Control;                                                        
/*0x008*/     struct _LUID_AND_ATTRIBUTES Privilege[3];                                    
          }INITIAL_PRIVILEGE_SET, *PINITIAL_PRIVILEGE_SET;                                   
                                                                                           
          typedef struct _PRIVILEGE_SET                 // 3 elements, 0x14 bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      PrivilegeCount;                                                 
/*0x004*/     ULONG32      Control;                                                        
/*0x008*/     struct _LUID_AND_ATTRIBUTES Privilege[1];                                    
          }PRIVILEGE_SET, *PPRIVILEGE_SET;                                                 
                                                                                           
          typedef struct _UNICODE_STRING    // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT16       Length;                                             
/*0x002*/     UINT16       MaximumLength;                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     WCHAR*       Buffer;                                             
          }UNICODE_STRING, *PUNICODE_STRING;                                   
                                                                               
          typedef struct _ACCESS_STATE                                 // 16 elements, 0xA0 bytes (sizeof) 
          {                                                                                                
/*0x000*/     struct _LUID OperationID;                                // 2 elements, 0x8 bytes (sizeof)   
/*0x008*/     UINT8        SecurityEvaluated;                                                              
/*0x009*/     UINT8        GenerateAudit;                                                                  
/*0x00A*/     UINT8        GenerateOnClose;                                                                
/*0x00B*/     UINT8        PrivilegesAllocated;                                                            
/*0x00C*/     ULONG32      Flags;                                                                          
/*0x010*/     ULONG32      RemainingDesiredAccess;                                                         
/*0x014*/     ULONG32      PreviouslyGrantedAccess;                                                        
/*0x018*/     ULONG32      OriginalDesiredAccess;                                                          
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                                
/*0x020*/     struct _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext; // 4 elements, 0x20 bytes (sizeof)  
/*0x040*/     VOID*        SecurityDescriptor;                                                             
/*0x048*/     VOID*        AuxData;                                                                        
              union                                                    // 2 elements, 0x2C bytes (sizeof)  
              {                                                                                            
/*0x050*/         struct _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;   // 3 elements, 0x2C bytes (sizeof)  
/*0x050*/         struct _PRIVILEGE_SET PrivilegeSet;                  // 3 elements, 0x14 bytes (sizeof)  
              }Privileges;                                                                                 
/*0x07C*/     UINT8        AuditPrivileges;                                                                
/*0x07D*/     UINT8        _PADDING1_[0x3];                                                                
/*0x080*/     struct _UNICODE_STRING ObjectName;                       // 3 elements, 0x10 bytes (sizeof)  
/*0x090*/     struct _UNICODE_STRING ObjectTypeName;                   // 3 elements, 0x10 bytes (sizeof)  
          }ACCESS_STATE, *PACCESS_STATE;                                                                   
                                                                                                           
          typedef struct _ALLOCATE_CONTEXT_DIRECT                                                 // 7 elements, 0x28 bytes (sizeof) 
          {                                                                                                                          
/*0x000*/     struct _FLT_FILTER* Filter;                                                                                            
/*0x008*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextCleanupCallback;                                    
/*0x010*/     struct _ALLOCATE_CONTEXT_HEADER* Next;                                                                                 
/*0x018*/     UINT16       ContextType;                                                                                              
/*0x01A*/     UINT8        Flags;                                                                                                    
/*0x01B*/     UINT8        AllocationType;                                                                                           
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                                                          
/*0x020*/     ULONG32      PoolTag;                                                                                                  
/*0x024*/     UINT8        _PADDING1_[0x4];                                                                                          
          }ALLOCATE_CONTEXT_DIRECT, *PALLOCATE_CONTEXT_DIRECT;                                                                       
                                                                                                                                     
          typedef struct _ALLOCATE_CONTEXT_HEADER                                                 // 6 elements, 0x20 bytes (sizeof) 
          {                                                                                                                          
/*0x000*/     struct _FLT_FILTER* Filter;                                                                                            
/*0x008*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextCleanupCallback;                                    
/*0x010*/     struct _ALLOCATE_CONTEXT_HEADER* Next;                                                                                 
/*0x018*/     UINT16       ContextType;                                                                                              
/*0x01A*/     UINT8        Flags;                                                                                                    
/*0x01B*/     UINT8        AllocationType;                                                                                           
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                                                          
          }ALLOCATE_CONTEXT_HEADER, *PALLOCATE_CONTEXT_HEADER;                                                                       
                                                                                                                                     
          typedef union _SLIST_HEADER              // 3 elements, 0x10 bytes (sizeof) 
          {                                                                           
              struct                               // 2 elements, 0x10 bytes (sizeof) 
              {                                                                       
/*0x000*/         UINT64       Alignment;                                             
/*0x008*/         UINT64       Region;                                                
              };                                                                      
              struct                               // 4 elements, 0x10 bytes (sizeof) 
              {                                                                       
                  struct                           // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x000*/             UINT64       Depth : 16;     // 0 BitPosition                   
/*0x000*/             UINT64       Sequence : 48;  // 16 BitPosition                  
                  };                                                                  
                  struct                           // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x008*/             UINT64       Reserved : 4;   // 0 BitPosition                   
/*0x008*/             UINT64       NextEntry : 60; // 4 BitPosition                   
                  };                                                                  
              }HeaderX64;                                                             
          }SLIST_HEADER, *PSLIST_HEADER;                                              
                                                                                      
          typedef struct _SINGLE_LIST_ENTRY    // 1 elements, 0x8 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _SINGLE_LIST_ENTRY* Next;                                   
          }SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY;                                  
                                                                                 
          typedef struct _LIST_ENTRY     // 2 elements, 0x10 bytes (sizeof) 
          {                                                                 
/*0x000*/     struct _LIST_ENTRY* Flink;                                    
/*0x008*/     struct _LIST_ENTRY* Blink;                                    
          }LIST_ENTRY, *PLIST_ENTRY;                                        
                                                                            
          typedef struct _GENERAL_LOOKASIDE                                                                                                      // 22 elements, 0x80 bytes (sizeof) 
          {                                                                                                                                                                          
              union                                                                                                                              // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                                                                      
/*0x000*/         union _SLIST_HEADER ListHead;                                                                                                  // 3 elements, 0x10 bytes (sizeof)  
/*0x000*/         struct _SINGLE_LIST_ENTRY SingleListHead;                                                                                      // 1 elements, 0x8 bytes (sizeof)   
              };                                                                                                                                                                     
/*0x010*/     UINT16       Depth;                                                                                                                                                    
/*0x012*/     UINT16       MaximumDepth;                                                                                                                                             
/*0x014*/     ULONG32      TotalAllocates;                                                                                                                                           
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x018*/         ULONG32      AllocateMisses;                                                                                                                                       
/*0x018*/         ULONG32      AllocateHits;                                                                                                                                         
              };                                                                                                                                                                     
/*0x01C*/     ULONG32      TotalFrees;                                                                                                                                               
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x020*/         ULONG32      FreeMisses;                                                                                                                                           
/*0x020*/         ULONG32      FreeHits;                                                                                                                                             
              };                                                                                                                                                                     
/*0x024*/     enum _POOL_TYPE Type;                                                                                                                                                  
/*0x028*/     ULONG32      Tag;                                                                                                                                                      
/*0x02C*/     ULONG32      Size;                                                                                                                                                     
              union                                                                                                                              // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x030*/         FUNCT_0036_00E0_AllocateEx* AllocateEx;                                                                                                                            
/*0x030*/         FUNCT_0036_00E7_Allocate* Allocate;                                                                                                                                
              };                                                                                                                                                                     
              union                                                                                                                              // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x038*/         FUNCT_0037_00EC_FreeEx* FreeEx;                                                                                                                                    
/*0x038*/         FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* Free;                                     
              };                                                                                                                                                                     
/*0x040*/     struct _LIST_ENTRY ListEntry;                                                                                                      // 2 elements, 0x10 bytes (sizeof)  
/*0x050*/     ULONG32      LastTotalAllocates;                                                                                                                                       
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x054*/         ULONG32      LastAllocateMisses;                                                                                                                                   
/*0x054*/         ULONG32      LastAllocateHits;                                                                                                                                     
              };                                                                                                                                                                     
/*0x058*/     ULONG32      Future[2];                                                                                                                                                
/*0x060*/     UINT8        _PADDING0_[0x20];                                                                                                                                         
          }GENERAL_LOOKASIDE, *PGENERAL_LOOKASIDE;                                                                                                                                   
                                                                                                                                                                                     
          typedef struct _NPAGED_LOOKASIDE_LIST // 1 elements, 0x80 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _GENERAL_LOOKASIDE L;      // 22 elements, 0x80 bytes (sizeof) 
          }NPAGED_LOOKASIDE_LIST, *PNPAGED_LOOKASIDE_LIST;                                    
                                                                                    
          typedef struct _PAGED_LOOKASIDE_LIST // 1 elements, 0x80 bytes (sizeof)  
          {                                                                        
/*0x000*/     struct _GENERAL_LOOKASIDE L;     // 22 elements, 0x80 bytes (sizeof) 
          }PAGED_LOOKASIDE_LIST, *PPAGED_LOOKASIDE_LIST;                                    
                                                                                   
          typedef struct _ALLOCATE_CONTEXT_LOOKASIDE                                              // 8 elements, 0x140 bytes (sizeof) 
          {                                                                                                                           
/*0x000*/     struct _FLT_FILTER* Filter;                                                                                             
/*0x008*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextCleanupCallback;                                     
/*0x010*/     struct _ALLOCATE_CONTEXT_HEADER* Next;                                                                                  
/*0x018*/     UINT16       ContextType;                                                                                               
/*0x01A*/     UINT8        Flags;                                                                                                     
/*0x01B*/     UINT8        AllocationType;                                                                                            
/*0x01C*/     UINT8        _PADDING0_[0x24];                                                                                          
/*0x040*/     struct _NPAGED_LOOKASIDE_LIST NonPaged;                                             // 1 elements, 0x80 bytes (sizeof)  
/*0x0C0*/     struct _PAGED_LOOKASIDE_LIST Paged;                                                 // 1 elements, 0x80 bytes (sizeof)  
          }ALLOCATE_CONTEXT_LOOKASIDE, *PALLOCATE_CONTEXT_LOOKASIDE;                                                                  
                                                                                                                                      
          typedef struct _ALLOCATE_CONTEXT_ROUTINES                                               // 8 elements, 0x30 bytes (sizeof) 
          {                                                                                                                          
/*0x000*/     struct _FLT_FILTER* Filter;                                                                                            
/*0x008*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextCleanupCallback;                                    
/*0x010*/     struct _ALLOCATE_CONTEXT_HEADER* Next;                                                                                 
/*0x018*/     UINT16       ContextType;                                                                                              
/*0x01A*/     UINT8        Flags;                                                                                                    
/*0x01B*/     UINT8        AllocationType;                                                                                           
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                                                          
/*0x020*/     FUNCT_0036_0DA8_ContextAllocateCallback* ContextAllocateCallback;                                                      
/*0x028*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextFreeCallback;                                       
          }ALLOCATE_CONTEXT_ROUTINES, *PALLOCATE_CONTEXT_ROUTINES;                                                                   
                                                                                                                                     
          typedef struct _ASYNC_IO_COMPLETION_CONTEXT                            // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                                         
/*0x000*/     FUNCT_0037_0C63_AsyncCompletionRoutine_UserCallback* UserCallback;                                    
/*0x008*/     VOID*        UserContext;                                                                             
          }ASYNC_IO_COMPLETION_CONTEXT, *PASYNC_IO_COMPLETION_CONTEXT;                                              
                                                                                                                    
          typedef struct _GENERIC_MAPPING  // 4 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     ULONG32      GenericRead;                                       
/*0x004*/     ULONG32      GenericWrite;                                      
/*0x008*/     ULONG32      GenericExecute;                                    
/*0x00C*/     ULONG32      GenericAll;                                        
          }GENERIC_MAPPING, *PGENERIC_MAPPING;                                   
                                                                              
          typedef struct _GUID       // 4 elements, 0x10 bytes (sizeof) 
          {                                                             
/*0x000*/     ULONG32      Data1;                                       
/*0x004*/     UINT16       Data2;                                       
/*0x006*/     UINT16       Data3;                                       
/*0x008*/     UINT8        Data4[8];                                    
          }GUID, *PGUID;                                                
                                                                        
          typedef struct _AUX_ACCESS_DATA                                       // 12 elements, 0xE0 bytes (sizeof) 
          {                                                                                                         
/*0x000*/     struct _PRIVILEGE_SET* PrivilegesUsed;                                                                
/*0x008*/     struct _GENERIC_MAPPING GenericMapping;                           // 4 elements, 0x10 bytes (sizeof)  
/*0x018*/     ULONG32      AccessesToAudit;                                                                         
/*0x01C*/     ULONG32      MaximumAuditMask;                                                                        
/*0x020*/     struct _GUID TransactionId;                                       // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     VOID*        NewSecurityDescriptor;                                                                   
/*0x038*/     VOID*        ExistingSecurityDescriptor;                                                              
/*0x040*/     VOID*        ParentSecurityDescriptor;                                                                
/*0x048*/     FUNCT_0037_091B_DeRefSecurityDescriptor* DeRefSecurityDescriptor;                                     
/*0x050*/     VOID*        SDLock;                                                                                  
/*0x058*/     struct _ACCESS_REASONS AccessReasons;                             // 1 elements, 0x80 bytes (sizeof)  
/*0x0D8*/     UINT8        GenerateStagingEvents;                                                                   
/*0x0D9*/     UINT8        _PADDING0_[0x7];                                                                         
          }AUX_ACCESS_DATA, *PAUX_ACCESS_DATA;                                                                      
                                                                                                                    
          typedef struct _BACKPOCKET_THREAD_ENTRY    // 3 elements, 0x18 bytes (sizeof) 
          {                                                                             
/*0x000*/     struct _KTHREAD* OwningThread;                                            
/*0x008*/     struct _SINGLE_LIST_ENTRY IrpCtrlList; // 1 elements, 0x8 bytes (sizeof)  
/*0x010*/     ULONG32      Count;                                                       
/*0x014*/     UINT8        _PADDING0_[0x4];                                             
          }BACKPOCKET_THREAD_ENTRY, *PBACKPOCKET_THREAD_ENTRY;                                   
                                                                                        
          typedef struct _CALLBACK_CTRL                     // 2 elements, 0x3E8 bytes (sizeof) 
          {                                                                                     
/*0x000*/     struct _LIST_ENTRY OperationLists[50];                                            
/*0x320*/     enum _CALLBACK_NODE_FLAGS OperationFlags[50];                                     
          }CALLBACK_CTRL, *PCALLBACK_CTRL;                                                      
                                                                                                
          typedef struct _CALLBACK_NODE                                                                                    // 9 elements, 0x30 bytes (sizeof) 
          {                                                                                                                                                   
/*0x000*/     struct _LIST_ENTRY CallbackLinks;                                                                            // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     struct _FLT_INSTANCE* Instance;                                                                                                                 
              union                                                                                                        // 4 elements, 0x10 bytes (sizeof) 
              {                                                                                                                                               
                  struct                                                                                                   // 2 elements, 0x10 bytes (sizeof) 
                  {                                                                                                                                           
/*0x018*/             FUNCT_0A38_0A37_PreOperation_PreVolumeMount* PreOperation;                                                                              
/*0x020*/             FUNCT_0BF8_0BF7_PostOperation_PostVolumeMount* PostOperation;                                                                           
                  };                                                                                                                                          
/*0x018*/         FUNCT_002F_0BCB_GenerateFileName_GenerateFileNameCallback* GenerateFileName;                                                                
/*0x018*/         FUNCT_002F_0BD7_NormalizeNameComponent_NormalizeNameComponentCallback* NormalizeNameComponent;                                              
                  struct                                                                                                   // 2 elements, 0x10 bytes (sizeof) 
                  {                                                                                                                                           
/*0x018*/             FUNCT_002F_0BE8_NormalizeNameComponentEx_NormalizeNameComponentExCallback* NormalizeNameComponentEx;                                    
/*0x020*/             FUNCT_0037_0C10_NormalizeContextCleanup_NormalizeContextCleanupCallback* NormalizeContextCleanup;                                       
                  };                                                                                                                                          
              };                                                                                                                                              
/*0x028*/     enum _CALLBACK_NODE_FLAGS Flags;                                                                                                                
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                                                                                   
          }CALLBACK_NODE, *PCALLBACK_NODE;                                                                                                                    
                                                                                                                                                              
          typedef union _LARGE_INTEGER   // 4 elements, 0x8 bytes (sizeof) 
          {                                                                
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         LONG32       HighPart;                                   
              };                                                           
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         LONG32       HighPart;                                   
              }u;                                                          
/*0x000*/     INT64        QuadPart;                                       
          }LARGE_INTEGER, *PLARGE_INTEGER;                                  
                                                                           
          typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR // 4 elements, 0x14 bytes (sizeof)  
          {                                                                                  
/*0x000*/     UINT8        Type;                                                             
/*0x001*/     UINT8        ShareDisposition;                                                 
/*0x002*/     UINT16       Flags;                                                            
              union                                      // 14 elements, 0x10 bytes (sizeof) 
              {                                                                              
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Generic;                                                                  
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Port;                                                                     
                  struct                                 // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                          
/*0x004*/             ULONG32      Level;                                                    
/*0x008*/             ULONG32      Vector;                                                   
/*0x00C*/             UINT64       Affinity;                                                 
                  }Interrupt;                                                                
                  struct                                 // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                          
                      union                              // 2 elements, 0x10 bytes (sizeof)  
                      {                                                                      
                          struct                         // 4 elements, 0x10 bytes (sizeof)  
                          {                                                                  
/*0x004*/                     UINT16       Reserved;                                         
/*0x006*/                     UINT16       MessageCount;                                     
/*0x008*/                     ULONG32      Vector;                                           
/*0x00C*/                     UINT64       Affinity;                                         
                          }Raw;                                                              
                          struct                         // 3 elements, 0x10 bytes (sizeof)  
                          {                                                                  
/*0x004*/                     ULONG32      Level;                                            
/*0x008*/                     ULONG32      Vector;                                           
/*0x00C*/                     UINT64       Affinity;                                         
                          }Translated;                                                       
                      };                                                                     
                  }MessageInterrupt;                                                         
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Memory;                                                                   
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Channel;                                                  
/*0x008*/             ULONG32      Port;                                                     
/*0x00C*/             ULONG32      Reserved1;                                                
                  }Dma;                                                                      
                  struct                                 // 6 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Channel;                                                  
/*0x008*/             ULONG32      RequestLine;                                              
/*0x00C*/             UINT8        TransferWidth;                                            
/*0x00D*/             UINT8        Reserved1;                                                
/*0x00E*/             UINT8        Reserved2;                                                
/*0x00F*/             UINT8        Reserved3;                                                
                  }DmaV3;                                                                    
                  struct                                 // 1 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Data[3];                                                  
                  }DevicePrivate;                                                            
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Start;                                                    
/*0x008*/             ULONG32      Length;                                                   
/*0x00C*/             ULONG32      Reserved;                                                 
                  }BusNumber;                                                                
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      DataSize;                                                 
/*0x008*/             ULONG32      Reserved1;                                                
/*0x00C*/             ULONG32      Reserved2;                                                
                  }DeviceSpecificData;                                                       
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length40;                                                 
                  }Memory40;                                                                 
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length48;                                                 
                  }Memory48;                                                                 
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length64;                                                 
                  }Memory64;                                                                 
                  struct                                 // 6 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             UINT8        Class;                                                    
/*0x005*/             UINT8        Type;                                                     
/*0x006*/             UINT8        Reserved1;                                                
/*0x007*/             UINT8        Reserved2;                                                
/*0x008*/             ULONG32      IdLowPart;                                                
/*0x00C*/             ULONG32      IdHighPart;                                               
                  }Connection;                                                               
              }u;                                                                            
          }CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR;                                    
                                                                                             
          typedef struct _CM_PARTIAL_RESOURCE_LIST                          // 4 elements, 0x1C bytes (sizeof) 
          {                                                                                                    
/*0x000*/     UINT16       Version;                                                                            
/*0x002*/     UINT16       Revision;                                                                           
/*0x004*/     ULONG32      Count;                                                                              
/*0x008*/     struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];                                    
          }CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST;                                               
                                                                                                               
          typedef struct _CM_FULL_RESOURCE_DESCRIPTOR               // 3 elements, 0x24 bytes (sizeof) 
          {                                                                                            
/*0x000*/     enum _INTERFACE_TYPE InterfaceType;                                                      
/*0x004*/     ULONG32      BusNumber;                                                                  
/*0x008*/     struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList; // 4 elements, 0x1C bytes (sizeof) 
          }CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR;                                   
                                                                                                       
          typedef struct _CM_RESOURCE_LIST                 // 2 elements, 0x28 bytes (sizeof) 
          {                                                                                   
/*0x000*/     ULONG32      Count;                                                             
/*0x004*/     struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];                                    
          }CM_RESOURCE_LIST, *PCM_RESOURCE_LIST;                                              
                                                                                              
          typedef union _FLT_PARAMETERS                                                             // 33 elements, 0x30 bytes (sizeof) 
          {                                                                                                                             
              struct                                                                                // 7 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                         
/*0x008*/         ULONG32      Options;                                                                                                 
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         UINT16       FileAttributes;                                                                                          
/*0x012*/         UINT16       ShareAccess;                                                                                             
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         ULONG32      EaLength;                                                                                                
/*0x01C*/         UINT8        _PADDING2_[0x4];                                                                                         
/*0x020*/         VOID*        EaBuffer;                                                                                                
/*0x028*/         union _LARGE_INTEGER AllocationSize;                                              // 4 elements, 0x8 bytes (sizeof)   
              }Create;                                                                                                                  
              struct                                                                                // 5 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                         
/*0x008*/         ULONG32      Options;                                                                                                 
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         UINT16       Reserved;                                                                                                
/*0x012*/         UINT16       ShareAccess;                                                                                             
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         VOID*        Parameters;                                                                                              
              }CreatePipe;                                                                                                              
              struct                                                                                // 5 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                         
/*0x008*/         ULONG32      Options;                                                                                                 
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         UINT16       Reserved;                                                                                                
/*0x012*/         UINT16       ShareAccess;                                                                                             
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         VOID*        Parameters;                                                                                              
              }CreateMailslot;                                                                                                          
              struct                                                                                // 5 elements, 0x28 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         ULONG32      Key;                                                                                                     
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         union _LARGE_INTEGER ByteOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/         VOID*        ReadBuffer;                                                                                              
/*0x020*/         struct _MDL* MdlAddress;                                                                                              
              }Read;                                                                                                                    
              struct                                                                                // 5 elements, 0x28 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         ULONG32      Key;                                                                                                     
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         union _LARGE_INTEGER ByteOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/         VOID*        WriteBuffer;                                                                                             
/*0x020*/         struct _MDL* MdlAddress;                                                                                              
              }Write;                                                                                                                   
              struct                                                                                // 3 elements, 0x18 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         enum _FILE_INFORMATION_CLASS FileInformationClass;                                                                    
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         VOID*        InfoBuffer;                                                                                              
              }QueryFileInformation;                                                                                                    
              struct                                                                                // 8 elements, 0x28 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         enum _FILE_INFORMATION_CLASS FileInformationClass;                                                                    
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         struct _FILE_OBJECT* ParentOfTarget;                                                                                  
                  union                                                                             // 3 elements, 0x8 bytes (sizeof)   
                  {                                                                                                                     
                      struct                                                                        // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                                                 
/*0x018*/                 UINT8        ReplaceIfExists;                                                                                 
/*0x019*/                 UINT8        AdvanceOnly;                                                                                     
/*0x01A*/                 UINT8        _PADDING2_[0x6];                                                                                 
                      };                                                                                                                
/*0x018*/             ULONG32      ClusterCount;                                                                                        
/*0x018*/             VOID*        DeleteHandle;                                                                                        
                  };                                                                                                                    
/*0x020*/         VOID*        InfoBuffer;                                                                                              
              }SetFileInformation;                                                                                                      
              struct                                                                                // 6 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         VOID*        EaList;                                                                                                  
/*0x010*/         ULONG32      EaListLength;                                                                                            
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         ULONG32      EaIndex;                                                                                                 
/*0x01C*/         UINT8        _PADDING2_[0x4];                                                                                         
/*0x020*/         VOID*        EaBuffer;                                                                                                
/*0x028*/         struct _MDL* MdlAddress;                                                                                              
              }QueryEa;                                                                                                                 
              struct                                                                                // 3 elements, 0x18 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         VOID*        EaBuffer;                                                                                                
/*0x010*/         struct _MDL* MdlAddress;                                                                                              
              }SetEa;                                                                                                                   
              struct                                                                                // 3 elements, 0x18 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         enum _FSINFOCLASS FsInformationClass;                                                                                 
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         VOID*        VolumeBuffer;                                                                                            
              }QueryVolumeInformation;                                                                                                  
              struct                                                                                // 3 elements, 0x18 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         enum _FSINFOCLASS FsInformationClass;                                                                                 
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         VOID*        VolumeBuffer;                                                                                            
              }SetVolumeInformation;                                                                                                    
                  union                                                                             // 3 elements, 0x30 bytes (sizeof)  
                  {                                                                                                                     
                      struct                                                                        // 6 elements, 0x30 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 ULONG32      Length;                                                                                          
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 struct _UNICODE_STRING* FileName;                                                                             
/*0x010*/                 enum _FILE_INFORMATION_CLASS FileInformationClass;                                                            
/*0x014*/                 UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/                 ULONG32      FileIndex;                                                                                       
/*0x01C*/                 UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/                 VOID*        DirectoryBuffer;                                                                                 
/*0x028*/                 struct _MDL* MdlAddress;                                                                                      
                      }QueryDirectory;                                                                                                  
                      struct                                                                        // 6 elements, 0x30 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 ULONG32      Length;                                                                                          
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 ULONG32      CompletionFilter;                                                                                
/*0x00C*/                 UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/                 ULONG32      Spare1;                                                                                          
/*0x014*/                 UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/                 ULONG32      Spare2;                                                                                          
/*0x01C*/                 UINT8        _PADDING3_[0x4];                                                                                 
/*0x020*/                 VOID*        DirectoryBuffer;                                                                                 
/*0x028*/                 struct _MDL* MdlAddress;                                                                                      
                      }NotifyDirectory;                                                                                                 
                      struct                                                                        // 6 elements, 0x30 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 ULONG32      Length;                                                                                          
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 ULONG32      CompletionFilter;                                                                                
/*0x00C*/                 UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/                 enum _DIRECTORY_NOTIFY_INFORMATION_CLASS DirectoryNotifyInformationClass;                                     
/*0x014*/                 UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/                 ULONG32      Spare2;                                                                                          
/*0x01C*/                 UINT8        _PADDING3_[0x4];                                                                                 
/*0x020*/                 VOID*        DirectoryBuffer;                                                                                 
/*0x028*/                 struct _MDL* MdlAddress;                                                                                      
                      }NotifyDirectoryEx;                                                                                               
                  }DirectoryControl;                                                                                                    
              union                                                                                 // 5 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
                  struct                                                                            // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             struct _VPB* Vpb;                                                                                                 
/*0x008*/             struct _DEVICE_OBJECT* DeviceObject;                                                                              
                  }VerifyVolume;                                                                                                        
                  struct                                                                            // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      FsControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
                  }Common;                                                                                                              
                  struct                                                                            // 6 elements, 0x30 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      FsControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        InputBuffer;                                                                                         
/*0x020*/             VOID*        OutputBuffer;                                                                                        
/*0x028*/             struct _MDL* OutputMdlAddress;                                                                                    
                  }Neither;                                                                                                             
                  struct                                                                            // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      FsControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        SystemBuffer;                                                                                        
                  }Buffered;                                                                                                            
                  struct                                                                            // 6 elements, 0x30 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      FsControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        InputSystemBuffer;                                                                                   
/*0x020*/             VOID*        OutputBuffer;                                                                                        
/*0x028*/             struct _MDL* OutputMdlAddress;                                                                                    
                  }Direct;                                                                                                              
              }FileSystemControl;                                                                                                       
              union                                                                                 // 5 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
                  struct                                                                            // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      IoControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
                  }Common;                                                                                                              
                  struct                                                                            // 6 elements, 0x30 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      IoControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        InputBuffer;                                                                                         
/*0x020*/             VOID*        OutputBuffer;                                                                                        
/*0x028*/             struct _MDL* OutputMdlAddress;                                                                                    
                  }Neither;                                                                                                             
                  struct                                                                            // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      IoControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        SystemBuffer;                                                                                        
                  }Buffered;                                                                                                            
                  struct                                                                            // 6 elements, 0x30 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      IoControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        InputSystemBuffer;                                                                                   
/*0x020*/             VOID*        OutputBuffer;                                                                                        
/*0x028*/             struct _MDL* OutputMdlAddress;                                                                                    
                  }Direct;                                                                                                              
                  struct                                                                            // 5 elements, 0x28 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             ULONG32      OutputBufferLength;                                                                                  
/*0x004*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/             ULONG32      InputBufferLength;                                                                                   
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                     
/*0x010*/             ULONG32      IoControlCode;                                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                     
/*0x018*/             VOID*        InputBuffer;                                                                                         
/*0x020*/             VOID*        OutputBuffer;                                                                                        
                  }FastIo;                                                                                                              
              }DeviceIoControl;                                                                                                         
                  struct                                                                            // 6 elements, 0x28 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             union _LARGE_INTEGER* Length;                                                                                     
/*0x008*/             ULONG32      Key;                                                                                                 
/*0x00C*/             UINT8        _PADDING0_[0x4];                                                                                     
/*0x010*/             union _LARGE_INTEGER ByteOffset;                                              // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             struct _KPROCESS* ProcessId;                                                                                      
/*0x020*/             UINT8        FailImmediately;                                                                                     
/*0x021*/             UINT8        ExclusiveLock;                                                                                       
/*0x022*/             UINT8        _PADDING1_[0x6];                                                                                     
                  }LockControl;                                                                                                         
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      SecurityInformation;                                                                                     
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         ULONG32      Length;                                                                                                  
/*0x00C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x010*/         VOID*        SecurityBuffer;                                                                                          
/*0x018*/         struct _MDL* MdlAddress;                                                                                              
              }QuerySecurity;                                                                                                           
              struct                                                                                // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      SecurityInformation;                                                                                     
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         VOID*        SecurityDescriptor;                                                                                      
              }SetSecurity;                                                                                                             
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         UINT64       ProviderId;                                                                                              
/*0x008*/         VOID*        DataPath;                                                                                                
/*0x010*/         ULONG32      BufferSize;                                                                                              
/*0x014*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x018*/         VOID*        Buffer;                                                                                                  
              }WMI;                                                                                                                     
              struct                                                                                // 6 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         VOID*        StartSid;                                                                                                
/*0x010*/         struct _FILE_GET_QUOTA_INFORMATION* SidList;                                                                          
/*0x018*/         ULONG32      SidListLength;                                                                                           
/*0x01C*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x020*/         VOID*        QuotaBuffer;                                                                                             
/*0x028*/         struct _MDL* MdlAddress;                                                                                              
              }QueryQuota;                                                                                                              
              struct                                                                                // 3 elements, 0x18 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         ULONG32      Length;                                                                                                  
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x008*/         VOID*        QuotaBuffer;                                                                                             
/*0x010*/         struct _MDL* MdlAddress;                                                                                              
              }SetQuota;                                                                                                                
                  union                                                                             // 10 elements, 0x20 bytes (sizeof) 
                  {                                                                                                                     
                      struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 struct _CM_RESOURCE_LIST* AllocatedResources;                                                                 
/*0x008*/                 struct _CM_RESOURCE_LIST* AllocatedResourcesTranslated;                                                       
                      }StartDevice;                                                                                                     
                      struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                      {                                                                                                                 
/*0x000*/                 enum _DEVICE_RELATION_TYPE Type;                                                                              
                      }QueryDeviceRelations;                                                                                            
                      struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 struct _GUID* InterfaceType;                                                                                  
/*0x008*/                 UINT16       Size;                                                                                            
/*0x00A*/                 UINT16       Version;                                                                                         
/*0x00C*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x010*/                 struct _INTERFACE* Interface;                                                                                 
/*0x018*/                 VOID*        InterfaceSpecificData;                                                                           
                      }QueryInterface;                                                                                                  
                      struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                      {                                                                                                                 
/*0x000*/                 struct _DEVICE_CAPABILITIES* Capabilities;                                                                    
                      }DeviceCapabilities;                                                                                              
                      struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                      {                                                                                                                 
/*0x000*/                 struct _IO_RESOURCE_REQUIREMENTS_LIST* IoResourceRequirementList;                                             
                      }FilterResourceRequirements;                                                                                      
                      struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 ULONG32      WhichSpace;                                                                                      
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 VOID*        Buffer;                                                                                          
/*0x010*/                 ULONG32      Offset;                                                                                          
/*0x014*/                 UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/                 ULONG32      Length;                                                                                          
/*0x01C*/                 UINT8        _PADDING2_[0x4];                                                                                 
                      }ReadWriteConfig;                                                                                                 
                      struct                                                                        // 1 elements, 0x1 bytes (sizeof)   
                      {                                                                                                                 
/*0x000*/                 UINT8        Lock;                                                                                            
                      }SetLock;                                                                                                         
                      struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                      {                                                                                                                 
/*0x000*/                 enum _BUS_QUERY_ID_TYPE IdType;                                                                               
                      }QueryId;                                                                                                         
                      struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 enum _DEVICE_TEXT_TYPE DeviceTextType;                                                                        
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 ULONG32      LocaleId;                                                                                        
/*0x00C*/                 UINT8        _PADDING1_[0x4];                                                                                 
                      }QueryDeviceText;                                                                                                 
                      struct                                                                        // 3 elements, 0x10 bytes (sizeof)  
                      {                                                                                                                 
/*0x000*/                 UINT8        InPath;                                                                                          
/*0x001*/                 UINT8        Reserved[3];                                                                                     
/*0x004*/                 UINT8        _PADDING0_[0x4];                                                                                 
/*0x008*/                 enum _DEVICE_USAGE_NOTIFICATION_TYPE Type;                                                                    
/*0x00C*/                 UINT8        _PADDING1_[0x4];                                                                                 
                      }UsageNotification;                                                                                               
                  }Pnp;                                                                                                                 
                  struct                                                                            // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                     
/*0x000*/             enum _FS_FILTER_SECTION_SYNC_TYPE SyncType;                                                                       
/*0x004*/             ULONG32      PageProtection;                                                                                      
/*0x008*/             struct _FS_FILTER_SECTION_SYNC_OUTPUT* OutputInformation;                                                         
                  }AcquireForSectionSynchronization;                                                                                    
              struct                                                                                // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         union _LARGE_INTEGER* EndingOffset;                                                                                   
/*0x008*/         struct _ERESOURCE** ResourceToRelease;                                                                                
              }AcquireForModifiedPageWriter;                                                                                            
              struct                                                                                // 1 elements, 0x8 bytes (sizeof)   
              {                                                                                                                         
/*0x000*/         struct _ERESOURCE* ResourceToRelease;                                                                                 
              }ReleaseForModifiedPageWriter;                                                                                            
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         struct _IRP* Irp;                                                                                                     
/*0x008*/         VOID*        FileInformation;                                                                                         
/*0x010*/         ULONG32*     Length;                                                                                                  
/*0x018*/         enum _FILE_INFORMATION_CLASS FileInformationClass;                                                                    
/*0x01C*/         UINT8        _PADDING0_[0x4];                                                                                         
              }QueryOpen;                                                                                                               
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         union _LARGE_INTEGER FileOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x008*/         ULONG32      Length;                                                                                                  
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         ULONG32      LockKey;                                                                                                 
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         UINT8        CheckForReadOperation;                                                                                   
/*0x019*/         UINT8        _PADDING2_[0x7];                                                                                         
              }FastIoCheckIfPossible;                                                                                                   
              struct                                                                                // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         struct _IRP* Irp;                                                                                                     
/*0x008*/         struct _FILE_NETWORK_OPEN_INFORMATION* NetworkInformation;                                                            
              }NetworkQueryOpen;                                                                                                        
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         union _LARGE_INTEGER FileOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x008*/         ULONG32      Length;                                                                                                  
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         ULONG32      Key;                                                                                                     
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         struct _MDL** MdlChain;                                                                                               
              }MdlRead;                                                                                                                 
              struct                                                                                // 1 elements, 0x8 bytes (sizeof)   
              {                                                                                                                         
/*0x000*/         struct _MDL* MdlChain;                                                                                                
              }MdlReadComplete;                                                                                                         
              struct                                                                                // 4 elements, 0x20 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         union _LARGE_INTEGER FileOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x008*/         ULONG32      Length;                                                                                                  
/*0x00C*/         UINT8        _PADDING0_[0x4];                                                                                         
/*0x010*/         ULONG32      Key;                                                                                                     
/*0x014*/         UINT8        _PADDING1_[0x4];                                                                                         
/*0x018*/         struct _MDL** MdlChain;                                                                                               
              }PrepareMdlWrite;                                                                                                         
              struct                                                                                // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         union _LARGE_INTEGER FileOffset;                                                  // 4 elements, 0x8 bytes (sizeof)   
/*0x008*/         struct _MDL* MdlChain;                                                                                                
              }MdlWriteComplete;                                                                                                        
              struct                                                                                // 1 elements, 0x4 bytes (sizeof)   
              {                                                                                                                         
/*0x000*/         ULONG32      DeviceType;                                                                                              
              }MountVolume;                                                                                                             
              struct                                                                                // 6 elements, 0x30 bytes (sizeof)  
              {                                                                                                                         
/*0x000*/         VOID*        Argument1;                                                                                               
/*0x008*/         VOID*        Argument2;                                                                                               
/*0x010*/         VOID*        Argument3;                                                                                               
/*0x018*/         VOID*        Argument4;                                                                                               
/*0x020*/         VOID*        Argument5;                                                                                               
/*0x028*/         union _LARGE_INTEGER Argument6;                                                   // 4 elements, 0x8 bytes (sizeof)   
              }Others;                                                                                                                  
          }FLT_PARAMETERS, *PFLT_PARAMETERS;                                                                                            
                                                                                                                                        
          typedef struct _FLT_IO_PARAMETER_BLOCK     // 8 elements, 0x48 bytes (sizeof)  
          {                                                                              
/*0x000*/     ULONG32      IrpFlags;                                                     
/*0x004*/     UINT8        MajorFunction;                                                
/*0x005*/     UINT8        MinorFunction;                                                
/*0x006*/     UINT8        OperationFlags;                                               
/*0x007*/     UINT8        Reserved;                                                     
/*0x008*/     struct _FILE_OBJECT* TargetFileObject;                                     
/*0x010*/     struct _FLT_INSTANCE* TargetInstance;                                      
/*0x018*/     union _FLT_PARAMETERS Parameters;      // 33 elements, 0x30 bytes (sizeof) 
          }FLT_IO_PARAMETER_BLOCK, *PFLT_IO_PARAMETER_BLOCK;                                    
                                                                                         
          typedef struct _COMPLETION_NODE                                  // 8 elements, 0x80 bytes (sizeof) 
          {                                                                                                   
/*0x000*/     struct _IRP_CTRL* IrpCtrl;                                                                      
              union                                                        // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                               
/*0x008*/         struct _CALLBACK_NODE* CallbackNode;                                                        
/*0x008*/         struct _FLT_FILTER* Filter;                                                                 
              };                                                                                              
/*0x010*/     struct _LIST_ENTRY InstanceLink;                             // 2 elements, 0x10 bytes (sizeof) 
/*0x020*/     struct _COMPLETION_NODE_TRACKING_LIST* InstanceTrackingList;                                    
/*0x028*/     VOID*        Context;                                                                           
/*0x030*/     struct _FLT_IO_PARAMETER_BLOCK DataSnapshot;                 // 8 elements, 0x48 bytes (sizeof) 
/*0x078*/     UINT16       Flags;                                                                             
/*0x07A*/     UINT8        _PADDING0_[0x6];                                                                   
          }COMPLETION_NODE, *PCOMPLETION_NODE;                                                                
                                                                                                              
          typedef struct _COMPLETION_NODE_TRACKING_LIST  // 4 elements, 0x30 bytes (sizeof) 
          {                                                                                 
/*0x000*/     UINT64       Lock;                                                            
/*0x008*/     struct _LIST_ENTRY ActiveList;             // 2 elements, 0x10 bytes (sizeof) 
/*0x018*/     struct _LIST_ENTRY WaitingList;            // 2 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _TRACK_COMPLETION_NODES* TrackCtrl;                                    
          }COMPLETION_NODE_TRACKING_LIST, *PCOMPLETION_NODE_TRACKING_LIST;                                   
                                                                                            
          typedef struct _COMPRESSED_DATA_INFO         // 7 elements, 0xC bytes (sizeof) 
          {                                                                              
/*0x000*/     UINT16       CompressionFormatAndEngine;                                   
/*0x002*/     UINT8        CompressionUnitShift;                                         
/*0x003*/     UINT8        ChunkShift;                                                   
/*0x004*/     UINT8        ClusterShift;                                                 
/*0x005*/     UINT8        Reserved;                                                     
/*0x006*/     UINT16       NumberOfChunks;                                               
/*0x008*/     ULONG32      CompressedChunkSizes[1];                                      
          }COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO;                                  
                                                                                         
          typedef struct _M128A  // 2 elements, 0x10 bytes (sizeof) 
          {                                                         
/*0x000*/     UINT64       Low;                                     
/*0x008*/     INT64        High;                                    
          }M128A, *PM128A;                                          
                                                                    
          typedef struct _XSAVE_FORMAT         // 16 elements, 0x200 bytes (sizeof) 
          {                                                                         
/*0x000*/     UINT16       ControlWord;                                             
/*0x002*/     UINT16       StatusWord;                                              
/*0x004*/     UINT8        TagWord;                                                 
/*0x005*/     UINT8        Reserved1;                                               
/*0x006*/     UINT16       ErrorOpcode;                                             
/*0x008*/     ULONG32      ErrorOffset;                                             
/*0x00C*/     UINT16       ErrorSelector;                                           
/*0x00E*/     UINT16       Reserved2;                                               
/*0x010*/     ULONG32      DataOffset;                                              
/*0x014*/     UINT16       DataSelector;                                            
/*0x016*/     UINT16       Reserved3;                                               
/*0x018*/     ULONG32      MxCsr;                                                   
/*0x01C*/     ULONG32      MxCsr_Mask;                                              
/*0x020*/     struct _M128A FloatRegisters[8];                                      
/*0x0A0*/     struct _M128A XmmRegisters[16];                                       
/*0x1A0*/     UINT8        Reserved4[96];                                           
          }XSAVE_FORMAT, *PXSAVE_FORMAT;                                            
                                                                                    
          typedef struct _CONTEXT                    // 64 elements, 0x4D0 bytes (sizeof) 
          {                                                                               
/*0x000*/     UINT64       P1Home;                                                        
/*0x008*/     UINT64       P2Home;                                                        
/*0x010*/     UINT64       P3Home;                                                        
/*0x018*/     UINT64       P4Home;                                                        
/*0x020*/     UINT64       P5Home;                                                        
/*0x028*/     UINT64       P6Home;                                                        
/*0x030*/     ULONG32      ContextFlags;                                                  
/*0x034*/     ULONG32      MxCsr;                                                         
/*0x038*/     UINT16       SegCs;                                                         
/*0x03A*/     UINT16       SegDs;                                                         
/*0x03C*/     UINT16       SegEs;                                                         
/*0x03E*/     UINT16       SegFs;                                                         
/*0x040*/     UINT16       SegGs;                                                         
/*0x042*/     UINT16       SegSs;                                                         
/*0x044*/     ULONG32      EFlags;                                                        
/*0x048*/     UINT64       Dr0;                                                           
/*0x050*/     UINT64       Dr1;                                                           
/*0x058*/     UINT64       Dr2;                                                           
/*0x060*/     UINT64       Dr3;                                                           
/*0x068*/     UINT64       Dr6;                                                           
/*0x070*/     UINT64       Dr7;                                                           
/*0x078*/     UINT64       Rax;                                                           
/*0x080*/     UINT64       Rcx;                                                           
/*0x088*/     UINT64       Rdx;                                                           
/*0x090*/     UINT64       Rbx;                                                           
/*0x098*/     UINT64       Rsp;                                                           
/*0x0A0*/     UINT64       Rbp;                                                           
/*0x0A8*/     UINT64       Rsi;                                                           
/*0x0B0*/     UINT64       Rdi;                                                           
/*0x0B8*/     UINT64       R8;                                                            
/*0x0C0*/     UINT64       R9;                                                            
/*0x0C8*/     UINT64       R10;                                                           
/*0x0D0*/     UINT64       R11;                                                           
/*0x0D8*/     UINT64       R12;                                                           
/*0x0E0*/     UINT64       R13;                                                           
/*0x0E8*/     UINT64       R14;                                                           
/*0x0F0*/     UINT64       R15;                                                           
/*0x0F8*/     UINT64       Rip;                                                           
              union                                  // 2 elements, 0x200 bytes (sizeof)  
              {                                                                           
/*0x100*/         struct _XSAVE_FORMAT FltSave;      // 16 elements, 0x200 bytes (sizeof) 
                  struct                             // 18 elements, 0x200 bytes (sizeof) 
                  {                                                                       
/*0x100*/             struct _M128A Header[2];                                            
/*0x120*/             struct _M128A Legacy[8];                                            
/*0x1A0*/             struct _M128A Xmm0;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1B0*/             struct _M128A Xmm1;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1C0*/             struct _M128A Xmm2;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1D0*/             struct _M128A Xmm3;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1E0*/             struct _M128A Xmm4;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1F0*/             struct _M128A Xmm5;            // 2 elements, 0x10 bytes (sizeof)   
/*0x200*/             struct _M128A Xmm6;            // 2 elements, 0x10 bytes (sizeof)   
/*0x210*/             struct _M128A Xmm7;            // 2 elements, 0x10 bytes (sizeof)   
/*0x220*/             struct _M128A Xmm8;            // 2 elements, 0x10 bytes (sizeof)   
/*0x230*/             struct _M128A Xmm9;            // 2 elements, 0x10 bytes (sizeof)   
/*0x240*/             struct _M128A Xmm10;           // 2 elements, 0x10 bytes (sizeof)   
/*0x250*/             struct _M128A Xmm11;           // 2 elements, 0x10 bytes (sizeof)   
/*0x260*/             struct _M128A Xmm12;           // 2 elements, 0x10 bytes (sizeof)   
/*0x270*/             struct _M128A Xmm13;           // 2 elements, 0x10 bytes (sizeof)   
/*0x280*/             struct _M128A Xmm14;           // 2 elements, 0x10 bytes (sizeof)   
/*0x290*/             struct _M128A Xmm15;           // 2 elements, 0x10 bytes (sizeof)   
/*0x2A0*/             UINT8        _PADDING0_[0x60];                                      
                  };                                                                      
              };                                                                          
/*0x300*/     struct _M128A VectorRegister[26];                                           
/*0x4A0*/     UINT64       VectorControl;                                                 
/*0x4A8*/     UINT64       DebugControl;                                                  
/*0x4B0*/     UINT64       LastBranchToRip;                                               
/*0x4B8*/     UINT64       LastBranchFromRip;                                             
/*0x4C0*/     UINT64       LastExceptionToRip;                                            
/*0x4C8*/     UINT64       LastExceptionFromRip;                                          
          }CONTEXT, *PCONTEXT;                                                            
                                                                                          
          typedef struct _TREE_ROOT          // 1 elements, 0x8 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _RTL_SPLAY_LINKS* Tree;                                   
          }TREE_ROOT, *PTREE_ROOT;                                             
                                                                               
          typedef struct _CONTEXT_LIST_CTRL // 1 elements, 0x8 bytes (sizeof) 
          {                                                                   
/*0x000*/     struct _TREE_ROOT List;       // 1 elements, 0x8 bytes (sizeof) 
          }CONTEXT_LIST_CTRL, *PCONTEXT_LIST_CTRL;                                  
                                                                              
          typedef struct _RTL_SPLAY_LINKS          // 3 elements, 0x18 bytes (sizeof) 
          {                                                                           
/*0x000*/     struct _RTL_SPLAY_LINKS* Parent;                                        
/*0x008*/     struct _RTL_SPLAY_LINKS* LeftChild;                                     
/*0x010*/     struct _RTL_SPLAY_LINKS* RightChild;                                    
          }RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS;                                        
                                                                                      
          typedef struct _TREE_NODE         // 5 elements, 0x38 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _RTL_SPLAY_LINKS Link; // 3 elements, 0x18 bytes (sizeof) 
/*0x018*/     struct _TREE_ROOT* TreeRoot;                                     
/*0x020*/     VOID*        Key1;                                               
/*0x028*/     VOID*        Key2;                                               
/*0x030*/     ULONG32      Flags;                                              
/*0x034*/     UINT8        _PADDING0_[0x4];                                    
          }TREE_NODE, *PTREE_NODE;                                             
                                                                               
          typedef union _FLT_TYPE         // 2 elements, 0x4 bytes (sizeof) 
          {                                                                 
              struct                      // 2 elements, 0x4 bytes (sizeof) 
              {                                                             
/*0x000*/         UINT16       Signature;                                   
/*0x002*/         UINT16       Size;                                        
              };                                                            
          }FLT_TYPE, *PFLT_TYPE;                                            
                                                                            
          typedef struct _WORK_QUEUE_ITEM                                                                                                             // 3 elements, 0x20 bytes (sizeof) 
          {                                                                                                                                                                              
/*0x000*/     struct _LIST_ENTRY List;                                                                                                                // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* WorkerRoutine;                                    
/*0x018*/     VOID*        Parameter;                                                                                                                                                    
          }WORK_QUEUE_ITEM, *PWORK_QUEUE_ITEM;                                                                                                                                           
                                                                                                                                                                                         
          typedef struct _FLTP_WORKITEM         // 2 elements, 0x28 bytes (sizeof) 
          {                                                                        
/*0x000*/     union _FLT_TYPE Type;             // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                        
/*0x008*/     struct _WORK_QUEUE_ITEM WorkItem; // 3 elements, 0x20 bytes (sizeof) 
          }FLTP_WORKITEM, *PFLTP_WORKITEM;                                         
                                                                                   
          typedef struct _CONTEXT_NODE                                    // 8 elements, 0x60 bytes (sizeof) 
          {                                                                                                  
              union                                                       // 3 elements, 0x8 bytes (sizeof)  
              {                                                                                              
/*0x000*/         struct _TX_CONTEXT_EXTENSION* TxCtxExtension;                                              
/*0x000*/         struct _SECTION_CONTEXT_EXTENSION* SectionCtxExtension;                                    
/*0x000*/         VOID*        Data;                                                                         
              };                                                                                             
/*0x008*/     struct _ALLOCATE_CONTEXT_HEADER* RegInfo;                                                      
              union                                                       // 6 elements, 0x8 bytes (sizeof)  
              {                                                                                              
/*0x010*/         struct _FLT_VOLUME* Volume;                                                                
/*0x010*/         struct _FLT_INSTANCE* Instance;                                                            
/*0x010*/         struct _STREAM_LIST_CTRL* StreamList;                                                      
/*0x010*/         struct _FILE_LIST_CTRL* FileList;                                                          
/*0x010*/         VOID*        Pointer;                                                                      
/*0x010*/         UINT64       Data;                                                                         
              }AttachedObject;                                                                               
              union                                                       // 2 elements, 0x38 bytes (sizeof) 
              {                                                                                              
/*0x018*/         struct _TREE_NODE TreeLink;                             // 5 elements, 0x38 bytes (sizeof) 
/*0x018*/         struct _FLTP_WORKITEM FltWork;                          // 2 elements, 0x28 bytes (sizeof) 
              };                                                                                             
/*0x050*/     LONG32       UseCount;                                                                         
/*0x054*/     UINT8        _PADDING0_[0xC];                                                                  
          }CONTEXT_NODE, *PCONTEXT_NODE;                                                                     
                                                                                                             
          typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                     
/*0x000*/     ULONG32      Size;                                                                
/*0x004*/     UINT8        _PADDING0_[0x4];                                                     
/*0x008*/     WCHAR*       TriggerId;                                                           
          }CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG, *PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;                                   
                                                                                                
          typedef struct _DEVICE_CAPABILITIES               // 34 elements, 0x40 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT16       Size;                                                                
/*0x002*/     UINT16       Version;                                                             
              struct                                        // 24 elements, 0x4 bytes (sizeof)  
              {                                                                                 
/*0x004*/         ULONG32      DeviceD1 : 1;                // 0 BitPosition                    
/*0x004*/         ULONG32      DeviceD2 : 1;                // 1 BitPosition                    
/*0x004*/         ULONG32      LockSupported : 1;           // 2 BitPosition                    
/*0x004*/         ULONG32      EjectSupported : 1;          // 3 BitPosition                    
/*0x004*/         ULONG32      Removable : 1;               // 4 BitPosition                    
/*0x004*/         ULONG32      DockDevice : 1;              // 5 BitPosition                    
/*0x004*/         ULONG32      UniqueID : 1;                // 6 BitPosition                    
/*0x004*/         ULONG32      SilentInstall : 1;           // 7 BitPosition                    
/*0x004*/         ULONG32      RawDeviceOK : 1;             // 8 BitPosition                    
/*0x004*/         ULONG32      SurpriseRemovalOK : 1;       // 9 BitPosition                    
/*0x004*/         ULONG32      WakeFromD0 : 1;              // 10 BitPosition                   
/*0x004*/         ULONG32      WakeFromD1 : 1;              // 11 BitPosition                   
/*0x004*/         ULONG32      WakeFromD2 : 1;              // 12 BitPosition                   
/*0x004*/         ULONG32      WakeFromD3 : 1;              // 13 BitPosition                   
/*0x004*/         ULONG32      HardwareDisabled : 1;        // 14 BitPosition                   
/*0x004*/         ULONG32      NonDynamic : 1;              // 15 BitPosition                   
/*0x004*/         ULONG32      WarmEjectSupported : 1;      // 16 BitPosition                   
/*0x004*/         ULONG32      NoDisplayInUI : 1;           // 17 BitPosition                   
/*0x004*/         ULONG32      Reserved1 : 1;               // 18 BitPosition                   
/*0x004*/         ULONG32      WakeFromInterrupt : 1;       // 19 BitPosition                   
/*0x004*/         ULONG32      SecureDevice : 1;            // 20 BitPosition                   
/*0x004*/         ULONG32      ChildOfVgaEnabledBridge : 1; // 21 BitPosition                   
/*0x004*/         ULONG32      DecodeIoOnBoot : 1;          // 22 BitPosition                   
/*0x004*/         ULONG32      Reserved : 9;                // 23 BitPosition                   
              };                                                                                
/*0x008*/     ULONG32      Address;                                                             
/*0x00C*/     ULONG32      UINumber;                                                            
/*0x010*/     enum _DEVICE_POWER_STATE DeviceState[7];                                          
/*0x02C*/     enum _SYSTEM_POWER_STATE SystemWake;                                              
/*0x030*/     enum _DEVICE_POWER_STATE DeviceWake;                                              
/*0x034*/     ULONG32      D1Latency;                                                           
/*0x038*/     ULONG32      D2Latency;                                                           
/*0x03C*/     ULONG32      D3Latency;                                                           
          }DEVICE_CAPABILITIES, *PDEVICE_CAPABILITIES;                                          
                                                                                                
          typedef struct _DEVICE_EXTENSION_HEADER            // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                     
/*0x000*/     union _FLT_TYPE Type;                          // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                                     
/*0x008*/     struct _DEVICE_OBJECT* AttachedToDeviceObject;                                    
/*0x010*/     struct _FLTP_FRAME* Frame;                                                        
          }DEVICE_EXTENSION_HEADER, *PDEVICE_EXTENSION_HEADER;                                   
                                                                                                
          typedef struct _KDEVICE_QUEUE_ENTRY     // 3 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _LIST_ENTRY DeviceListEntry; // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     ULONG32      SortKey;                                                  
/*0x014*/     UINT8        Inserted;                                                 
/*0x015*/     UINT8        _PADDING0_[0x3];                                          
          }KDEVICE_QUEUE_ENTRY, *PKDEVICE_QUEUE_ENTRY;                                   
                                                                                     
          typedef struct _WAIT_CONTEXT_BLOCK                    // 14 elements, 0x48 bytes (sizeof) 
          {                                                                                         
              union                                             // 2 elements, 0x18 bytes (sizeof)  
              {                                                                                     
/*0x000*/         struct _KDEVICE_QUEUE_ENTRY WaitQueueEntry;   // 3 elements, 0x18 bytes (sizeof)  
                  struct                                        // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                 
/*0x000*/             struct _LIST_ENTRY DmaWaitEntry;          // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/             ULONG32      NumberOfChannels;                                                
                      struct                                    // 5 elements, 0x4 bytes (sizeof)   
                      {                                                                             
/*0x014*/                 ULONG32      SyncCallback : 1;        // 0 BitPosition                    
/*0x014*/                 ULONG32      DmaContext : 1;          // 1 BitPosition                    
/*0x014*/                 ULONG32      ZeroMapRegisters : 1;    // 2 BitPosition                    
/*0x014*/                 ULONG32      Reserved : 9;            // 3 BitPosition                    
/*0x014*/                 ULONG32      NumberOfRemapPages : 20; // 12 BitPosition                   
                      };                                                                            
                  };                                                                                
              };                                                                                    
/*0x018*/     FUNCT_02D1_02D0_DeviceRoutine* DeviceRoutine;                                         
/*0x020*/     VOID*        DeviceContext;                                                           
/*0x028*/     ULONG32      NumberOfMapRegisters;                                                    
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                         
/*0x030*/     VOID*        DeviceObject;                                                            
/*0x038*/     VOID*        CurrentIrp;                                                              
/*0x040*/     struct _KDPC* BufferChainingDpc;                                                      
          }WAIT_CONTEXT_BLOCK, *PWAIT_CONTEXT_BLOCK;                                                
                                                                                                    
          typedef struct _KDEVICE_QUEUE          // 7 elements, 0x28 bytes (sizeof) 
          {                                                                         
/*0x000*/     INT16        Type;                                                    
/*0x002*/     INT16        Size;                                                    
/*0x004*/     UINT8        _PADDING0_[0x4];                                         
/*0x008*/     struct _LIST_ENTRY DeviceListHead; // 2 elements, 0x10 bytes (sizeof) 
/*0x018*/     UINT64       Lock;                                                    
              union                              // 2 elements, 0x8 bytes (sizeof)  
              {                                                                     
/*0x020*/         UINT8        Busy;                                                
                  struct                         // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                 
/*0x020*/             INT64        Reserved : 8; // 0 BitPosition                   
/*0x020*/             INT64        Hint : 56;    // 8 BitPosition                   
                  };                                                                
              };                                                                    
          }KDEVICE_QUEUE, *PKDEVICE_QUEUE;                                          
                                                                                    
          typedef struct _KDPC                                  // 11 elements, 0x40 bytes (sizeof) 
          {                                                                                         
              union                                             // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                     
/*0x000*/         ULONG32      TargetInfoAsUlong;                                                   
                  struct                                        // 3 elements, 0x8 bytes (sizeof)   
                  {                                                                                 
/*0x000*/             UINT8        Type;                                                            
/*0x001*/             UINT8        Importance;                                                      
/*0x002*/             UINT16       Number;                                                          
/*0x004*/             UINT8        _PADDING0_[0x4];                                                 
                  };                                                                                
              };                                                                                    
/*0x008*/     struct _SINGLE_LIST_ENTRY DpcListEntry;           // 1 elements, 0x8 bytes (sizeof)   
/*0x010*/     UINT64       ProcessorHistory;                                                        
/*0x018*/     FUNCT_0037_02E8_DeferredRoutine* DeferredRoutine;                                     
/*0x020*/     VOID*        DeferredContext;                                                         
/*0x028*/     VOID*        SystemArgument1;                                                         
/*0x030*/     VOID*        SystemArgument2;                                                         
/*0x038*/     VOID*        DpcData;                                                                 
          }KDPC, *PKDPC;                                                                            
                                                                                                    
          typedef struct _DISPATCHER_HEADER                                // 58 elements, 0x18 bytes (sizeof) 
          {                                                                                                    
              union                                                        // 8 elements, 0x4 bytes (sizeof)   
              {                                                                                                
/*0x000*/         LONG32       Lock;                                                                           
/*0x000*/         LONG32       LockNV;                                                                         
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        Type;                                                                       
/*0x001*/             UINT8        Signalling;                                                                 
/*0x002*/             UINT8        Size;                                                                       
/*0x003*/             UINT8        Reserved1;                                                                  
                  };                                                                                           
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        TimerType;                                                                  
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x001*/                 UINT8        TimerControlFlags;                                                      
                          struct                                           // 3 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x001*/                     UINT8        Absolute : 1;                   // 0 BitPosition                    
/*0x001*/                     UINT8        Wake : 1;                       // 1 BitPosition                    
/*0x001*/                     UINT8        EncodedTolerableDelay : 6;      // 2 BitPosition                    
                          };                                                                                   
                      };                                                                                       
/*0x002*/             UINT8        Hand;                                                                       
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x003*/                 UINT8        TimerMiscFlags;                                                         
                          struct                                           // 3 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x003*/                     UINT8        Index : 6;                      // 0 BitPosition                    
/*0x003*/                     UINT8        Inserted : 1;                   // 6 BitPosition                    
/*0x003*/                     UINT8        Expired : 1;                    // 7 BitPosition                    
                          };                                                                                   
                      };                                                                                       
                  };                                                                                           
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        Timer2Type;                                                                 
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x001*/                 UINT8        Timer2Flags;                                                            
                          struct                                           // 7 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x001*/                     UINT8        Timer2Inserted : 1;             // 0 BitPosition                    
/*0x001*/                     UINT8        Timer2Expiring : 1;             // 1 BitPosition                    
/*0x001*/                     UINT8        Timer2CancelPending : 1;        // 2 BitPosition                    
/*0x001*/                     UINT8        Timer2SetPending : 1;           // 3 BitPosition                    
/*0x001*/                     UINT8        Timer2Running : 1;              // 4 BitPosition                    
/*0x001*/                     UINT8        Timer2Disabled : 1;             // 5 BitPosition                    
/*0x001*/                     UINT8        Timer2ReservedFlags : 2;        // 6 BitPosition                    
                          };                                                                                   
                      };                                                                                       
/*0x002*/             UINT8        Timer2ComponentId;                                                          
/*0x003*/             UINT8        Timer2RelativeId;                                                           
                  };                                                                                           
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        QueueType;                                                                  
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x001*/                 UINT8        QueueControlFlags;                                                      
                          struct                                           // 3 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x001*/                     UINT8        Abandoned : 1;                  // 0 BitPosition                    
/*0x001*/                     UINT8        DisableIncrement : 1;           // 1 BitPosition                    
/*0x001*/                     UINT8        QueueReservedControlFlags : 6;  // 2 BitPosition                    
                          };                                                                                   
                      };                                                                                       
/*0x002*/             UINT8        QueueSize;                                                                  
/*0x003*/             UINT8        QueueReserved;                                                              
                  };                                                                                           
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        ThreadType;                                                                 
/*0x001*/             UINT8        ThreadReserved;                                                             
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x002*/                 UINT8        ThreadControlFlags;                                                     
                          struct                                           // 8 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x002*/                     UINT8        CycleProfiling : 1;             // 0 BitPosition                    
/*0x002*/                     UINT8        CounterProfiling : 1;           // 1 BitPosition                    
/*0x002*/                     UINT8        GroupScheduling : 1;            // 2 BitPosition                    
/*0x002*/                     UINT8        AffinitySet : 1;                // 3 BitPosition                    
/*0x002*/                     UINT8        Tagged : 1;                     // 4 BitPosition                    
/*0x002*/                     UINT8        EnergyProfiling : 1;            // 5 BitPosition                    
/*0x002*/                     UINT8        SchedulerAssist : 1;            // 6 BitPosition                    
/*0x002*/                     UINT8        ThreadReservedControlFlags : 1; // 7 BitPosition                    
                          };                                                                                   
                      };                                                                                       
                      union                                                // 2 elements, 0x1 bytes (sizeof)   
                      {                                                                                        
/*0x003*/                 UINT8        DebugActive;                                                            
                          struct                                           // 6 elements, 0x1 bytes (sizeof)   
                          {                                                                                    
/*0x003*/                     UINT8        ActiveDR7 : 1;                  // 0 BitPosition                    
/*0x003*/                     UINT8        Instrumented : 1;               // 1 BitPosition                    
/*0x003*/                     UINT8        Minimal : 1;                    // 2 BitPosition                    
/*0x003*/                     UINT8        Reserved4 : 3;                  // 3 BitPosition                    
/*0x003*/                     UINT8        UmsScheduled : 1;               // 6 BitPosition                    
/*0x003*/                     UINT8        UmsPrimary : 1;                 // 7 BitPosition                    
                          };                                                                                   
                      };                                                                                       
                  };                                                                                           
                  struct                                                   // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                            
/*0x000*/             UINT8        MutantType;                                                                 
/*0x001*/             UINT8        MutantSize;                                                                 
/*0x002*/             UINT8        DpcActive;                                                                  
/*0x003*/             UINT8        MutantReserved;                                                             
                  };                                                                                           
              };                                                                                               
/*0x004*/     LONG32       SignalState;                                                                        
/*0x008*/     struct _LIST_ENTRY WaitListHead;                             // 2 elements, 0x10 bytes (sizeof)  
          }DISPATCHER_HEADER, *PDISPATCHER_HEADER;                                                             
                                                                                                               
          typedef struct _KEVENT                // 1 elements, 0x18 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _DISPATCHER_HEADER Header; // 58 elements, 0x18 bytes (sizeof) 
          }KEVENT, *PKEVENT;                                                        
                                                                                    
          typedef struct _DEVICE_OBJECT                        // 25 elements, 0x150 bytes (sizeof) 
          {                                                                                         
/*0x000*/     INT16        Type;                                                                    
/*0x002*/     UINT16       Size;                                                                    
/*0x004*/     LONG32       ReferenceCount;                                                          
/*0x008*/     struct _DRIVER_OBJECT* DriverObject;                                                  
/*0x010*/     struct _DEVICE_OBJECT* NextDevice;                                                    
/*0x018*/     struct _DEVICE_OBJECT* AttachedDevice;                                                
/*0x020*/     struct _IRP* CurrentIrp;                                                              
/*0x028*/     struct _IO_TIMER* Timer;                                                              
/*0x030*/     ULONG32      Flags;                                                                   
/*0x034*/     ULONG32      Characteristics;                                                         
/*0x038*/     struct _VPB* Vpb;                                                                     
/*0x040*/     VOID*        DeviceExtension;                                                         
/*0x048*/     ULONG32      DeviceType;                                                              
/*0x04C*/     CHAR         StackSize;                                                               
/*0x04D*/     UINT8        _PADDING0_[0x3];                                                         
              union                                            // 2 elements, 0x48 bytes (sizeof)   
              {                                                                                     
/*0x050*/         struct _LIST_ENTRY ListEntry;                // 2 elements, 0x10 bytes (sizeof)   
/*0x050*/         struct _WAIT_CONTEXT_BLOCK Wcb;              // 14 elements, 0x48 bytes (sizeof)  
              }Queue;                                                                               
/*0x098*/     ULONG32      AlignmentRequirement;                                                    
/*0x09C*/     UINT8        _PADDING1_[0x4];                                                         
/*0x0A0*/     struct _KDEVICE_QUEUE DeviceQueue;               // 7 elements, 0x28 bytes (sizeof)   
/*0x0C8*/     struct _KDPC Dpc;                                // 11 elements, 0x40 bytes (sizeof)  
/*0x108*/     ULONG32      ActiveThreadCount;                                                       
/*0x10C*/     UINT8        _PADDING2_[0x4];                                                         
/*0x110*/     VOID*        SecurityDescriptor;                                                      
/*0x118*/     struct _KEVENT DeviceLock;                       // 1 elements, 0x18 bytes (sizeof)   
/*0x130*/     UINT16       SectorSize;                                                              
/*0x132*/     UINT16       Spare1;                                                                  
/*0x134*/     UINT8        _PADDING3_[0x4];                                                         
/*0x138*/     struct _DEVOBJ_EXTENSION* DeviceObjectExtension;                                      
/*0x140*/     VOID*        Reserved;                                                                
/*0x148*/     UINT8        _PADDING4_[0x8];                                                         
          }DEVICE_OBJECT, *PDEVICE_OBJECT;                                                          
                                                                                                    
typedef struct _DEVICE_OBJECT_POWER_EXTENSION // 0 elements, 0x0 bytes (sizeof) 
{                                                                               
}DEVICE_OBJECT_POWER_EXTENSION, *PDEVICE_OBJECT_POWER_EXTENSION;                                  
                                                                                
          typedef struct _DEVOBJ_EXTENSION                 // 15 elements, 0x68 bytes (sizeof) 
          {                                                                                    
/*0x000*/     INT16        Type;                                                               
/*0x002*/     UINT16       Size;                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                    
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                             
/*0x010*/     ULONG32      PowerFlags;                                                         
/*0x014*/     UINT8        _PADDING1_[0x4];                                                    
/*0x018*/     struct _DEVICE_OBJECT_POWER_EXTENSION* Dope;                                     
/*0x020*/     ULONG32      ExtensionFlags;                                                     
/*0x024*/     UINT8        _PADDING2_[0x4];                                                    
/*0x028*/     VOID*        DeviceNode;                                                         
/*0x030*/     struct _DEVICE_OBJECT* AttachedTo;                                               
/*0x038*/     LONG32       StartIoCount;                                                       
/*0x03C*/     LONG32       StartIoKey;                                                         
/*0x040*/     ULONG32      StartIoFlags;                                                       
/*0x044*/     UINT8        _PADDING3_[0x4];                                                    
/*0x048*/     struct _VPB* Vpb;                                                                
/*0x050*/     VOID*        DependencyNode;                                                     
/*0x058*/     VOID*        InterruptContext;                                                   
/*0x060*/     VOID*        VerifierContext;                                                    
          }DEVOBJ_EXTENSION, *PDEVOBJ_EXTENSION;                                               
                                                                                               
          typedef struct _DMA_ADAPTER                // 3 elements, 0x10 bytes (sizeof) 
          {                                                                             
/*0x000*/     UINT16       Version;                                                     
/*0x002*/     UINT16       Size;                                                        
/*0x004*/     UINT8        _PADDING0_[0x4];                                             
/*0x008*/     struct _DMA_OPERATIONS* DmaOperations;                                    
          }DMA_ADAPTER, *PDMA_ADAPTER;                                                  
                                                                                        
          typedef struct _DMA_ADAPTER_INFO_V1       // 5 elements, 0x14 bytes (sizeof) 
          {                                                                            
/*0x000*/     ULONG32      ReadDmaCounterAvailable;                                    
/*0x004*/     ULONG32      ScatterGatherLimit;                                         
/*0x008*/     ULONG32      DmaAddressWidth;                                            
/*0x00C*/     ULONG32      Flags;                                                      
/*0x010*/     ULONG32      MinimumTransferUnit;                                        
          }DMA_ADAPTER_INFO_V1, *PDMA_ADAPTER_INFO_V1;                                   
                                                                                       
          typedef struct _DMA_ADAPTER_INFO    // 2 elements, 0x18 bytes (sizeof) 
          {                                                                      
/*0x000*/     ULONG32      Version;                                              
/*0x004*/     struct _DMA_ADAPTER_INFO_V1 V1; // 5 elements, 0x14 bytes (sizeof) 
          }DMA_ADAPTER_INFO, *PDMA_ADAPTER_INFO;                                   
                                                                                 
          typedef struct _DMA_OPERATIONS                                                                                     // 35 elements, 0x118 bytes (sizeof) 
          {                                                                                                                                                       
/*0x000*/     ULONG32      Size;                                                                                                                                  
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                       
/*0x008*/     FUNCT_0037_0632_PutDmaAdapter_FreeAdapterChannel* PutDmaAdapter;                                                                                    
/*0x010*/     FUNCT_0036_0636_AllocateCommonBuffer* AllocateCommonBuffer;                                                                                         
/*0x018*/     FUNCT_0037_063C_FreeCommonBuffer* FreeCommonBuffer;                                                                                                 
/*0x020*/     FUNCT_002F_0643_AllocateAdapterChannel* AllocateAdapterChannel;                                                                                     
/*0x028*/     FUNCT_009D_064A_FlushAdapterBuffers* FlushAdapterBuffers;                                                                                           
/*0x030*/     FUNCT_0037_0632_PutDmaAdapter_FreeAdapterChannel* FreeAdapterChannel;                                                                               
/*0x038*/     FUNCT_0037_0652_FreeMapRegisters* FreeMapRegisters;                                                                                                 
/*0x040*/     FUNCT_0039_0657_MapTransfer* MapTransfer;                                                                                                           
/*0x048*/     FUNCT_0009_065F_GetDmaAlignment_ReadDmaCounter* GetDmaAlignment;                                                                                    
/*0x050*/     FUNCT_0009_065F_GetDmaAlignment_ReadDmaCounter* ReadDmaCounter;                                                                                     
/*0x058*/     FUNCT_002F_0661_GetScatterGatherList* GetScatterGatherList;                                                                                         
/*0x060*/     FUNCT_0037_067B_PutScatterGatherList* PutScatterGatherList;                                                                                         
/*0x068*/     FUNCT_002F_0680_CalculateScatterGatherList* CalculateScatterGatherList;                                                                             
/*0x070*/     FUNCT_002F_0688_BuildScatterGatherList* BuildScatterGatherList;                                                                                     
/*0x078*/     FUNCT_002F_0694_BuildMdlFromScatterGatherList* BuildMdlFromScatterGatherList;                                                                       
/*0x080*/     FUNCT_002F_069A_GetDmaAdapterInfo* GetDmaAdapterInfo;                                                                                               
/*0x088*/     FUNCT_002F_06A8_GetDmaTransferInfo* GetDmaTransferInfo;                                                                                             
/*0x090*/     FUNCT_002F_06BE_InitializeDmaTransferContext_CancelMappedTransfer_JoinDmaDomain* InitializeDmaTransferContext;                                      
/*0x098*/     FUNCT_0036_06C2_AllocateCommonBufferEx* AllocateCommonBufferEx;                                                                                     
/*0x0A0*/     FUNCT_002F_06CA_AllocateAdapterChannelEx* AllocateAdapterChannelEx;                                                                                 
/*0x0A8*/     FUNCT_002F_06D5_ConfigureAdapterChannel* ConfigureAdapterChannel;                                                                                   
/*0x0B0*/     FUNCT_009D_06DA_CancelAdapterChannel* CancelAdapterChannel;                                                                                         
/*0x0B8*/     FUNCT_002F_06DF_MapTransferEx* MapTransferEx;                                                                                                       
/*0x0C0*/     FUNCT_002F_06F7_GetScatterGatherListEx* GetScatterGatherListEx;                                                                                     
/*0x0C8*/     FUNCT_002F_0707_BuildScatterGatherListEx* BuildScatterGatherListEx;                                                                                 
/*0x0D0*/     FUNCT_002F_0718_FlushAdapterBuffersEx* FlushAdapterBuffersEx;                                                                                       
/*0x0D8*/     FUNCT_0037_0720_FreeAdapterObject* FreeAdapterObject;                                                                                               
/*0x0E0*/     FUNCT_002F_06BE_InitializeDmaTransferContext_CancelMappedTransfer_JoinDmaDomain* CancelMappedTransfer;                                              
/*0x0E8*/     FUNCT_002F_0724_AllocateDomainCommonBuffer* AllocateDomainCommonBuffer;                                                                             
/*0x0F0*/     FUNCT_002F_0730_FlushDmaBuffer* FlushDmaBuffer;                                                                                                     
/*0x0F8*/     FUNCT_002F_06BE_InitializeDmaTransferContext_CancelMappedTransfer_JoinDmaDomain* JoinDmaDomain;                                                     
/*0x100*/     FUNCT_002F_0735_LeaveDmaDomain* LeaveDmaDomain;                                                                                                     
/*0x108*/     FUNCT_0036_0737_GetDmaDomain* GetDmaDomain;                                                                                                         
/*0x110*/     FUNCT_0036_0739_AllocateCommonBufferWithBounds* AllocateCommonBufferWithBounds;                                                                     
          }DMA_OPERATIONS, *PDMA_OPERATIONS;                                                                                                                      
                                                                                                                                                                  
          typedef struct _DMA_TRANSFER_INFO_V1        // 3 elements, 0xC bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      MapRegisterCount;                                            
/*0x004*/     ULONG32      ScatterGatherElementCount;                                   
/*0x008*/     ULONG32      ScatterGatherListSize;                                       
          }DMA_TRANSFER_INFO_V1, *PDMA_TRANSFER_INFO_V1;                                  
                                                                                        
          typedef struct _DMA_TRANSFER_INFO_V2        // 4 elements, 0x10 bytes (sizeof) 
          {                                                                              
/*0x000*/     ULONG32      MapRegisterCount;                                             
/*0x004*/     ULONG32      ScatterGatherElementCount;                                    
/*0x008*/     ULONG32      ScatterGatherListSize;                                        
/*0x00C*/     ULONG32      LogicalPageCount;                                             
          }DMA_TRANSFER_INFO_V2, *PDMA_TRANSFER_INFO_V2;                                   
                                                                                         
          typedef struct _DMA_TRANSFER_INFO        // 3 elements, 0x14 bytes (sizeof) 
          {                                                                           
/*0x000*/     ULONG32      Version;                                                   
              union                                // 2 elements, 0x10 bytes (sizeof) 
              {                                                                       
/*0x004*/         struct _DMA_TRANSFER_INFO_V1 V1; // 3 elements, 0xC bytes (sizeof)  
/*0x004*/         struct _DMA_TRANSFER_INFO_V2 V2; // 4 elements, 0x10 bytes (sizeof) 
              };                                                                      
          }DMA_TRANSFER_INFO, *PDMA_TRANSFER_INFO;                                    
                                                                                      
          typedef struct _DRIVER_EXTENSION           // 4 elements, 0x28 bytes (sizeof) 
          {                                                                             
/*0x000*/     struct _DRIVER_OBJECT* DriverObject;                                      
/*0x008*/     FUNCT_002F_0185_AddDevice* AddDevice;                                     
/*0x010*/     ULONG32      Count;                                                       
/*0x014*/     UINT8        _PADDING0_[0x4];                                             
/*0x018*/     struct _UNICODE_STRING ServiceKeyName; // 3 elements, 0x10 bytes (sizeof) 
          }DRIVER_EXTENSION, *PDRIVER_EXTENSION;                                        
                                                                                        
          typedef struct _DRIVER_OBJECT                                   // 15 elements, 0x150 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     INT16        Type;                                                                               
/*0x002*/     INT16        Size;                                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                    
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                                             
/*0x010*/     ULONG32      Flags;                                                                              
/*0x014*/     UINT8        _PADDING1_[0x4];                                                                    
/*0x018*/     VOID*        DriverStart;                                                                        
/*0x020*/     ULONG32      DriverSize;                                                                         
/*0x024*/     UINT8        _PADDING2_[0x4];                                                                    
/*0x028*/     VOID*        DriverSection;                                                                      
/*0x030*/     struct _DRIVER_EXTENSION* DriverExtension;                                                       
/*0x038*/     struct _UNICODE_STRING DriverName;                          // 3 elements, 0x10 bytes (sizeof)   
/*0x048*/     struct _UNICODE_STRING* HardwareDatabase;                                                        
/*0x050*/     struct _FAST_IO_DISPATCH* FastIoDispatch;                                                        
/*0x058*/     FUNCT_002F_02AE_DriverInit* DriverInit;                                                          
/*0x060*/     FUNCT_0037_014F_CancelRoutine_DriverStartIo* DriverStartIo;                                      
/*0x068*/     FUNCT_0037_02B2_DriverUnload_OldDriverUnload* DriverUnload;                                      
/*0x070*/     FUNCT_002F_02B6_MajorFunction* MajorFunction[28];                                                
          }DRIVER_OBJECT, *PDRIVER_OBJECT;                                                                     
                                                                                                               
          typedef struct _ECP_LIST        // 3 elements, 0x18 bytes (sizeof) 
          {                                                                  
/*0x000*/     ULONG32      Signature;                                        
/*0x004*/     ULONG32      Flags;                                            
/*0x008*/     struct _LIST_ENTRY EcpList; // 2 elements, 0x10 bytes (sizeof) 
          }ECP_LIST, *PECP_LIST;                                             
                                                                             
typedef struct _EJOB // 0 elements, 0x0 bytes (sizeof) 
{                                                      
}EJOB, *PEJOB;                                         
                                                       
typedef struct _EPROCESS // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}EPROCESS, *PEPROCESS;                                     
                                                           
          typedef struct _OWNER_ENTRY                        // 6 elements, 0x10 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT64       OwnerThread;                                                         
              union                                          // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                 
                  struct                                     // 4 elements, 0x4 bytes (sizeof)  
                  {                                                                             
/*0x008*/             ULONG32      IoPriorityBoosted : 1;    // 0 BitPosition                   
/*0x008*/             ULONG32      OwnerReferenced : 1;      // 1 BitPosition                   
/*0x008*/             ULONG32      IoQoSPriorityBoosted : 1; // 2 BitPosition                   
/*0x008*/             ULONG32      OwnerCount : 29;          // 3 BitPosition                   
                  };                                                                            
/*0x008*/         ULONG32      TableSize;                                                       
              };                                                                                
          }OWNER_ENTRY, *POWNER_ENTRY;                                                          
                                                                                                
          typedef struct _ERESOURCE                   // 17 elements, 0x68 bytes (sizeof) 
          {                                                                               
/*0x000*/     struct _LIST_ENTRY SystemResourcesList; // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _OWNER_ENTRY* OwnerTable;                                            
/*0x018*/     INT16        ActiveCount;                                                   
              union                                   // 2 elements, 0x6 bytes (sizeof)   
              {                                                                           
/*0x01A*/         UINT16       Flag;                                                      
                  struct                              // 2 elements, 0x6 bytes (sizeof)   
                  {                                                                       
/*0x01A*/             UINT8        ReservedLowFlags;                                      
/*0x01B*/             UINT8        WaiterPriority;                                        
/*0x01C*/             UINT8        _PADDING0_[0x4];                                       
                  };                                                                      
              };                                                                          
/*0x020*/     VOID*        SharedWaiters;                                                 
/*0x028*/     VOID*        ExclusiveWaiters;                                              
/*0x030*/     struct _OWNER_ENTRY OwnerEntry;         // 6 elements, 0x10 bytes (sizeof)  
/*0x040*/     ULONG32      ActiveEntries;                                                 
/*0x044*/     ULONG32      ContentionCount;                                               
/*0x048*/     ULONG32      NumberOfSharedWaiters;                                         
/*0x04C*/     ULONG32      NumberOfExclusiveWaiters;                                      
/*0x050*/     VOID*        Reserved2;                                                     
              union                                   // 2 elements, 0x8 bytes (sizeof)   
              {                                                                           
/*0x058*/         VOID*        Address;                                                   
/*0x058*/         UINT64       CreatorBackTraceIndex;                                     
              };                                                                          
/*0x060*/     UINT64       SpinLock;                                                      
          }ERESOURCE, *PERESOURCE;                                                        
                                                                                          
          typedef struct _ETW_KERNEL_TRACE_TIMESTAMP        // 1 elements, 0x20 bytes (sizeof) 
          {                                                                                    
/*0x000*/     union _LARGE_INTEGER KernelTraceTimeStamp[4];                                    
          }ETW_KERNEL_TRACE_TIMESTAMP, *PETW_KERNEL_TRACE_TIMESTAMP;                                   
                                                                                               
          typedef struct _EVENT_DATA_DESCRIPTOR // 6 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     UINT64       Ptr;                                                    
/*0x008*/     ULONG32      Size;                                                   
              union                             // 2 elements, 0x4 bytes (sizeof)  
              {                                                                    
/*0x00C*/         ULONG32      Reserved;                                           
                  struct                        // 3 elements, 0x4 bytes (sizeof)  
                  {                                                                
/*0x00C*/             UINT8        Type;                                           
/*0x00D*/             UINT8        Reserved1;                                      
/*0x00E*/             UINT16       Reserved2;                                      
                  };                                                               
              };                                                                   
          }EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR;                                   
                                                                                   
          typedef struct _EVENT_DESCRIPTOR // 7 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     UINT16       Id;                                                
/*0x002*/     UINT8        Version;                                           
/*0x003*/     UINT8        Channel;                                           
/*0x004*/     UINT8        Level;                                             
/*0x005*/     UINT8        Opcode;                                            
/*0x006*/     UINT16       Task;                                              
/*0x008*/     UINT64       Keyword;                                           
          }EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR;                                   
                                                                              
          typedef struct _EVENT_FILTER_DESCRIPTOR // 3 elements, 0x10 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT64       Ptr;                                                      
/*0x008*/     ULONG32      Size;                                                     
/*0x00C*/     ULONG32      Type;                                                     
          }EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR;                                   
                                                                                     
          typedef struct _EX_PUSH_LOCK                 // 7 elements, 0x8 bytes (sizeof) 
          {                                                                              
              union                                    // 3 elements, 0x8 bytes (sizeof) 
              {                                                                          
                  struct                               // 5 elements, 0x8 bytes (sizeof) 
                  {                                                                      
/*0x000*/             UINT64       Locked : 1;         // 0 BitPosition                  
/*0x000*/             UINT64       Waiting : 1;        // 1 BitPosition                  
/*0x000*/             UINT64       Waking : 1;         // 2 BitPosition                  
/*0x000*/             UINT64       MultipleShared : 1; // 3 BitPosition                  
/*0x000*/             UINT64       Shared : 60;        // 4 BitPosition                  
                  };                                                                     
/*0x000*/         UINT64       Value;                                                    
/*0x000*/         VOID*        Ptr;                                                      
              };                                                                         
          }EX_PUSH_LOCK, *PEX_PUSH_LOCK;                                                 
                                                                                         
          typedef struct _EX_PUSH_LOCK_CACHE_AWARE_LEGACY // 1 elements, 0x100 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _EX_PUSH_LOCK* Locks[32];                                                
          }EX_PUSH_LOCK_CACHE_AWARE_LEGACY, *PEX_PUSH_LOCK_CACHE_AWARE_LEGACY;                                    
                                                                                              
          typedef struct _EX_RUNDOWN_REF // 2 elements, 0x8 bytes (sizeof) 
          {                                                                
              union                      // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         UINT64       Count;                                      
/*0x000*/         VOID*        Ptr;                                        
              };                                                           
          }EX_RUNDOWN_REF, *PEX_RUNDOWN_REF;                                  
                                                                           
typedef struct _EX_RUNDOWN_REF_CACHE_AWARE // 0 elements, 0x0 bytes (sizeof) 
{                                                                            
}EX_RUNDOWN_REF_CACHE_AWARE, *PEX_RUNDOWN_REF_CACHE_AWARE;                                  
                                                                             
typedef struct _EX_TIMER // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}EX_TIMER, *PEX_TIMER;                                     
                                                           
          typedef struct _EXCEPTION_RECORD               // 6 elements, 0x98 bytes (sizeof) 
          {                                                                                 
/*0x000*/     LONG32       ExceptionCode;                                                   
/*0x004*/     ULONG32      ExceptionFlags;                                                  
/*0x008*/     struct _EXCEPTION_RECORD* ExceptionRecord;                                    
/*0x010*/     VOID*        ExceptionAddress;                                                
/*0x018*/     ULONG32      NumberParameters;                                                
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                 
/*0x020*/     UINT64       ExceptionInformation[15];                                        
          }EXCEPTION_RECORD, *PEXCEPTION_RECORD;                                            
                                                                                            
          typedef struct _EXCEPTION_REGISTRATION_RECORD    // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _EXCEPTION_REGISTRATION_RECORD* Next;                                    
/*0x008*/     FUNCT_0794_0793_Handler* Handler;                                               
          }EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD;                                   
                                                                                              
          typedef struct _EXT_DELETE_PARAMETERS                                                                                                        // 4 elements, 0x18 bytes (sizeof) 
          {                                                                                                                                                                               
/*0x000*/     ULONG32      Version;                                                                                                                                                       
/*0x004*/     ULONG32      Reserved;                                                                                                                                                      
/*0x008*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* DeleteCallback;                                    
/*0x010*/     VOID*        DeleteContext;                                                                                                                                                 
          }EXT_DELETE_PARAMETERS, *PEXT_DELETE_PARAMETERS;                                                                                                                                
                                                                                                                                                                                          
          typedef struct _EXT_SET_PARAMETERS_V0 // 3 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     ULONG32      Version;                                                
/*0x004*/     ULONG32      Reserved;                                               
/*0x008*/     INT64        NoWakeTolerance;                                        
          }EXT_SET_PARAMETERS_V0, *PEXT_SET_PARAMETERS_V0;                                   
                                                                                   
          typedef struct _FAST_IO_DISPATCH                                                                                // 28 elements, 0xE0 bytes (sizeof) 
          {                                                                                                                                                   
/*0x000*/     ULONG32      SizeOfFastIoDispatch;                                                                                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                   
/*0x008*/     FUNCT_009D_01A8_FastIoCheckIfPossible* FastIoCheckIfPossible;                                                                                   
/*0x010*/     FUNCT_009D_01E8_FastIoRead_FastIoWrite* FastIoRead;                                                                                             
/*0x018*/     FUNCT_009D_01E8_FastIoRead_FastIoWrite* FastIoWrite;                                                                                            
/*0x020*/     FUNCT_009D_01F2_FastIoQueryBasicInfo* FastIoQueryBasicInfo;                                                                                     
/*0x028*/     FUNCT_009D_0200_FastIoQueryStandardInfo* FastIoQueryStandardInfo;                                                                               
/*0x030*/     FUNCT_009D_020E_FastIoLock* FastIoLock;                                                                                                         
/*0x038*/     FUNCT_009D_021B_FastIoUnlockSingle* FastIoUnlockSingle;                                                                                         
/*0x040*/     FUNCT_009D_0224_FastIoUnlockAll* FastIoUnlockAll;                                                                                               
/*0x048*/     FUNCT_009D_022A_FastIoUnlockAllByKey* FastIoUnlockAllByKey;                                                                                     
/*0x050*/     FUNCT_009D_0231_FastIoDeviceControl* FastIoDeviceControl;                                                                                       
/*0x058*/     FUNCT_0037_023C_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection* AcquireFileForNtCreateSection;                                     
/*0x060*/     FUNCT_0037_023C_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection* ReleaseFileForNtCreateSection;                                     
/*0x068*/     FUNCT_0037_023F_FastIoDetachDevice* FastIoDetachDevice;                                                                                         
/*0x070*/     FUNCT_009D_0243_FastIoQueryNetworkOpenInfo* FastIoQueryNetworkOpenInfo;                                                                         
/*0x078*/     FUNCT_002F_0253_AcquireForModWrite* AcquireForModWrite;                                                                                         
/*0x080*/     FUNCT_009D_0275_MdlRead_PrepareMdlWrite* MdlRead;                                                                                               
/*0x088*/     FUNCT_009D_027F_MdlReadComplete_MdlReadCompleteCompressed* MdlReadComplete;                                                                     
/*0x090*/     FUNCT_009D_0275_MdlRead_PrepareMdlWrite* PrepareMdlWrite;                                                                                       
/*0x098*/     FUNCT_009D_0284_MdlWriteComplete_MdlWriteCompleteCompressed* MdlWriteComplete;                                                                  
/*0x0A0*/     FUNCT_009D_028A_FastIoReadCompressed_FastIoWriteCompressed* FastIoReadCompressed;                                                               
/*0x0A8*/     FUNCT_009D_028A_FastIoReadCompressed_FastIoWriteCompressed* FastIoWriteCompressed;                                                              
/*0x0B0*/     FUNCT_009D_027F_MdlReadComplete_MdlReadCompleteCompressed* MdlReadCompleteCompressed;                                                           
/*0x0B8*/     FUNCT_009D_0284_MdlWriteComplete_MdlWriteCompleteCompressed* MdlWriteCompleteCompressed;                                                        
/*0x0C0*/     FUNCT_009D_02A0_FastIoQueryOpen* FastIoQueryOpen;                                                                                               
/*0x0C8*/     FUNCT_002F_02A5_ReleaseForModWrite* ReleaseForModWrite;                                                                                         
/*0x0D0*/     FUNCT_002F_02AA_AcquireForCcFlush_ReleaseForCcFlush* AcquireForCcFlush;                                                                         
/*0x0D8*/     FUNCT_002F_02AA_AcquireForCcFlush_ReleaseForCcFlush* ReleaseForCcFlush;                                                                         
          }FAST_IO_DISPATCH, *PFAST_IO_DISPATCH;                                                                                                              
                                                                                                                                                              
          typedef struct _FAST_MUTEX        // 5 elements, 0x38 bytes (sizeof) 
          {                                                                    
/*0x000*/     LONG32       Count;                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     VOID*        Owner;                                              
/*0x010*/     ULONG32      Contention;                                         
/*0x014*/     UINT8        _PADDING1_[0x4];                                    
/*0x018*/     struct _KEVENT Event;         // 1 elements, 0x18 bytes (sizeof) 
/*0x030*/     ULONG32      OldIrql;                                            
/*0x034*/     UINT8        _PADDING2_[0x4];                                    
          }FAST_MUTEX, *PFAST_MUTEX;                                           
                                                                               
          typedef struct _FILE_BASIC_INFORMATION   // 5 elements, 0x28 bytes (sizeof) 
          {                                                                           
/*0x000*/     union _LARGE_INTEGER CreationTime;   // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER LastAccessTime; // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     union _LARGE_INTEGER LastWriteTime;  // 4 elements, 0x8 bytes (sizeof)  
/*0x018*/     union _LARGE_INTEGER ChangeTime;     // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     ULONG32      FileAttributes;                                            
/*0x024*/     UINT8        _PADDING0_[0x4];                                           
          }FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;                                   
                                                                                      
          typedef struct _SID_IDENTIFIER_AUTHORITY // 1 elements, 0x6 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT8        Value[6];                                                 
          }SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY;                                  
                                                                                     
          typedef struct _SID                                       // 4 elements, 0xC bytes (sizeof) 
          {                                                                                           
/*0x000*/     UINT8        Revision;                                                                  
/*0x001*/     UINT8        SubAuthorityCount;                                                         
/*0x002*/     struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority; // 1 elements, 0x6 bytes (sizeof) 
/*0x008*/     ULONG32      SubAuthority[1];                                                           
          }SID, *PSID;                                                                                
                                                                                                      
          typedef struct _FILE_GET_QUOTA_INFORMATION // 3 elements, 0x14 bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      NextEntryOffset;                                             
/*0x004*/     ULONG32      SidLength;                                                   
/*0x008*/     struct _SID  Sid;                      // 4 elements, 0xC bytes (sizeof)  
          }FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION;                                   
                                                                                        
          typedef struct _FSRTL_PER_FILE_CONTEXT                                                                                                     // 4 elements, 0x28 bytes (sizeof) 
          {                                                                                                                                                                             
/*0x000*/     struct _LIST_ENTRY Links;                                                                                                              // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     VOID*        OwnerId;                                                                                                                                                     
/*0x018*/     VOID*        InstanceId;                                                                                                                                                  
/*0x020*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* FreeCallback;                                    
          }FSRTL_PER_FILE_CONTEXT, *PFSRTL_PER_FILE_CONTEXT;                                                                                                                            
                                                                                                                                                                                        
          typedef struct _FSRTL_PER_STREAM_CONTEXT                                                                                                   // 4 elements, 0x28 bytes (sizeof) 
          {                                                                                                                                                                             
/*0x000*/     struct _LIST_ENTRY Links;                                                                                                              // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     VOID*        OwnerId;                                                                                                                                                     
/*0x018*/     VOID*        InstanceId;                                                                                                                                                  
/*0x020*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* FreeCallback;                                    
          }FSRTL_PER_STREAM_CONTEXT, *PFSRTL_PER_STREAM_CONTEXT;                                                                                                                        
                                                                                                                                                                                        
          typedef struct _FILE_LIST_CTRL                              // 7 elements, 0x58 bytes (sizeof) 
          {                                                                                              
/*0x000*/     union _FLT_TYPE Type;                                   // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                                              
              union                                                   // 2 elements, 0x28 bytes (sizeof) 
              {                                                                                          
/*0x008*/         struct _FSRTL_PER_FILE_CONTEXT FileContextCtrl;     // 4 elements, 0x28 bytes (sizeof) 
/*0x008*/         struct _FSRTL_PER_STREAM_CONTEXT StreamContextCtrl; // 4 elements, 0x28 bytes (sizeof) 
              }ContextCtrl;                                                                              
/*0x030*/     struct _LIST_ENTRY VolumeLink;                          // 2 elements, 0x10 bytes (sizeof) 
/*0x040*/     enum _FILE_LIST_CTRL_FLAGS Flags;                                                          
/*0x044*/     LONG32       UseCount;                                                                     
/*0x048*/     struct _EX_PUSH_LOCK ContextLock;                       // 7 elements, 0x8 bytes (sizeof)  
/*0x050*/     struct _CONTEXT_LIST_CTRL FileContexts;                 // 1 elements, 0x8 bytes (sizeof)  
          }FILE_LIST_CTRL, *PFILE_LIST_CTRL;                                                             
                                                                                                         
          typedef struct _FILE_NAMES_INFORMATION // 4 elements, 0x10 bytes (sizeof) 
          {                                                                         
/*0x000*/     ULONG32      NextEntryOffset;                                         
/*0x004*/     ULONG32      FileIndex;                                               
/*0x008*/     ULONG32      FileNameLength;                                          
/*0x00C*/     WCHAR        FileName[1];                                             
/*0x00E*/     UINT8        _PADDING0_[0x2];                                         
          }FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION;                                   
                                                                                    
          typedef struct _FILE_NETWORK_OPEN_INFORMATION // 7 elements, 0x38 bytes (sizeof) 
          {                                                                                
/*0x000*/     union _LARGE_INTEGER CreationTime;        // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER LastAccessTime;      // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     union _LARGE_INTEGER LastWriteTime;       // 4 elements, 0x8 bytes (sizeof)  
/*0x018*/     union _LARGE_INTEGER ChangeTime;          // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     union _LARGE_INTEGER AllocationSize;      // 4 elements, 0x8 bytes (sizeof)  
/*0x028*/     union _LARGE_INTEGER EndOfFile;           // 4 elements, 0x8 bytes (sizeof)  
/*0x030*/     ULONG32      FileAttributes;                                                 
/*0x034*/     UINT8        _PADDING0_[0x4];                                                
          }FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;                                   
                                                                                           
          typedef struct _FILE_OBJECT                                // 30 elements, 0xD8 bytes (sizeof) 
          {                                                                                              
/*0x000*/     INT16        Type;                                                                         
/*0x002*/     INT16        Size;                                                                         
/*0x004*/     UINT8        _PADDING0_[0x4];                                                              
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                                       
/*0x010*/     struct _VPB* Vpb;                                                                          
/*0x018*/     VOID*        FsContext;                                                                    
/*0x020*/     VOID*        FsContext2;                                                                   
/*0x028*/     struct _SECTION_OBJECT_POINTERS* SectionObjectPointer;                                     
/*0x030*/     VOID*        PrivateCacheMap;                                                              
/*0x038*/     LONG32       FinalStatus;                                                                  
/*0x03C*/     UINT8        _PADDING1_[0x4];                                                              
/*0x040*/     struct _FILE_OBJECT* RelatedFileObject;                                                    
/*0x048*/     UINT8        LockOperation;                                                                
/*0x049*/     UINT8        DeletePending;                                                                
/*0x04A*/     UINT8        ReadAccess;                                                                   
/*0x04B*/     UINT8        WriteAccess;                                                                  
/*0x04C*/     UINT8        DeleteAccess;                                                                 
/*0x04D*/     UINT8        SharedRead;                                                                   
/*0x04E*/     UINT8        SharedWrite;                                                                  
/*0x04F*/     UINT8        SharedDelete;                                                                 
/*0x050*/     ULONG32      Flags;                                                                        
/*0x054*/     UINT8        _PADDING2_[0x4];                                                              
/*0x058*/     struct _UNICODE_STRING FileName;                       // 3 elements, 0x10 bytes (sizeof)  
/*0x068*/     union _LARGE_INTEGER CurrentByteOffset;                // 4 elements, 0x8 bytes (sizeof)   
/*0x070*/     ULONG32      Waiters;                                                                      
/*0x074*/     ULONG32      Busy;                                                                         
/*0x078*/     VOID*        LastLock;                                                                     
/*0x080*/     struct _KEVENT Lock;                                   // 1 elements, 0x18 bytes (sizeof)  
/*0x098*/     struct _KEVENT Event;                                  // 1 elements, 0x18 bytes (sizeof)  
/*0x0B0*/     struct _IO_COMPLETION_CONTEXT* CompletionContext;                                          
/*0x0B8*/     UINT64       IrpListLock;                                                                  
/*0x0C0*/     struct _LIST_ENTRY IrpList;                            // 2 elements, 0x10 bytes (sizeof)  
/*0x0D0*/     VOID*        FileObjectExtension;                                                          
          }FILE_OBJECT, *PFILE_OBJECT;                                                                   
                                                                                                         
          typedef struct _FILE_STANDARD_INFORMATION // 5 elements, 0x18 bytes (sizeof) 
          {                                                                            
/*0x000*/     union _LARGE_INTEGER AllocationSize;  // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER EndOfFile;       // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     ULONG32      NumberOfLinks;                                              
/*0x014*/     UINT8        DeletePending;                                              
/*0x015*/     UINT8        Directory;                                                  
/*0x016*/     UINT8        _PADDING0_[0x2];                                            
          }FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;                                   
                                                                                       
          typedef struct _FILTER_CCB        // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _FLT_FILTER* Filter;                                      
/*0x008*/     ULONG32      Iterator;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
          }FILTER_CCB, *PFILTER_CCB;                                           
                                                                               
          typedef struct _IO_STATUS_BLOCK // 3 elements, 0x10 bytes (sizeof) 
          {                                                                  
              union                       // 2 elements, 0x8 bytes (sizeof)  
              {                                                              
/*0x000*/         LONG32       Status;                                       
/*0x000*/         VOID*        Pointer;                                      
              };                                                             
/*0x008*/     UINT64       Information;                                      
          }IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;                                   
                                                                             
          typedef struct _FLT_CALLBACK_DATA          // 9 elements, 0x58 bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      Flags;                                                       
/*0x004*/     UINT8        _PADDING0_[0x4];                                             
/*0x008*/     struct _KTHREAD* Thread;                                                  
/*0x010*/     struct _FLT_IO_PARAMETER_BLOCK* Iopb;                                     
/*0x018*/     struct _IO_STATUS_BLOCK IoStatus;      // 3 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _FLT_TAG_DATA_BUFFER* TagData;                                     
              union                                  // 2 elements, 0x20 bytes (sizeof) 
              {                                                                         
                  struct                             // 2 elements, 0x20 bytes (sizeof) 
                  {                                                                     
/*0x030*/             struct _LIST_ENTRY QueueLinks; // 2 elements, 0x10 bytes (sizeof) 
/*0x040*/             VOID*        QueueContext[2];                                     
                  };                                                                    
/*0x030*/         VOID*        FilterContext[4];                                        
              };                                                                        
/*0x050*/     CHAR         RequestorMode;                                               
/*0x051*/     UINT8        _PADDING1_[0x7];                                             
          }FLT_CALLBACK_DATA, *PFLT_CALLBACK_DATA;                                      
                                                                                        
          typedef struct _IO_CSQ                                                                        // 8 elements, 0x40 bytes (sizeof) 
          {                                                                                                                                
/*0x000*/     ULONG32      Type;                                                                                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                
/*0x008*/     FUNCT_0037_0CBF_CsqInsertIrp_CsqRemoveIrp_CsqCompleteCanceledIrp* CsqInsertIrp;                                              
/*0x010*/     FUNCT_0037_0CBF_CsqInsertIrp_CsqRemoveIrp_CsqCompleteCanceledIrp* CsqRemoveIrp;                                              
/*0x018*/     FUNCT_013B_0CC4_CsqPeekNextIrp* CsqPeekNextIrp;                                                                              
/*0x020*/     FUNCT_0037_0CC9_CsqAcquireLock* CsqAcquireLock;                                                                              
/*0x028*/     FUNCT_0037_0CCD_CsqReleaseLock* CsqReleaseLock;                                                                              
/*0x030*/     FUNCT_0037_0CBF_CsqInsertIrp_CsqRemoveIrp_CsqCompleteCanceledIrp* CsqCompleteCanceledIrp;                                    
/*0x038*/     VOID*        ReservePointer;                                                                                                 
          }IO_CSQ, *PIO_CSQ;                                                                                                               
                                                                                                                                           
          typedef struct _FLT_CALLBACK_DATA_QUEUE                              // 9 elements, 0x80 bytes (sizeof) 
          {                                                                                                       
/*0x000*/     struct _IO_CSQ Csq;                                              // 8 elements, 0x40 bytes (sizeof) 
/*0x040*/     enum _FLT_CALLBACK_DATA_QUEUE_FLAGS Flags;                                                          
/*0x040*/     UINT8        _PADDING0_[0x8];                                                                       
/*0x048*/     struct _FLT_INSTANCE* Instance;                                                                     
/*0x050*/     FUNCT_002F_106C_InsertIo* InsertIo;                                                                 
/*0x058*/     FUNCT_0037_1072_RemoveIo_CompleteCanceledIo* RemoveIo;                                              
/*0x060*/     FUNCT_0A3C_1076_PeekNextIo* PeekNextIo;                                                             
/*0x068*/     FUNCT_0037_1078_Acquire* Acquire;                                                                   
/*0x070*/     FUNCT_0037_107C_Release* Release;                                                                   
/*0x078*/     FUNCT_0037_1072_RemoveIo_CompleteCanceledIo* CompleteCanceledIo;                                    
          }FLT_CALLBACK_DATA_QUEUE, *PFLT_CALLBACK_DATA_QUEUE;                                                    
                                                                                                                  
          typedef struct _MANAGER_CCB       // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _FLTP_FRAME* Frame;                                       
/*0x008*/     ULONG32      Iterator;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
          }MANAGER_CCB, *PMANAGER_CCB;                                         
                                                                               
          typedef struct _INSTANCE_CCB        // 1 elements, 0x8 bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _FLT_INSTANCE* Instance;                                   
          }INSTANCE_CCB, *PINSTANCE_CCB;                                        
                                                                                
          typedef struct _VOLUME_CCB         // 2 elements, 0x18 bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _UNICODE_STRING Volume; // 3 elements, 0x10 bytes (sizeof) 
/*0x010*/     ULONG32      Iterator;                                            
/*0x014*/     UINT8        _PADDING0_[0x4];                                     
          }VOLUME_CCB, *PVOLUME_CCB;                                            
                                                                                
          typedef struct _FLT_MUTEX_LIST_HEAD // 4 elements, 0x50 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _FAST_MUTEX mLock;       // 5 elements, 0x38 bytes (sizeof) 
/*0x038*/     struct _LIST_ENTRY mList;       // 2 elements, 0x10 bytes (sizeof) 
              union                           // 2 elements, 0x8 bytes (sizeof)  
              {                                                                  
/*0x048*/         ULONG32      mCount;                                           
/*0x048*/         UINT8        mInvalid : 1;  // 0 BitPosition                   
              };                                                                 
          }FLT_MUTEX_LIST_HEAD, *PFLT_MUTEX_LIST_HEAD;                                   
                                                                                 
          typedef struct _PORT_CCB                         // 2 elements, 0x58 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _FLT_PORT_OBJECT* Port;                                                  
/*0x008*/     struct _FLT_MUTEX_LIST_HEAD ReplyWaiterList; // 4 elements, 0x50 bytes (sizeof) 
          }PORT_CCB, *PPORT_CCB;                                                              
                                                                                              
          typedef struct _FLT_CCB                // 2 elements, 0x60 bytes (sizeof) 
          {                                                                         
/*0x000*/     union _FLT_TYPE Type;              // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                         
              union                              // 5 elements, 0x58 bytes (sizeof) 
              {                                                                     
/*0x008*/         struct _MANAGER_CCB Manager;   // 2 elements, 0x10 bytes (sizeof) 
/*0x008*/         struct _FILTER_CCB Filter;     // 2 elements, 0x10 bytes (sizeof) 
/*0x008*/         struct _INSTANCE_CCB Instance; // 1 elements, 0x8 bytes (sizeof)  
/*0x008*/         struct _VOLUME_CCB Volume;     // 2 elements, 0x18 bytes (sizeof) 
/*0x008*/         struct _PORT_CCB Port;         // 2 elements, 0x58 bytes (sizeof) 
              }Data;                                                                
          }FLT_CCB, *PFLT_CCB;                                                      
                                                                                    
          typedef struct _FLT_CONTEXT_REGISTRATION                                                // 8 elements, 0x38 bytes (sizeof) 
          {                                                                                                                          
/*0x000*/     UINT16       ContextType;                                                                                              
/*0x002*/     UINT16       Flags;                                                                                                    
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                          
/*0x008*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextCleanupCallback;                                    
/*0x010*/     UINT64       Size;                                                                                                     
/*0x018*/     ULONG32      PoolTag;                                                                                                  
/*0x01C*/     UINT8        _PADDING1_[0x4];                                                                                          
/*0x020*/     FUNCT_0036_0DA8_ContextAllocateCallback* ContextAllocateCallback;                                                      
/*0x028*/     FUNCT_0037_0C0B_ContextCleanupCallback_ContextFreeCallback* ContextFreeCallback;                                       
/*0x030*/     VOID*        Reserved1;                                                                                                
          }FLT_CONTEXT_REGISTRATION, *PFLT_CONTEXT_REGISTRATION;                                                                     
                                                                                                                                     
          typedef struct _IO_PRIORITY_INFO       // 4 elements, 0x10 bytes (sizeof) 
          {                                                                         
/*0x000*/     ULONG32      Size;                                                    
/*0x004*/     ULONG32      ThreadPriority;                                          
/*0x008*/     ULONG32      PagePriority;                                            
/*0x00C*/     enum _IO_PRIORITY_HINT IoPriority;                                    
          }IO_PRIORITY_INFO, *PIO_PRIORITY_INFO;                                    
                                                                                    
          typedef struct _FLT_DEFERRED_IO_WORKITEM                              // 9 elements, 0x70 bytes (sizeof) 
          {                                                                                                        
/*0x000*/     struct _FLTP_WORKITEM FltWork;                                    // 2 elements, 0x28 bytes (sizeof) 
/*0x028*/     enum _WORK_QUEUE_TYPE QueueType;                                                                     
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                                        
              union                                                             // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                                    
/*0x030*/         FUNCT_0037_0DBD_DeferredWorkerRoutine* DeferredWorkerRoutine;                                    
/*0x030*/         FUNCT_0037_0DCD_GenericWorkerRoutine* GenericWorkerRoutine;                                      
              };                                                                                                   
/*0x038*/     VOID*        Context;                                                                                
/*0x040*/     struct _IO_PRIORITY_INFO IoPriorityInfo;                          // 4 elements, 0x10 bytes (sizeof) 
/*0x050*/     struct _GUID ActivityId;                                          // 4 elements, 0x10 bytes (sizeof) 
/*0x060*/     struct _FLT_INSTANCE* Instance;                                                                      
/*0x068*/     struct _FLT_CALLBACK_DATA* CallbackData;                                                             
          }FLT_DEFERRED_IO_WORKITEM, *PFLT_DEFERRED_IO_WORKITEM;                                                   
                                                                                                                   
          typedef struct _FLT_FILE_NAME_INFORMATION  // 10 elements, 0x78 bytes (sizeof) 
          {                                                                              
/*0x000*/     UINT16       Size;                                                         
/*0x002*/     UINT16       NamesParsed;                                                  
/*0x004*/     ULONG32      Format;                                                       
/*0x008*/     struct _UNICODE_STRING Name;           // 3 elements, 0x10 bytes (sizeof)  
/*0x018*/     struct _UNICODE_STRING Volume;         // 3 elements, 0x10 bytes (sizeof)  
/*0x028*/     struct _UNICODE_STRING Share;          // 3 elements, 0x10 bytes (sizeof)  
/*0x038*/     struct _UNICODE_STRING Extension;      // 3 elements, 0x10 bytes (sizeof)  
/*0x048*/     struct _UNICODE_STRING Stream;         // 3 elements, 0x10 bytes (sizeof)  
/*0x058*/     struct _UNICODE_STRING FinalComponent; // 3 elements, 0x10 bytes (sizeof)  
/*0x068*/     struct _UNICODE_STRING ParentDir;      // 3 elements, 0x10 bytes (sizeof)  
          }FLT_FILE_NAME_INFORMATION, *PFLT_FILE_NAME_INFORMATION;                                    
                                                                                         
          typedef struct _FLT_OBJECT             // 5 elements, 0x30 bytes (sizeof) 
          {                                                                         
/*0x000*/     enum _FLT_OBJECT_FLAGS Flags;                                         
/*0x004*/     ULONG32      PointerCount;                                            
/*0x008*/     struct _EX_RUNDOWN_REF RundownRef; // 2 elements, 0x8 bytes (sizeof)  
/*0x010*/     struct _LIST_ENTRY PrimaryLink;    // 2 elements, 0x10 bytes (sizeof) 
/*0x020*/     struct _GUID UniqueIdentifier;     // 4 elements, 0x10 bytes (sizeof) 
          }FLT_OBJECT, *PFLT_OBJECT;                                                
                                                                                    
          typedef struct _FLT_RESOURCE_LIST_HEAD // 3 elements, 0x80 bytes (sizeof)  
          {                                                                          
/*0x000*/     struct _ERESOURCE rLock;           // 17 elements, 0x68 bytes (sizeof) 
/*0x068*/     struct _LIST_ENTRY rList;          // 2 elements, 0x10 bytes (sizeof)  
/*0x078*/     ULONG32      rCount;                                                   
/*0x07C*/     UINT8        _PADDING0_[0x4];                                          
          }FLT_RESOURCE_LIST_HEAD, *PFLT_RESOURCE_LIST_HEAD;                                    
                                                                                     
          typedef struct _FLT_FILTER                                                                                                                                   // 30 elements, 0x2B0 bytes (sizeof) 
          {                                                                                                                                                                                                 
/*0x000*/     struct _FLT_OBJECT Base;                                                                                                                                 // 5 elements, 0x30 bytes (sizeof)   
/*0x030*/     struct _FLTP_FRAME* Frame;                                                                                                                                                                    
/*0x038*/     struct _UNICODE_STRING Name;                                                                                                                             // 3 elements, 0x10 bytes (sizeof)   
/*0x048*/     struct _UNICODE_STRING DefaultAltitude;                                                                                                                  // 3 elements, 0x10 bytes (sizeof)   
/*0x058*/     enum _FLT_FILTER_FLAGS Flags;                                                                                                                                                                 
/*0x05C*/     UINT8        _PADDING0_[0x4];                                                                                                                                                                 
/*0x060*/     struct _DRIVER_OBJECT* DriverObject;                                                                                                                                                          
/*0x068*/     struct _FLT_RESOURCE_LIST_HEAD InstanceList;                                                                                                             // 3 elements, 0x80 bytes (sizeof)   
/*0x0E8*/     struct _FLT_VERIFIER_EXTENSION* VerifierExtension;                                                                                                                                            
/*0x0F0*/     struct _LIST_ENTRY VerifiedFiltersLink;                                                                                                                  // 2 elements, 0x10 bytes (sizeof)   
/*0x100*/     FUNCT_002F_0BBC_FilterUnload_FilterUnloadCallback* FilterUnload;                                                                                                                              
/*0x108*/     FUNCT_002F_0BBF_InstanceSetup_InstanceSetupCallback* InstanceSetup;                                                                                                                           
/*0x110*/     FUNCT_002F_0BC5_InstanceQueryTeardown_InstanceQueryTeardownCallback* InstanceQueryTeardown;                                                                                                   
/*0x118*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownStart;                                         
/*0x120*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownComplete;                                      
/*0x128*/     struct _ALLOCATE_CONTEXT_HEADER* SupportedContextsListHead;                                                                                                                                   
/*0x130*/     struct _ALLOCATE_CONTEXT_HEADER* SupportedContexts[7];                                                                                                                                        
/*0x168*/     FUNCT_0A38_0A37_PreOperation_PreVolumeMount* PreVolumeMount;                                                                                                                                  
/*0x170*/     FUNCT_0BF8_0BF7_PostOperation_PostVolumeMount* PostVolumeMount;                                                                                                                               
/*0x178*/     FUNCT_002F_0BCB_GenerateFileName_GenerateFileNameCallback* GenerateFileName;                                                                                                                  
/*0x180*/     FUNCT_002F_0BD7_NormalizeNameComponent_NormalizeNameComponentCallback* NormalizeNameComponent;                                                                                                
/*0x188*/     FUNCT_002F_0BE8_NormalizeNameComponentEx_NormalizeNameComponentExCallback* NormalizeNameComponentEx;                                                                                          
/*0x190*/     FUNCT_0037_0C10_NormalizeContextCleanup_NormalizeContextCleanupCallback* NormalizeContextCleanup;                                                                                             
/*0x198*/     FUNCT_002F_0C13_KtmNotification_TransactionNotificationCallback* KtmNotification;                                                                                                             
/*0x1A0*/     FUNCT_002F_0C18_SectionNotification_SectionNotificationCallback* SectionNotification;                                                                                                         
/*0x1A8*/     struct _FLT_OPERATION_REGISTRATION* Operations;                                                                                                                                               
/*0x1B0*/     FUNCT_0037_02B2_DriverUnload_OldDriverUnload* OldDriverUnload;                                                                                                                                
/*0x1B8*/     struct _FLT_MUTEX_LIST_HEAD ActiveOpens;                                                                                                                 // 4 elements, 0x50 bytes (sizeof)   
/*0x208*/     struct _FLT_MUTEX_LIST_HEAD ConnectionList;                                                                                                              // 4 elements, 0x50 bytes (sizeof)   
/*0x258*/     struct _FLT_MUTEX_LIST_HEAD PortList;                                                                                                                    // 4 elements, 0x50 bytes (sizeof)   
/*0x2A8*/     struct _EX_PUSH_LOCK PortLock;                                                                                                                           // 7 elements, 0x8 bytes (sizeof)    
          }FLT_FILTER, *PFLT_FILTER;                                                                                                                                                                        
                                                                                                                                                                                                            
          typedef struct _FLT_GENERIC_WORKITEM                                  // 8 elements, 0x68 bytes (sizeof) 
          {                                                                                                        
/*0x000*/     struct _FLTP_WORKITEM FltWork;                                    // 2 elements, 0x28 bytes (sizeof) 
/*0x028*/     enum _WORK_QUEUE_TYPE QueueType;                                                                     
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                                        
              union                                                             // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                                    
/*0x030*/         FUNCT_0037_0DBD_DeferredWorkerRoutine* DeferredWorkerRoutine;                                    
/*0x030*/         FUNCT_0037_0DCD_GenericWorkerRoutine* GenericWorkerRoutine;                                      
              };                                                                                                   
/*0x038*/     VOID*        Context;                                                                                
/*0x040*/     struct _IO_PRIORITY_INFO IoPriorityInfo;                          // 4 elements, 0x10 bytes (sizeof) 
/*0x050*/     struct _GUID ActivityId;                                          // 4 elements, 0x10 bytes (sizeof) 
/*0x060*/     struct _FLT_OBJECT* FltObject;                                                                       
          }FLT_GENERIC_WORKITEM, *PFLT_GENERIC_WORKITEM;                                                           
                                                                                                                   
          typedef struct _FLT_INSTANCE                                 // 13 elements, 0x230 bytes (sizeof) 
          {                                                                                                 
/*0x000*/     struct _FLT_OBJECT Base;                                 // 5 elements, 0x30 bytes (sizeof)   
/*0x030*/     struct _EX_RUNDOWN_REF_CACHE_AWARE* OperationRundownRef;                                      
/*0x038*/     struct _FLT_VOLUME* Volume;                                                                   
/*0x040*/     struct _FLT_FILTER* Filter;                                                                   
/*0x048*/     enum _FLT_INSTANCE_FLAGS Flags;                                                               
/*0x04C*/     UINT8        _PADDING0_[0x4];                                                                 
/*0x050*/     struct _UNICODE_STRING Altitude;                         // 3 elements, 0x10 bytes (sizeof)   
/*0x060*/     struct _UNICODE_STRING Name;                             // 3 elements, 0x10 bytes (sizeof)   
/*0x070*/     struct _LIST_ENTRY FilterLink;                           // 2 elements, 0x10 bytes (sizeof)   
/*0x080*/     struct _EX_PUSH_LOCK ContextLock;                        // 7 elements, 0x8 bytes (sizeof)    
/*0x088*/     struct _CONTEXT_NODE* Context;                                                                
/*0x090*/     struct _CONTEXT_LIST_CTRL TransactionContexts;           // 1 elements, 0x8 bytes (sizeof)    
/*0x098*/     struct _TRACK_COMPLETION_NODES* TrackCompletionNodes;                                         
/*0x0A0*/     struct _CALLBACK_NODE* CallbackNodes[50];                                                     
          }FLT_INSTANCE, *PFLT_INSTANCE;                                                                       
                                                                                                            
          typedef struct _FLT_MESSAGE_WAITER // 1 elements, 0x4 bytes (sizeof) 
          {                                                                    
/*0x000*/     ULONG32      Flags;                                              
          }FLT_MESSAGE_WAITER, *PFLT_MESSAGE_WAITER;                                  
                                                                               
          typedef struct _KSEMAPHORE            // 2 elements, 0x20 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _DISPATCHER_HEADER Header; // 58 elements, 0x18 bytes (sizeof) 
/*0x018*/     LONG32       Limit;                                                   
/*0x01C*/     UINT8        _PADDING0_[0x4];                                         
          }KSEMAPHORE, *PKSEMAPHORE;                                                
                                                                                    
          typedef struct _FLT_MESSAGE_WAITER_QUEUE // 5 elements, 0xD0 bytes (sizeof) 
          {                                                                           
/*0x000*/     struct _IO_CSQ Csq;                  // 8 elements, 0x40 bytes (sizeof) 
/*0x040*/     struct _FLT_MUTEX_LIST_HEAD WaiterQ; // 4 elements, 0x50 bytes (sizeof) 
/*0x090*/     ULONG32      MinimumWaiterLength;                                       
/*0x094*/     UINT8        _PADDING0_[0x4];                                           
/*0x098*/     struct _KSEMAPHORE Semaphore;        // 2 elements, 0x20 bytes (sizeof) 
/*0x0B8*/     struct _KEVENT Event;                // 1 elements, 0x18 bytes (sizeof) 
          }FLT_MESSAGE_WAITER_QUEUE, *PFLT_MESSAGE_WAITER_QUEUE;                                   
                                                                                      
          typedef struct _FLT_NAME_CONTROL // 1 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     struct _UNICODE_STRING Name; // 3 elements, 0x10 bytes (sizeof) 
          }FLT_NAME_CONTROL, *PFLT_NAME_CONTROL;                                   
                                                                              
          typedef struct _FLT_OPERATION_REGISTRATION                        // 5 elements, 0x20 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     UINT8        MajorFunction;                                                                      
/*0x001*/     UINT8        _PADDING0_[0x3];                                                                    
/*0x004*/     ULONG32      Flags;                                                                              
/*0x008*/     FUNCT_0A38_0A37_PreOperation_PreVolumeMount* PreOperation;                                       
/*0x010*/     FUNCT_0BF8_0BF7_PostOperation_PostVolumeMount* PostOperation;                                    
/*0x018*/     VOID*        Reserved1;                                                                          
          }FLT_OPERATION_REGISTRATION, *PFLT_OPERATION_REGISTRATION;                                           
                                                                                                               
typedef struct _FLT_PORT // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}FLT_PORT, *PFLT_PORT;                                     
                                                           
          typedef struct _FLT_PORT_OBJECT                 // 9 elements, 0x158 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _LIST_ENTRY FilterLink;              // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _FLT_SERVER_PORT_OBJECT* ServerPort;                                     
/*0x018*/     VOID*        Cookie;                                                            
/*0x020*/     struct _EX_RUNDOWN_REF MsgNotifRundownRef;  // 2 elements, 0x8 bytes (sizeof)   
/*0x028*/     struct _FAST_MUTEX Lock;                    // 5 elements, 0x38 bytes (sizeof)  
/*0x060*/     struct _FLT_MESSAGE_WAITER_QUEUE MsgQ;      // 5 elements, 0xD0 bytes (sizeof)  
/*0x130*/     UINT64       MessageId;                                                         
/*0x138*/     struct _KEVENT DisconnectEvent;             // 1 elements, 0x18 bytes (sizeof)  
/*0x150*/     UINT8        Disconnected;                                                      
/*0x151*/     UINT8        _PADDING0_[0x7];                                                   
          }FLT_PORT_OBJECT, *PFLT_PORT_OBJECT;                                                
                                                                                              
          typedef struct _FLTPP_LOOKASIDE_LIST  // 2 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     struct _NPAGED_LOOKASIDE_LIST* P;                                    
/*0x008*/     struct _NPAGED_LOOKASIDE_LIST* L;                                    
          }FLTPP_LOOKASIDE_LIST, *PFLTPP_LOOKASIDE_LIST;                                   
                                                                                   
          typedef struct _FLT_PRCB                                     // 1 elements, 0x40 bytes (sizeof) 
          {                                                                                               
/*0x000*/     struct _FLTPP_LOOKASIDE_LIST PPIrpCtrlLookasideLists[2];                                    
/*0x020*/     UINT8        _PADDING0_[0x20];                                                              
          }FLT_PRCB, *PFLT_PRCB;                                                                          
                                                                                                          
          typedef struct _FLT_REGISTRATION                                                                                                                                     // 16 elements, 0x70 bytes (sizeof) 
          {                                                                                                                                                                                                        
/*0x000*/     UINT16       Size;                                                                                                                                                                                   
/*0x002*/     UINT16       Version;                                                                                                                                                                                
/*0x004*/     ULONG32      Flags;                                                                                                                                                                                  
/*0x008*/     struct _FLT_CONTEXT_REGISTRATION* ContextRegistration;                                                                                                                                               
/*0x010*/     struct _FLT_OPERATION_REGISTRATION* OperationRegistration;                                                                                                                                           
/*0x018*/     FUNCT_002F_0BBC_FilterUnload_FilterUnloadCallback* FilterUnloadCallback;                                                                                                                             
/*0x020*/     FUNCT_002F_0BBF_InstanceSetup_InstanceSetupCallback* InstanceSetupCallback;                                                                                                                          
/*0x028*/     FUNCT_002F_0BC5_InstanceQueryTeardown_InstanceQueryTeardownCallback* InstanceQueryTeardownCallback;                                                                                                  
/*0x030*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownStartCallback;                                        
/*0x038*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownCompleteCallback;                                     
/*0x040*/     FUNCT_002F_0BCB_GenerateFileName_GenerateFileNameCallback* GenerateFileNameCallback;                                                                                                                 
/*0x048*/     FUNCT_002F_0BD7_NormalizeNameComponent_NormalizeNameComponentCallback* NormalizeNameComponentCallback;                                                                                               
/*0x050*/     FUNCT_0037_0C10_NormalizeContextCleanup_NormalizeContextCleanupCallback* NormalizeContextCleanupCallback;                                                                                            
/*0x058*/     FUNCT_002F_0C13_KtmNotification_TransactionNotificationCallback* TransactionNotificationCallback;                                                                                                    
/*0x060*/     FUNCT_002F_0BE8_NormalizeNameComponentEx_NormalizeNameComponentExCallback* NormalizeNameComponentExCallback;                                                                                         
/*0x068*/     FUNCT_002F_0C18_SectionNotification_SectionNotificationCallback* SectionNotificationCallback;                                                                                                        
          }FLT_REGISTRATION, *PFLT_REGISTRATION;                                                                                                                                                                   
                                                                                                                                                                                                                   
          typedef struct _FLT_RELATED_CONTEXTS  // 6 elements, 0x30 bytes (sizeof) 
          {                                                                        
/*0x000*/     VOID*        VolumeContext;                                          
/*0x008*/     VOID*        InstanceContext;                                        
/*0x010*/     VOID*        FileContext;                                            
/*0x018*/     VOID*        StreamContext;                                          
/*0x020*/     VOID*        StreamHandleContext;                                    
/*0x028*/     VOID*        TransactionContext;                                     
          }FLT_RELATED_CONTEXTS, *PFLT_RELATED_CONTEXTS;                                   
                                                                                   
          typedef struct _FLT_RELATED_OBJECTS    // 7 elements, 0x30 bytes (sizeof) 
          {                                                                         
/*0x000*/     UINT16       Size;                                                    
/*0x002*/     UINT16       TransactionContext;                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                         
/*0x008*/     struct _FLT_FILTER* Filter;                                           
/*0x010*/     struct _FLT_VOLUME* Volume;                                           
/*0x018*/     struct _FLT_INSTANCE* Instance;                                       
/*0x020*/     struct _FILE_OBJECT* FileObject;                                      
/*0x028*/     struct _KTRANSACTION* Transaction;                                    
          }FLT_RELATED_OBJECTS, *PFLT_RELATED_OBJECTS;                                   
                                                                                    
          typedef struct _FLT_SERVER_PORT_OBJECT                                                                                                         // 9 elements, 0x48 bytes (sizeof) 
          {                                                                                                                                                                                 
/*0x000*/     struct _LIST_ENTRY FilterLink;                                                                                                             // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     FUNCT_002F_0F3C_ConnectNotify* ConnectNotify;                                                                                                                                 
/*0x018*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* DisconnectNotify;                                    
/*0x020*/     FUNCT_002F_0F45_MessageNotify* MessageNotify;                                                                                                                                 
/*0x028*/     struct _FLT_FILTER* Filter;                                                                                                                                                   
/*0x030*/     VOID*        Cookie;                                                                                                                                                          
/*0x038*/     ULONG32      Flags;                                                                                                                                                           
/*0x03C*/     LONG32       NumberOfConnections;                                                                                                                                             
/*0x040*/     LONG32       MaxConnections;                                                                                                                                                  
/*0x044*/     UINT8        _PADDING0_[0x4];                                                                                                                                                 
          }FLT_SERVER_PORT_OBJECT, *PFLT_SERVER_PORT_OBJECT;                                                                                                                                
                                                                                                                                                                                            
          typedef struct _FLT_TAG_DATA_BUFFER            // 7 elements, 0x1C bytes (sizeof) 
          {                                                                                 
/*0x000*/     ULONG32      FileTag;                                                         
/*0x004*/     UINT16       TagDataLength;                                                   
/*0x006*/     UINT16       UnparsedNameLength;                                              
              union                                      // 4 elements, 0x14 bytes (sizeof) 
              {                                                                             
                  struct                                 // 6 elements, 0x10 bytes (sizeof) 
                  {                                                                         
/*0x008*/             UINT16       SubstituteNameOffset;                                    
/*0x00A*/             UINT16       SubstituteNameLength;                                    
/*0x00C*/             UINT16       PrintNameOffset;                                         
/*0x00E*/             UINT16       PrintNameLength;                                         
/*0x010*/             ULONG32      Flags;                                                   
/*0x014*/             WCHAR        PathBuffer[1];                                           
/*0x016*/             UINT8        _PADDING0_[0x2];                                         
                  }SymbolicLinkReparseBuffer;                                               
                  struct                                 // 5 elements, 0xA bytes (sizeof)  
                  {                                                                         
/*0x008*/             UINT16       SubstituteNameOffset;                                    
/*0x00A*/             UINT16       SubstituteNameLength;                                    
/*0x00C*/             UINT16       PrintNameOffset;                                         
/*0x00E*/             UINT16       PrintNameLength;                                         
/*0x010*/             WCHAR        PathBuffer[1];                                           
                  }MountPointReparseBuffer;                                                 
                  struct                                 // 1 elements, 0x1 bytes (sizeof)  
                  {                                                                         
/*0x008*/             UINT8        DataBuffer[1];                                           
                  }GenericReparseBuffer;                                                    
                  struct                                 // 2 elements, 0x14 bytes (sizeof) 
                  {                                                                         
/*0x008*/             struct _GUID TagGuid;              // 4 elements, 0x10 bytes (sizeof) 
/*0x018*/             UINT8        DataBuffer[1];                                           
/*0x019*/             UINT8        _PADDING0_[0x3];                                         
                  }GenericGUIDReparseBuffer;                                                
              };                                                                            
          }FLT_TAG_DATA_BUFFER, *PFLT_TAG_DATA_BUFFER;                                      
                                                                                            
          typedef struct _FLT_TELEMETRY_STOPWATCH // 1 elements, 0x8 bytes (sizeof) 
          {                                                                         
/*0x000*/     union _LARGE_INTEGER StartTime;     // 4 elements, 0x8 bytes (sizeof) 
          }FLT_TELEMETRY_STOPWATCH, *PFLT_TELEMETRY_STOPWATCH;                                  
                                                                                    
          typedef struct _FLT_VERIFIER_OPERATIONS                           // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     FUNCT_0A38_0A37_PreOperation_PreVolumeMount* PreOperation;                                       
/*0x008*/     FUNCT_0BF8_0BF7_PostOperation_PostVolumeMount* PostOperation;                                    
          }FLT_VERIFIER_OPERATIONS, *PFLT_VERIFIER_OPERATIONS;                                                 
                                                                                                               
          typedef struct _FLT_VERIFIER_EXTENSION                                                                                                                       // 17 elements, 0x480 bytes (sizeof) 
          {                                                                                                                                                                                                 
/*0x000*/     enum _FLT_VERIFIER_EXTENSION_FLAGS Flags;                                                                                                                                                     
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                                                                 
/*0x008*/     FUNCT_002F_0BBC_FilterUnload_FilterUnloadCallback* FilterUnload;                                                                                                                              
/*0x010*/     FUNCT_002F_0BBF_InstanceSetup_InstanceSetupCallback* InstanceSetup;                                                                                                                           
/*0x018*/     FUNCT_002F_0BC5_InstanceQueryTeardown_InstanceQueryTeardownCallback* InstanceQueryTeardown;                                                                                                   
/*0x020*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownStart;                                         
/*0x028*/     FUNCT_0037_0BC9_InstanceTeardownStart_InstanceTeardownComplete_InstanceTeardownStartCallback_InstanceTeardownCompleteCallback* InstanceTeardownComplete;                                      
/*0x030*/     FUNCT_002F_0BCB_GenerateFileName_GenerateFileNameCallback* GenerateFileName;                                                                                                                  
/*0x038*/     FUNCT_002F_0BD7_NormalizeNameComponent_NormalizeNameComponentCallback* NormalizeNameComponent;                                                                                                
/*0x040*/     FUNCT_002F_0BE8_NormalizeNameComponentEx_NormalizeNameComponentExCallback* NormalizeNameComponentEx;                                                                                          
/*0x048*/     struct _FLT_VERIFIER_OPERATIONS Operations[50];                                                                                                                                               
/*0x368*/     CHAR*        Name;                                                                                                                                                                            
/*0x370*/     UINT8        _PADDING1_[0x10];                                                                                                                                                                
/*0x380*/     struct _NPAGED_LOOKASIDE_LIST FltVerifierObjectsLookasideList;                                                                                           // 1 elements, 0x80 bytes (sizeof)   
/*0x400*/     struct _TREE_ROOT List;                                                                                                                                  // 1 elements, 0x8 bytes (sizeof)    
/*0x408*/     UINT64       Lock;                                                                                                                                                                            
/*0x410*/     ULONG32      Count[11];                                                                                                                                                                       
/*0x43C*/     LONG32       FltVerifierObjectsAllocFailures;                                                                                                                                                 
/*0x440*/     LONG32       FltVerifierObjectsUnlinkFailures;                                                                                                                                                
/*0x444*/     UINT8        _PADDING2_[0x3C];                                                                                                                                                                
          }FLT_VERIFIER_EXTENSION, *PFLT_VERIFIER_EXTENSION;                                                                                                                                                
                                                                                                                                                                                                            
          typedef struct _FLT_VERIFIER_OBJECT // 4 elements, 0x50 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _TREE_NODE TreeLink;     // 5 elements, 0x38 bytes (sizeof) 
/*0x038*/     ULONG32      Type;                                                 
/*0x03C*/     UINT8        _PADDING0_[0x4];                                      
/*0x040*/     VOID*        Object;                                               
/*0x048*/     LONG32       RefCount;                                             
/*0x04C*/     UINT8        _PADDING1_[0x4];                                      
          }FLT_VERIFIER_OBJECT, *PFLT_VERIFIER_OBJECT;                                   
                                                                                 
          typedef struct _NAME_CACHE_LIST_CTRL_STATS // 7 elements, 0x1C bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      Searches;                                                    
/*0x004*/     ULONG32      Hits;                                                        
/*0x008*/     ULONG32      Created;                                                     
/*0x00C*/     ULONG32      Temporary;                                                   
/*0x010*/     ULONG32      Duplicate;                                                   
/*0x014*/     ULONG32      Removed;                                                     
/*0x018*/     ULONG32      RemovedDueToCase;                                            
          }NAME_CACHE_LIST_CTRL_STATS, *PNAME_CACHE_LIST_CTRL_STATS;                                   
                                                                                        
          typedef struct _NAME_CACHE_VOLUME_CTRL_STATS            // 8 elements, 0x68 bytes (sizeof) 
          {                                                                                          
/*0x000*/     ULONG32      AllContextsTemporary;                                                     
/*0x004*/     ULONG32      PurgeNameCache;                                                           
/*0x008*/     struct _NAME_CACHE_LIST_CTRL_STATS NormalizedNames; // 7 elements, 0x1C bytes (sizeof) 
/*0x024*/     struct _NAME_CACHE_LIST_CTRL_STATS OpenedNames;     // 7 elements, 0x1C bytes (sizeof) 
/*0x040*/     struct _NAME_CACHE_LIST_CTRL_STATS ShortNames;      // 7 elements, 0x1C bytes (sizeof) 
/*0x05C*/     ULONG32      AncestorLookup;                                                           
/*0x060*/     ULONG32      ParentHit;                                                                
/*0x064*/     ULONG32      NonParentHit;                                                             
          }NAME_CACHE_VOLUME_CTRL_STATS, *PNAME_CACHE_VOLUME_CTRL_STATS;                                   
                                                                                                     
          typedef struct _NAME_CACHE_VOLUME_CTRL                 // 5 elements, 0xB8 bytes (sizeof) 
          {                                                                                         
/*0x000*/     struct _FAST_MUTEX Lock;                           // 5 elements, 0x38 bytes (sizeof) 
/*0x038*/     LONG32       AllContextsTemporary;                                                    
/*0x03C*/     UINT8        _PADDING0_[0x4];                                                         
/*0x040*/     union _LARGE_INTEGER LastDirectoryRenameCompleted; // 4 elements, 0x8 bytes (sizeof)  
/*0x048*/     union _LARGE_INTEGER LastFileRenameCompleted;      // 4 elements, 0x8 bytes (sizeof)  
/*0x050*/     struct _NAME_CACHE_VOLUME_CTRL_STATS Stats;        // 8 elements, 0x68 bytes (sizeof) 
          }NAME_CACHE_VOLUME_CTRL, *PNAME_CACHE_VOLUME_CTRL;                                        
                                                                                                    
          typedef struct _FLT_VOLUME                          // 24 elements, 0x758 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _FLT_OBJECT Base;                        // 5 elements, 0x30 bytes (sizeof)   
/*0x030*/     enum _FLT_VOLUME_FLAGS Flags;                                                        
/*0x034*/     enum _FLT_FILESYSTEM_TYPE FileSystemType;                                            
/*0x038*/     struct _DEVICE_OBJECT* DeviceObject;                                                 
/*0x040*/     struct _DEVICE_OBJECT* DiskDeviceObject;    //FltGetDiskDeviceObject                                         
/*0x048*/     struct _FLT_VOLUME* FrameZeroVolume;                                                 
/*0x050*/     struct _FLT_VOLUME* VolumeInNextFrame;                                               
/*0x058*/     struct _FLTP_FRAME* Frame;                                                           
/*0x060*/     struct _UNICODE_STRING DeviceName;              // 3 elements, 0x10 bytes (sizeof)   
/*0x070*/     struct _UNICODE_STRING GuidName;                // 3 elements, 0x10 bytes (sizeof)   
/*0x080*/     struct _UNICODE_STRING CDODeviceName;           // 3 elements, 0x10 bytes (sizeof)   
/*0x090*/     struct _UNICODE_STRING CDODriverName;           // 3 elements, 0x10 bytes (sizeof)   
/*0x0A0*/     struct _FLT_RESOURCE_LIST_HEAD InstanceList;    // 3 elements, 0x80 bytes (sizeof)   
/*0x120*/     struct _CALLBACK_CTRL Callbacks;                // 2 elements, 0x3E8 bytes (sizeof)  
/*0x508*/     struct _EX_PUSH_LOCK ContextLock;               // 7 elements, 0x8 bytes (sizeof)    
/*0x510*/     struct _CONTEXT_LIST_CTRL VolumeContexts;       // 1 elements, 0x8 bytes (sizeof)    
/*0x518*/     struct _FLT_RESOURCE_LIST_HEAD StreamListCtrls; // 3 elements, 0x80 bytes (sizeof)   
/*0x598*/     struct _FLT_RESOURCE_LIST_HEAD FileListCtrls;   // 3 elements, 0x80 bytes (sizeof)   
/*0x618*/     struct _NAME_CACHE_VOLUME_CTRL NameCacheCtrl;   // 5 elements, 0xB8 bytes (sizeof)   
/*0x6D0*/     struct _ERESOURCE MountNotifyLock;              // 17 elements, 0x68 bytes (sizeof)  
/*0x738*/     LONG32       TargetedOpenActiveCount;                                                
/*0x73C*/     UINT8        _PADDING0_[0x4];                                                        
/*0x740*/     struct _EX_PUSH_LOCK TxVolContextListLock;      // 7 elements, 0x8 bytes (sizeof)    
/*0x748*/     struct _TREE_ROOT TxVolContexts;                // 1 elements, 0x8 bytes (sizeof)    
/*0x750*/     LONG32       SupportedFeatures;                                                      
/*0x754*/     UINT8        _PADDING1_[0x4];                                                        
          }FLT_VOLUME, *PFLT_VOLUME;                                                               
                                                                                                   
          typedef struct _FLT_VOLUME_PROPERTIES            // 9 elements, 0x48 bytes (sizeof) 
          {                                                                                   
/*0x000*/     ULONG32      DeviceType;                                                        
/*0x004*/     ULONG32      DeviceCharacteristics;                                             
/*0x008*/     ULONG32      DeviceObjectFlags;                                                 
/*0x00C*/     ULONG32      AlignmentRequirement;                                              
/*0x010*/     UINT16       SectorSize;                                                        
/*0x012*/     UINT16       Flags;                                                             
/*0x014*/     UINT8        _PADDING0_[0x4];                                                   
/*0x018*/     struct _UNICODE_STRING FileSystemDriverName; // 3 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _UNICODE_STRING FileSystemDeviceName; // 3 elements, 0x10 bytes (sizeof) 
/*0x038*/     struct _UNICODE_STRING RealDeviceName;       // 3 elements, 0x10 bytes (sizeof) 
          }FLT_VOLUME_PROPERTIES, *PFLT_VOLUME_PROPERTIES;                                    
                                                                                              
          typedef union _ULARGE_INTEGER  // 4 elements, 0x8 bytes (sizeof) 
          {                                                                
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         ULONG32      HighPart;                                   
              };                                                           
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         ULONG32      HighPart;                                   
              }u;                                                          
/*0x000*/     UINT64       QuadPart;                                       
          }ULARGE_INTEGER, *PULARGE_INTEGER;                                  
                                                                           
          typedef struct _KTIMER                 // 6 elements, 0x40 bytes (sizeof)  
          {                                                                          
/*0x000*/     struct _DISPATCHER_HEADER Header;  // 58 elements, 0x18 bytes (sizeof) 
/*0x018*/     union _ULARGE_INTEGER DueTime;     // 4 elements, 0x8 bytes (sizeof)   
/*0x020*/     struct _LIST_ENTRY TimerListEntry; // 2 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _KDPC* Dpc;                                                     
/*0x038*/     ULONG32      Processor;                                                
/*0x03C*/     ULONG32      Period;                                                   
          }KTIMER, *PKTIMER;                                                         
                                                                                     
          typedef struct _FLTP_IRPCTRL_STACK_PROFILER // 9 elements, 0x118 bytes (sizeof) 
          {                                                                               
/*0x000*/     struct _FLTP_FRAME* Frame;                                                  
/*0x008*/     ULONG32      Profile[10];                                                   
/*0x030*/     struct _KTIMER Timer;                   // 6 elements, 0x40 bytes (sizeof)  
/*0x070*/     struct _KDPC Dpc;                       // 11 elements, 0x40 bytes (sizeof) 
/*0x0B0*/     struct _WORK_QUEUE_ITEM WorkItem;       // 3 elements, 0x20 bytes (sizeof)  
/*0x0D0*/     struct _FAST_MUTEX Mutex;               // 5 elements, 0x38 bytes (sizeof)  
/*0x108*/     ULONG32      WorkItemFlags;                                                 
/*0x10C*/     ULONG32      Flags;                                                         
/*0x110*/     ULONG32      AllocCount;                                                    
/*0x114*/     UINT8        _PADDING0_[0x4];                                               
          }FLTP_IRPCTRL_STACK_PROFILER, *PFLTP_IRPCTRL_STACK_PROFILER;                                    
                                                                                          
          typedef struct _RESERVE_IRPCTRL                 // 5 elements, 0x248 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _IRP_CTRL* StaticIrpCtrl[10];                                            
/*0x050*/     struct _KTHREAD* StaticOwningThread[10];                                        
/*0x0A0*/     struct _KSEMAPHORE StaticLock[10];                                              
/*0x1E0*/     struct _KSEMAPHORE EntriesLock;             // 2 elements, 0x20 bytes (sizeof)  
/*0x200*/     struct _BACKPOCKET_THREAD_ENTRY Entries[3];                                     
          }RESERVE_IRPCTRL, *PRESERVE_IRPCTRL;                                                
                                                                                              
          typedef struct _FLTP_FRAME                                    // 23 elements, 0x780 bytes (sizeof) 
          {                                                                                                  
/*0x000*/     union _FLT_TYPE Type;                                     // 2 elements, 0x4 bytes (sizeof)    
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                  
/*0x008*/     struct _LIST_ENTRY Links;                                 // 2 elements, 0x10 bytes (sizeof)   
/*0x018*/     ULONG32      FrameID;                                                                          
/*0x01C*/     UINT8        _PADDING1_[0x4];                                                                  
/*0x020*/     struct _UNICODE_STRING AltitudeIntervalLow;               // 3 elements, 0x10 bytes (sizeof)   
/*0x030*/     struct _UNICODE_STRING AltitudeIntervalHigh;              // 3 elements, 0x10 bytes (sizeof)   
/*0x040*/     UINT8        LargeIrpCtrlStackSize;                                                            
/*0x041*/     UINT8        SmallIrpCtrlStackSize;                                                            
/*0x042*/     UINT8        _PADDING2_[0x6];                                                                  
/*0x048*/     struct _FLT_RESOURCE_LIST_HEAD RegisteredFilters;         // 3 elements, 0x80 bytes (sizeof)   
/*0x0C8*/     struct _FLT_RESOURCE_LIST_HEAD AttachedVolumes;           // 3 elements, 0x80 bytes (sizeof)   
/*0x148*/     struct _LIST_ENTRY MountingVolumes;                       // 2 elements, 0x10 bytes (sizeof)   
/*0x158*/     struct _FLT_MUTEX_LIST_HEAD AttachedFileSystems;          // 4 elements, 0x50 bytes (sizeof)   
/*0x1A8*/     struct _FLT_MUTEX_LIST_HEAD ZombiedFltObjectContexts;     // 4 elements, 0x50 bytes (sizeof)   
/*0x1F8*/     VOID*        KtmResourceManagerHandle;                                                         
/*0x200*/     struct _KRESOURCEMANAGER* KtmResourceManager;                                                  
/*0x208*/     struct _ERESOURCE FilterUnloadLock;                       // 17 elements, 0x68 bytes (sizeof)  
/*0x270*/     struct _FAST_MUTEX DeviceObjectAttachLock;                // 5 elements, 0x38 bytes (sizeof)   
/*0x2A8*/     struct _FLT_PRCB* Prcb;                                                                        
/*0x2B0*/     VOID*        PrcbPoolToFree;                                                                   
/*0x2B8*/     VOID*        LookasidePoolToFree;                                                              
/*0x2C0*/     struct _FLTP_IRPCTRL_STACK_PROFILER IrpCtrlStackProfiler; // 9 elements, 0x118 bytes (sizeof)  
/*0x3D8*/     UINT8        _PADDING3_[0x28];                                                                 
/*0x400*/     struct _NPAGED_LOOKASIDE_LIST SmallIrpCtrlLookasideList;  // 1 elements, 0x80 bytes (sizeof)   
/*0x480*/     struct _NPAGED_LOOKASIDE_LIST LargeIrpCtrlLookasideList;  // 1 elements, 0x80 bytes (sizeof)   
/*0x500*/     struct _RESERVE_IRPCTRL ReserveIrpCtrls;                  // 5 elements, 0x248 bytes (sizeof)  
/*0x748*/     UINT8        _PADDING4_[0x38];                                                                 
          }FLTP_FRAME, *PFLTP_FRAME;                                                                         
                                                                                                             
          typedef struct _FS_CONTROL_DEVICE_EXTENSION        // 7 elements, 0x50 bytes (sizeof) 
          {                                                                                     
/*0x000*/     union _FLT_TYPE Type;                          // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                                     
/*0x008*/     struct _DEVICE_OBJECT* AttachedToDeviceObject;                                    
/*0x010*/     struct _FLTP_FRAME* Frame;                                                        
/*0x018*/     struct _LIST_ENTRY Link;                       // 2 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _DEVICE_OBJECT* DeviceObject;                                              
/*0x030*/     struct _UNICODE_STRING ControlDeviceName;      // 3 elements, 0x10 bytes (sizeof) 
/*0x040*/     struct _UNICODE_STRING DriverObjectName;       // 3 elements, 0x10 bytes (sizeof) 
          }FS_CONTROL_DEVICE_EXTENSION, *PFS_CONTROL_DEVICE_EXTENSION;                                   
                                                                                                
          typedef union _FS_FILTER_PARAMETERS                                   // 6 elements, 0x28 bytes (sizeof) 
          {                                                                                                        
              struct                                                            // 2 elements, 0x10 bytes (sizeof) 
              {                                                                                                    
/*0x000*/         union _LARGE_INTEGER* EndingOffset;                                                              
/*0x008*/         struct _ERESOURCE** ResourceToRelease;                                                           
              }AcquireForModifiedPageWriter;                                                                       
              struct                                                            // 1 elements, 0x8 bytes (sizeof)  
              {                                                                                                    
/*0x000*/         struct _ERESOURCE* ResourceToRelease;                                                            
              }ReleaseForModifiedPageWriter;                                                                       
              struct                                                            // 3 elements, 0x10 bytes (sizeof) 
              {                                                                                                    
/*0x000*/         enum _FS_FILTER_SECTION_SYNC_TYPE SyncType;                                                      
/*0x004*/         ULONG32      PageProtection;                                                                     
/*0x008*/         struct _FS_FILTER_SECTION_SYNC_OUTPUT* OutputInformation;                                        
              }AcquireForSectionSynchronization;                                                                   
              struct                                                            // 2 elements, 0x10 bytes (sizeof) 
              {                                                                                                    
/*0x000*/         enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE NotificationType;                                    
/*0x004*/         UINT8        _PADDING0_[0x4];                                                                    
/*0x008*/         UINT8        SafeToRecurse;                                                                      
/*0x009*/         UINT8        _PADDING1_[0x7];                                                                    
              }NotifyStreamFileObject;                                                                             
              struct                                                            // 5 elements, 0x20 bytes (sizeof) 
              {                                                                                                    
/*0x000*/         struct _IRP* Irp;                                                                                
/*0x008*/         VOID*        FileInformation;                                                                    
/*0x010*/         ULONG32*     Length;                                                                             
/*0x018*/         enum _FILE_INFORMATION_CLASS FileInformationClass;                                               
/*0x01C*/         LONG32       CompletionStatus;                                                                   
              }QueryOpen;                                                                                          
              struct                                                            // 5 elements, 0x28 bytes (sizeof) 
              {                                                                                                    
/*0x000*/         VOID*        Argument1;                                                                          
/*0x008*/         VOID*        Argument2;                                                                          
/*0x010*/         VOID*        Argument3;                                                                          
/*0x018*/         VOID*        Argument4;                                                                          
/*0x020*/         VOID*        Argument5;                                                                          
              }Others;                                                                                             
          }FS_FILTER_PARAMETERS, *PFS_FILTER_PARAMETERS;                                                           
                                                                                                                   
          typedef struct _FS_FILTER_CALLBACK_DATA      // 6 elements, 0x40 bytes (sizeof) 
          {                                                                               
/*0x000*/     ULONG32      SizeOfFsFilterCallbackData;                                    
/*0x004*/     UINT8        Operation;                                                     
/*0x005*/     UINT8        Reserved;                                                      
/*0x006*/     UINT8        _PADDING0_[0x2];                                               
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                        
/*0x010*/     struct _FILE_OBJECT* FileObject;                                            
/*0x018*/     union _FS_FILTER_PARAMETERS Parameters;  // 6 elements, 0x28 bytes (sizeof) 
          }FS_FILTER_CALLBACK_DATA, *PFS_FILTER_CALLBACK_DATA;                                   
                                                                                          
          typedef struct _FS_FILTER_SECTION_SYNC_OUTPUT // 4 elements, 0x10 bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      StructureSize;                                                  
/*0x004*/     ULONG32      SizeReturned;                                                   
/*0x008*/     ULONG32      Flags;                                                          
/*0x00C*/     ULONG32      DesiredReadAlignment;                                           
          }FS_FILTER_SECTION_SYNC_OUTPUT, *PFS_FILTER_SECTION_SYNC_OUTPUT;                                   
                                                                                           
          typedef struct _FSRTL_ADVANCED_FCB_HEADER   // 19 elements, 0x68 bytes (sizeof) 
          {                                                                               
/*0x000*/     INT16        NodeTypeCode;                                                  
/*0x002*/     INT16        NodeByteSize;                                                  
/*0x004*/     UINT8        Flags;                                                         
/*0x005*/     UINT8        IsFastIoPossible;                                              
/*0x006*/     UINT8        Flags2;                                                        
              struct                                  // 2 elements, 0x1 bytes (sizeof)   
              {                                                                           
/*0x007*/         UINT8        Reserved : 4;          // 0 BitPosition                    
/*0x007*/         UINT8        Version : 4;           // 4 BitPosition                    
              };                                                                          
/*0x008*/     struct _ERESOURCE* Resource;                                                
/*0x010*/     struct _ERESOURCE* PagingIoResource;                                        
/*0x018*/     union _LARGE_INTEGER AllocationSize;    // 4 elements, 0x8 bytes (sizeof)   
/*0x020*/     union _LARGE_INTEGER FileSize;          // 4 elements, 0x8 bytes (sizeof)   
/*0x028*/     union _LARGE_INTEGER ValidDataLength;   // 4 elements, 0x8 bytes (sizeof)   
/*0x030*/     struct _FAST_MUTEX* FastMutex;                                              
/*0x038*/     struct _LIST_ENTRY FilterContexts;      // 2 elements, 0x10 bytes (sizeof)  
/*0x048*/     UINT64       PushLock;                                                      
/*0x050*/     VOID**       FileContextSupportPointer;                                     
              union                                   // 2 elements, 0x8 bytes (sizeof)   
              {                                                                           
/*0x058*/         VOID*        Oplock;                                                    
/*0x058*/         VOID*        ReservedForRemote;                                         
              };                                                                          
/*0x060*/     VOID*        ReservedContext;                                               
          }FSRTL_ADVANCED_FCB_HEADER, *PFSRTL_ADVANCED_FCB_HEADER;                                    
                                                                                          
          typedef struct _GENERAL_LOOKASIDE_POOL                                                                                                 // 22 elements, 0x60 bytes (sizeof) 
          {                                                                                                                                                                          
              union                                                                                                                              // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                                                                      
/*0x000*/         union _SLIST_HEADER ListHead;                                                                                                  // 3 elements, 0x10 bytes (sizeof)  
/*0x000*/         struct _SINGLE_LIST_ENTRY SingleListHead;                                                                                      // 1 elements, 0x8 bytes (sizeof)   
              };                                                                                                                                                                     
/*0x010*/     UINT16       Depth;                                                                                                                                                    
/*0x012*/     UINT16       MaximumDepth;                                                                                                                                             
/*0x014*/     ULONG32      TotalAllocates;                                                                                                                                           
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x018*/         ULONG32      AllocateMisses;                                                                                                                                       
/*0x018*/         ULONG32      AllocateHits;                                                                                                                                         
              };                                                                                                                                                                     
/*0x01C*/     ULONG32      TotalFrees;                                                                                                                                               
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x020*/         ULONG32      FreeMisses;                                                                                                                                           
/*0x020*/         ULONG32      FreeHits;                                                                                                                                             
              };                                                                                                                                                                     
/*0x024*/     enum _POOL_TYPE Type;                                                                                                                                                  
/*0x028*/     ULONG32      Tag;                                                                                                                                                      
/*0x02C*/     ULONG32      Size;                                                                                                                                                     
              union                                                                                                                              // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x030*/         FUNCT_0036_00E0_AllocateEx* AllocateEx;                                                                                                                            
/*0x030*/         FUNCT_0036_00E7_Allocate* Allocate;                                                                                                                                
              };                                                                                                                                                                     
              union                                                                                                                              // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x038*/         FUNCT_0037_00EC_FreeEx* FreeEx;                                                                                                                                    
/*0x038*/         FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* Free;                                     
              };                                                                                                                                                                     
/*0x040*/     struct _LIST_ENTRY ListEntry;                                                                                                      // 2 elements, 0x10 bytes (sizeof)  
/*0x050*/     ULONG32      LastTotalAllocates;                                                                                                                                       
              union                                                                                                                              // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                                                      
/*0x054*/         ULONG32      LastAllocateMisses;                                                                                                                                   
/*0x054*/         ULONG32      LastAllocateHits;                                                                                                                                     
              };                                                                                                                                                                     
/*0x058*/     ULONG32      Future[2];                                                                                                                                                
          }GENERAL_LOOKASIDE_POOL, *PGENERAL_LOOKASIDE_POOL;                                                                                                                         
                                                                                                                                                                                     
          typedef struct _THROTTLE_ELEMENT    // 3 elements, 0x18 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _LIST_ENTRY PendingList; // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     ULONG32      RunningCount;                                         
/*0x014*/     ULONG32      RunningLimit;                                         
          }THROTTLE_ELEMENT, *PTHROTTLE_ELEMENT;                                   
                                                                                 
          typedef struct _THROTTLED_WORK_ITEM_CTRL // 2 elements, 0x50 bytes (sizeof) 
          {                                                                           
/*0x000*/     UINT64       ThrottleLock;                                              
/*0x008*/     struct _THROTTLE_ELEMENT Queues[3];                                     
          }THROTTLED_WORK_ITEM_CTRL, *PTHROTTLED_WORK_ITEM_CTRL;                                   
                                                                                      
          typedef struct _WMI_FLTIO_NOTIFY_ROUTINES                                                             // 6 elements, 0x30 bytes (sizeof) 
          {                                                                                                                                        
/*0x000*/     FUNCT_0037_0EF7_TimeStampRoutine* TimeStampRoutine;                                                                                  
/*0x008*/     FUNCT_0037_0EFC_FailureNotifyRoutine_InitiationNotifyRoutine* FailureNotifyRoutine;                                                  
/*0x010*/     FUNCT_0037_0EFC_FailureNotifyRoutine_InitiationNotifyRoutine* InitiationNotifyRoutine;                                               
/*0x018*/     FUNCT_0037_0F02_CompletionNotifyRoutine_FastCompletionNotifyRoutine* CompletionNotifyRoutine;                                        
/*0x020*/     FUNCT_0037_0F02_CompletionNotifyRoutine_FastCompletionNotifyRoutine* FastCompletionNotifyRoutine;                                    
/*0x028*/     FUNCT_0037_0F09_IoRedirectionNotifyRoutine* IoRedirectionNotifyRoutine;                                                              
          }WMI_FLTIO_NOTIFY_ROUTINES, *PWMI_FLTIO_NOTIFY_ROUTINES;                                                                                 
                                                                                                                                                   
          typedef struct _GLOBALS                                                                              // 62 elements, 0xE80 bytes (sizeof) 
          {                                                                                                                                         
/*0x000*/     ULONG32      DebugFlags;                                                                                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                         
/*0x008*/     UINT64       TraceFlags;                                                                                                              
/*0x010*/     ULONG32      GFlags;                                                                                                                  
/*0x014*/     UINT8        _PADDING1_[0x4];                                                                                                         
/*0x018*/     UINT64       RegHandle;                                                                                                               
/*0x020*/     ULONG32      NumProcessors;                                                                                                           
/*0x024*/     ULONG32      CacheLineSize;                                                                                                           
/*0x028*/     ULONG32      AlignedInstanceTrackingListSize;                                                                                         
/*0x02C*/     UINT8        _PADDING2_[0x4];                                                                                                         
/*0x030*/     struct _DEVICE_OBJECT* ControlDeviceObject;                                                                                           
/*0x038*/     struct _DRIVER_OBJECT* DriverObject;                                                                                                  
/*0x040*/     VOID*        KtmTransactionManagerHandle;                                                                                             
/*0x048*/     VOID*        TxVolKtmResourceManagerHandle;                                                                                           
/*0x050*/     struct _KRESOURCEMANAGER* TxVolKtmResourceManager;                                                                                    
/*0x058*/     struct _FLT_RESOURCE_LIST_HEAD FrameList;                                                        // 3 elements, 0x80 bytes (sizeof)   
/*0x0D8*/     struct _FAST_MUTEX Phase2InitLock;                                                               // 5 elements, 0x38 bytes (sizeof)   
/*0x110*/     struct _UNICODE_STRING RegistryPath;                                                             // 3 elements, 0x10 bytes (sizeof)   
/*0x120*/     WCHAR        RegistryPathBuffer[160];                                                                                                 
/*0x260*/     struct _EX_PUSH_LOCK_CACHE_AWARE_LEGACY* GlobalVolumeOperationLock;                                                                   
/*0x268*/     struct _OBJECT_TYPE* FltpServerPortObjectType;                                                                                        
/*0x270*/     struct _OBJECT_TYPE* FltpCommunicationPortObjectType;                                                                                 
/*0x278*/     struct _DEVICE_OBJECT* MsgDeviceObject;                                                                                               
/*0x280*/     struct _EX_TIMER* ManualDeviceAttachTimer;                                                                                            
/*0x288*/     struct _WORK_QUEUE_ITEM ManualDeviceAttachWork;                                                  // 3 elements, 0x20 bytes (sizeof)   
/*0x2A8*/     LONG32       ManualDeviceAttachLimit;                                                                                                 
/*0x2AC*/     LONG32       ManualAttachDelayCounter;                                                                                                
/*0x2B0*/     ULONG32      FastManualAttachTimerPeriod;                                                                                             
/*0x2B4*/     ULONG32      ManualAttachTimerPeriod;                                                                                                 
/*0x2B8*/     ULONG32      ManualAttachDelay;                                                                                                       
/*0x2BC*/     UINT8        ManualAttachIgnoredDevices;                                                                                              
/*0x2BD*/     UINT8        ManualAttachOnlyOnceDevices;                                                                                             
/*0x2BE*/     UINT8        ManualAttachFastAttachDevices;                                                                                           
/*0x2BF*/     UINT8        _PADDING3_[0x1];                                                                                                         
/*0x2C0*/     struct _NPAGED_LOOKASIDE_LIST TargetedIoCtrlLookasideList;                                       // 1 elements, 0x80 bytes (sizeof)   
/*0x340*/     struct _PAGED_LOOKASIDE_LIST IoDeviceHintLookasideList;                                          // 1 elements, 0x80 bytes (sizeof)   
/*0x3C0*/     struct _NPAGED_LOOKASIDE_LIST StreamListCtrlLookasideList;                                       // 1 elements, 0x80 bytes (sizeof)   
/*0x440*/     struct _NPAGED_LOOKASIDE_LIST FileListCtrlLookasideList;                                         // 1 elements, 0x80 bytes (sizeof)   
/*0x4C0*/     struct _NPAGED_LOOKASIDE_LIST NameCacheCreateCtrlLookasideList;                                  // 1 elements, 0x80 bytes (sizeof)   
/*0x540*/     struct _NPAGED_LOOKASIDE_LIST AsyncIoContextLookasideList;                                       // 1 elements, 0x80 bytes (sizeof)   
/*0x5C0*/     struct _NPAGED_LOOKASIDE_LIST WorkItemLookasideList;                                             // 1 elements, 0x80 bytes (sizeof)   
/*0x640*/     struct _NPAGED_LOOKASIDE_LIST NameControlLookasideList;                                          // 1 elements, 0x80 bytes (sizeof)   
/*0x6C0*/     struct _NPAGED_LOOKASIDE_LIST OperationStatusCtrlLookasideList;                                  // 1 elements, 0x80 bytes (sizeof)   
/*0x740*/     struct _NPAGED_LOOKASIDE_LIST NameGenerationContextLookasideList;                                // 1 elements, 0x80 bytes (sizeof)   
/*0x7C0*/     struct _PAGED_LOOKASIDE_LIST FileLockLookasideList;                                              // 1 elements, 0x80 bytes (sizeof)   
/*0x840*/     struct _NPAGED_LOOKASIDE_LIST TxnParameterBlockLookasideList;                                    // 1 elements, 0x80 bytes (sizeof)   
/*0x8C0*/     struct _NPAGED_LOOKASIDE_LIST TxCtxExtensionNPagedLookasideList;                                 // 1 elements, 0x80 bytes (sizeof)   
/*0x940*/     struct _NPAGED_LOOKASIDE_LIST TxVolCtxLookasideList;                                             // 1 elements, 0x80 bytes (sizeof)   
/*0x9C0*/     struct _PAGED_LOOKASIDE_LIST TxVolStreamListCtrlEntryLookasideList;                              // 1 elements, 0x80 bytes (sizeof)   
/*0xA40*/     struct _NPAGED_LOOKASIDE_LIST SectionListCtrlLookasideList;                                      // 1 elements, 0x80 bytes (sizeof)   
/*0xAC0*/     struct _NPAGED_LOOKASIDE_LIST SectionCtxExtensionLookasideList;                                  // 1 elements, 0x80 bytes (sizeof)   
/*0xB40*/     struct _PAGED_LOOKASIDE_LIST OpenReparseListLookasideList;                                       // 1 elements, 0x80 bytes (sizeof)   
/*0xBC0*/     struct _PAGED_LOOKASIDE_LIST OpenReparseListEntryLookasideList;                                  // 1 elements, 0x80 bytes (sizeof)   
/*0xC40*/     struct _PAGED_LOOKASIDE_LIST QueryOnCreateLookasideList;                                         // 1 elements, 0x80 bytes (sizeof)   
/*0xCC0*/     struct _2022020310183100148D9E731B2E1FDF7_FltpParameterOffsetTable FltpParameterOffsetTable[28];                                      
/*0xDA0*/     struct _THROTTLED_WORK_ITEM_CTRL ThrottledWorkCtrl;                                              // 2 elements, 0x50 bytes (sizeof)   
/*0xDF0*/     ULONG32      LostItemDelayInSeconds;                                                                                                  
/*0xDF4*/     UINT8        _PADDING4_[0x4];                                                                                                         
/*0xDF8*/     struct _LIST_ENTRY VerifiedFiltersList;                                                          // 2 elements, 0x10 bytes (sizeof)   
/*0xE08*/     UINT64       VerifiedFiltersLock;                                                                                                     
/*0xE10*/     LONG32       VerifiedResourceLinkFailures;                                                                                            
/*0xE14*/     LONG32       VerifiedResourceUnlinkFailures;                                                                                          
/*0xE18*/     struct _WMI_FLTIO_NOTIFY_ROUTINES* PerfTraceRoutines;                                                                                 
/*0xE20*/     struct _WMI_FLTIO_NOTIFY_ROUTINES DummyPerfTraceRoutines;                                        // 6 elements, 0x30 bytes (sizeof)   
/*0xE50*/     union _LARGE_INTEGER RenameCounter;                                                              // 4 elements, 0x8 bytes (sizeof)    
/*0xE58*/     LONG32       FilterSupportedFeaturesMode;                                                                                             
/*0xE5C*/     UINT8        _PADDING5_[0x4];                                                                                                         
/*0xE60*/     UINT64       InitialRundownSize;                                                                                                      
/*0xE68*/     UINT8        _PADDING6_[0x18];                                                                                                        
          }GLOBALS, *PGLOBALS;                                                                                                                      
                                                                                                                                                    
          typedef struct _INTERFACE                                                                                                                          // 5 elements, 0x20 bytes (sizeof) 
          {                                                                                                                                                                                     
/*0x000*/     UINT16       Size;                                                                                                                                                                
/*0x002*/     UINT16       Version;                                                                                                                                                             
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                                                     
/*0x008*/     VOID*        Context;                                                                                                                                                             
/*0x010*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* InterfaceReference;                                      
/*0x018*/     FUNCT_0037_00F0_Free_WorkerRoutine_DeleteCallback_InterfaceReference_InterfaceDereference_FreeCallback_DisconnectNotify* InterfaceDereference;                                    
          }INTERFACE, *PINTERFACE;                                                                                                                                                              
                                                                                                                                                                                                
          typedef struct _IO_COMPLETION_CONTEXT // 2 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     VOID*        Port;                                                   
/*0x008*/     VOID*        Key;                                                    
          }IO_COMPLETION_CONTEXT, *PIO_COMPLETION_CONTEXT;                                   
                                                                                   
          typedef struct _IO_DRIVER_CREATE_CONTEXT        // 5 elements, 0x28 bytes (sizeof) 
          {                                                                                  
/*0x000*/     INT16        Size;                                                             
/*0x002*/     UINT8        _PADDING0_[0x6];                                                  
/*0x008*/     struct _ECP_LIST* ExtraCreateParameter;                                        
/*0x010*/     VOID*        DeviceObjectHint;                                                 
/*0x018*/     struct _TXN_PARAMETER_BLOCK* TxnParameters;                                    
/*0x020*/     struct _EJOB* SiloContext;                                                     
          }IO_DRIVER_CREATE_CONTEXT, *PIO_DRIVER_CREATE_CONTEXT;                                   
                                                                                             
          typedef struct _IO_RESOURCE_DESCRIPTOR              // 7 elements, 0x20 bytes (sizeof)  
          {                                                                                       
/*0x000*/     UINT8        Option;                                                                
/*0x001*/     UINT8        Type;                                                                  
/*0x002*/     UINT8        ShareDisposition;                                                      
/*0x003*/     UINT8        Spare1;                                                                
/*0x004*/     UINT16       Flags;                                                                 
/*0x006*/     UINT16       Spare2;                                                                
              union                                           // 13 elements, 0x18 bytes (sizeof) 
              {                                                                                   
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length;                                                        
/*0x00C*/             ULONG32      Alignment;                                                     
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Port;                                                                          
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length;                                                        
/*0x00C*/             ULONG32      Alignment;                                                     
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Memory;                                                                        
                  struct                                      // 5 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      MinimumVector;                                                 
/*0x00C*/             ULONG32      MaximumVector;                                                 
/*0x010*/             enum _IRQ_DEVICE_POLICY AffinityPolicy;                                     
/*0x014*/             enum _IRQ_PRIORITY PriorityPolicy;                                          
/*0x018*/             UINT64       TargetedProcessors;                                            
                  }Interrupt;                                                                     
                  struct                                      // 2 elements, 0x8 bytes (sizeof)   
                  {                                                                               
/*0x008*/             ULONG32      MinimumChannel;                                                
/*0x00C*/             ULONG32      MaximumChannel;                                                
                  }Dma;                                                                           
                  struct                                      // 4 elements, 0x10 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      RequestLine;                                                   
/*0x00C*/             ULONG32      Reserved;                                                      
/*0x010*/             ULONG32      Channel;                                                       
/*0x014*/             ULONG32      TransferWidth;                                                 
                  }DmaV3;                                                                         
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length;                                                        
/*0x00C*/             ULONG32      Alignment;                                                     
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Generic;                                                                       
                  struct                                      // 1 elements, 0xC bytes (sizeof)   
                  {                                                                               
/*0x008*/             ULONG32      Data[3];                                                       
                  }DevicePrivate;                                                                 
                  struct                                      // 4 elements, 0x10 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length;                                                        
/*0x00C*/             ULONG32      MinBusNumber;                                                  
/*0x010*/             ULONG32      MaxBusNumber;                                                  
/*0x014*/             ULONG32      Reserved;                                                      
                  }BusNumber;                                                                     
                  struct                                      // 3 elements, 0xC bytes (sizeof)   
                  {                                                                               
/*0x008*/             ULONG32      Priority;                                                      
/*0x00C*/             ULONG32      Reserved1;                                                     
/*0x010*/             ULONG32      Reserved2;                                                     
                  }ConfigData;                                                                    
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length40;                                                      
/*0x00C*/             ULONG32      Alignment40;                                                   
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Memory40;                                                                      
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length48;                                                      
/*0x00C*/             ULONG32      Alignment48;                                                   
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Memory48;                                                                      
                  struct                                      // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                               
/*0x008*/             ULONG32      Length64;                                                      
/*0x00C*/             ULONG32      Alignment64;                                                   
/*0x010*/             union _LARGE_INTEGER MinimumAddress;    // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress;    // 4 elements, 0x8 bytes (sizeof)   
                  }Memory64;                                                                      
                  struct                                      // 6 elements, 0xC bytes (sizeof)   
                  {                                                                               
/*0x008*/             UINT8        Class;                                                         
/*0x009*/             UINT8        Type;                                                          
/*0x00A*/             UINT8        Reserved1;                                                     
/*0x00B*/             UINT8        Reserved2;                                                     
/*0x00C*/             ULONG32      IdLowPart;                                                     
/*0x010*/             ULONG32      IdHighPart;                                                    
                  }Connection;                                                                    
              }u;                                                                                 
          }IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR;                                      
                                                                                                  
          typedef struct _IO_RESOURCE_LIST                   // 4 elements, 0x28 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT16       Version;                                                             
/*0x002*/     UINT16       Revision;                                                            
/*0x004*/     ULONG32      Count;                                                               
/*0x008*/     struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];                                    
          }IO_RESOURCE_LIST, *PIO_RESOURCE_LIST;                                                
                                                                                                
          typedef struct _IO_RESOURCE_REQUIREMENTS_LIST // 7 elements, 0x48 bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      ListSize;                                                       
/*0x004*/     enum _INTERFACE_TYPE InterfaceType;                                          
/*0x008*/     ULONG32      BusNumber;                                                      
/*0x00C*/     ULONG32      SlotNumber;                                                     
/*0x010*/     ULONG32      Reserved[3];                                                    
/*0x01C*/     ULONG32      AlternativeLists;                                               
/*0x020*/     struct _IO_RESOURCE_LIST List[1];                                            
          }IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST;                                   
                                                                                           
          typedef struct _IO_SECURITY_CONTEXT                   // 4 elements, 0x18 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _SECURITY_QUALITY_OF_SERVICE* SecurityQos;                                    
/*0x008*/     struct _ACCESS_STATE* AccessState;                                                   
/*0x010*/     ULONG32      DesiredAccess;                                                          
/*0x014*/     ULONG32      FullCreateOptions;                                                      
          }IO_SECURITY_CONTEXT, *PIO_SECURITY_CONTEXT;                                             
                                                                                                   
          typedef struct _SYSTEM_POWER_STATE_CONTEXT            // 10 elements, 0x4 bytes (sizeof) 
          {                                                                                        
              union                                             // 2 elements, 0x4 bytes (sizeof)  
              {                                                                                    
                  struct                                        // 9 elements, 0x4 bytes (sizeof)  
                  {                                                                                
/*0x000*/             ULONG32      Reserved1 : 8;               // 0 BitPosition                   
/*0x000*/             ULONG32      TargetSystemState : 4;       // 8 BitPosition                   
/*0x000*/             ULONG32      EffectiveSystemState : 4;    // 12 BitPosition                  
/*0x000*/             ULONG32      CurrentSystemState : 4;      // 16 BitPosition                  
/*0x000*/             ULONG32      IgnoreHibernationPath : 1;   // 20 BitPosition                  
/*0x000*/             ULONG32      PseudoTransition : 1;        // 21 BitPosition                  
/*0x000*/             ULONG32      KernelSoftReboot : 1;        // 22 BitPosition                  
/*0x000*/             ULONG32      DirectedDripsTransition : 1; // 23 BitPosition                  
/*0x000*/             ULONG32      Reserved2 : 8;               // 24 BitPosition                  
                  };                                                                               
/*0x000*/         ULONG32      ContextAsUlong;                                                     
              };                                                                                   
          }SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT;                                   
                                                                                                   
          typedef union _POWER_STATE                // 2 elements, 0x4 bytes (sizeof) 
          {                                                                           
/*0x000*/     enum _SYSTEM_POWER_STATE SystemState;                                   
/*0x000*/     enum _DEVICE_POWER_STATE DeviceState;                                   
          }POWER_STATE, *PPOWER_STATE;                                                
                                                                                      
          typedef struct _IO_STACK_LOCATION                                                     // 9 elements, 0x48 bytes (sizeof)  
          {                                                                                                                         
/*0x000*/     UINT8        MajorFunction;                                                                                           
/*0x001*/     UINT8        MinorFunction;                                                                                           
/*0x002*/     UINT8        Flags;                                                                                                   
/*0x003*/     UINT8        Control;                                                                                                 
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                         
              union                                                                             // 39 elements, 0x20 bytes (sizeof) 
              {                                                                                                                     
                  struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                 
/*0x010*/             ULONG32      Options;                                                                                         
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             UINT16       FileAttributes;                                                                                  
/*0x01A*/             UINT16       ShareAccess;                                                                                     
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             ULONG32      EaLength;                                                                                        
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }Create;                                                                                                          
                  struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                 
/*0x010*/             ULONG32      Options;                                                                                         
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             UINT16       Reserved;                                                                                        
/*0x01A*/             UINT16       ShareAccess;                                                                                     
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             struct _NAMED_PIPE_CREATE_PARAMETERS* Parameters;                                                             
                  }CreatePipe;                                                                                                      
                  struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                                 
/*0x010*/             ULONG32      Options;                                                                                         
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             UINT16       Reserved;                                                                                        
/*0x01A*/             UINT16       ShareAccess;                                                                                     
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             struct _MAILSLOT_CREATE_PARAMETERS* Parameters;                                                               
                  }CreateMailslot;                                                                                                  
                  struct                                                                        // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      Key;                                                                                             
/*0x014*/             ULONG32      Flags;                                                                                           
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                          // 4 elements, 0x8 bytes (sizeof)   
                  }Read;                                                                                                            
                  struct                                                                        // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      Key;                                                                                             
/*0x014*/             ULONG32      Flags;                                                                                           
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                          // 4 elements, 0x8 bytes (sizeof)   
                  }Write;                                                                                                           
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             struct _UNICODE_STRING* FileName;                                                                             
/*0x018*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                            
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             ULONG32      FileIndex;                                                                                       
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }QueryDirectory;                                                                                                  
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      CompletionFilter;                                                                                
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }NotifyDirectory;                                                                                                 
                  struct                                                                        // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      CompletionFilter;                                                                                
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/             enum _DIRECTORY_NOTIFY_INFORMATION_CLASS DirectoryNotifyInformationClass;                                     
/*0x01C*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }NotifyDirectoryEx;                                                                                               
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                            
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }QueryFile;                                                                                                       
                  struct                                                                        // 7 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                            
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/             struct _FILE_OBJECT* FileObject;                                                                              
                      union                                                                     // 3 elements, 0x8 bytes (sizeof)   
                      {                                                                                                             
                          struct                                                                // 2 elements, 0x8 bytes (sizeof)   
                          {                                                                                                         
/*0x020*/                     UINT8        ReplaceIfExists;                                                                         
/*0x021*/                     UINT8        AdvanceOnly;                                                                             
/*0x022*/                     UINT8        _PADDING3_[0x6];                                                                         
                          };                                                                                                        
/*0x020*/                 ULONG32      ClusterCount;                                                                                
/*0x020*/                 VOID*        DeleteHandle;                                                                                
                      };                                                                                                            
                  }SetFile;                                                                                                         
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             VOID*        EaList;                                                                                          
/*0x018*/             ULONG32      EaListLength;                                                                                    
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             ULONG32      EaIndex;                                                                                         
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }QueryEa;                                                                                                         
                  struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
                  }SetEa;                                                                                                           
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             enum _FSINFOCLASS FsInformationClass;                                                                         
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }QueryVolume;                                                                                                     
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             enum _FSINFOCLASS FsInformationClass;                                                                         
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }SetVolume;                                                                                                       
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      OutputBufferLength;                                                                              
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      InputBufferLength;                                                                               
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/             ULONG32      FsControlCode;                                                                                   
/*0x01C*/             UINT8        _PADDING3_[0x4];                                                                                 
/*0x020*/             VOID*        Type3InputBuffer;                                                                                
                  }FileSystemControl;                                                                                               
                  struct                                                                        // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             union _LARGE_INTEGER* Length;                                                                                 
/*0x010*/             ULONG32      Key;                                                                                             
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                          // 4 elements, 0x8 bytes (sizeof)   
                  }LockControl;                                                                                                     
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      OutputBufferLength;                                                                              
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      InputBufferLength;                                                                               
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x018*/             ULONG32      IoControlCode;                                                                                   
/*0x01C*/             UINT8        _PADDING3_[0x4];                                                                                 
/*0x020*/             VOID*        Type3InputBuffer;                                                                                
                  }DeviceIoControl;                                                                                                 
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      SecurityInformation;                                                                             
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      Length;                                                                                          
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }QuerySecurity;                                                                                                   
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      SecurityInformation;                                                                             
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             VOID*        SecurityDescriptor;                                                                              
                  }SetSecurity;                                                                                                     
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _VPB* Vpb;                                                                                             
/*0x010*/             struct _DEVICE_OBJECT* DeviceObject;                                                                          
                  }MountVolume;                                                                                                     
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _VPB* Vpb;                                                                                             
/*0x010*/             struct _DEVICE_OBJECT* DeviceObject;                                                                          
                  }VerifyVolume;                                                                                                    
                  struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             struct _SCSI_REQUEST_BLOCK* Srb;                                                                              
                  }Scsi;                                                                                                            
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             VOID*        StartSid;                                                                                        
/*0x018*/             struct _FILE_GET_QUOTA_INFORMATION* SidList;                                                                  
/*0x020*/             ULONG32      SidListLength;                                                                                   
/*0x024*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }QueryQuota;                                                                                                      
                  struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             ULONG32      Length;                                                                                          
                  }SetQuota;                                                                                                        
                  struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             enum _DEVICE_RELATION_TYPE Type;                                                                              
                  }QueryDeviceRelations;                                                                                            
                  struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _GUID* InterfaceType;                                                                                  
/*0x010*/             UINT16       Size;                                                                                            
/*0x012*/             UINT16       Version;                                                                                         
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             struct _INTERFACE* Interface;                                                                                 
/*0x020*/             VOID*        InterfaceSpecificData;                                                                           
                  }QueryInterface;                                                                                                  
                  struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             struct _DEVICE_CAPABILITIES* Capabilities;                                                                    
                  }DeviceCapabilities;                                                                                              
                  struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             struct _IO_RESOURCE_REQUIREMENTS_LIST* IoResourceRequirementList;                                             
                  }FilterResourceRequirements;                                                                                      
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             ULONG32      WhichSpace;                                                                                      
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             VOID*        Buffer;                                                                                          
/*0x018*/             ULONG32      Offset;                                                                                          
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             ULONG32      Length;                                                                                          
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }ReadWriteConfig;                                                                                                 
                  struct                                                                        // 1 elements, 0x1 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             UINT8        Lock;                                                                                            
                  }SetLock;                                                                                                         
                  struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             enum _BUS_QUERY_ID_TYPE IdType;                                                                               
                  }QueryId;                                                                                                         
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             enum _DEVICE_TEXT_TYPE DeviceTextType;                                                                        
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             ULONG32      LocaleId;                                                                                        
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }QueryDeviceText;                                                                                                 
                  struct                                                                        // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             UINT8        InPath;                                                                                          
/*0x009*/             UINT8        Reserved[3];                                                                                     
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x010*/             enum _DEVICE_USAGE_NOTIFICATION_TYPE Type;                                                                    
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                                 
                  }UsageNotification;                                                                                               
                  struct                                                                        // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             enum _SYSTEM_POWER_STATE PowerState;                                                                          
                  }WaitWake;                                                                                                        
                  struct                                                                        // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                                 
/*0x008*/             struct _POWER_SEQUENCE* PowerSequence;                                                                        
                  }PowerSequence;                                                                                                   
                  struct                                                                        // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
                      union                                                                     // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                                             
/*0x008*/                 ULONG32      SystemContext;                                                                               
/*0x008*/                 struct _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;           // 10 elements, 0x4 bytes (sizeof)  
                      };                                                                                                            
/*0x010*/             enum _POWER_STATE_TYPE Type;                                                                                  
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x018*/             union _POWER_STATE State;                                                 // 2 elements, 0x4 bytes (sizeof)   
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                                 
/*0x020*/             enum _POWER_ACTION ShutdownType;                                                                              
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                                 
                  }Power;                                                                                                           
                  struct                                                                        // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             struct _CM_RESOURCE_LIST* AllocatedResources;                                                                 
/*0x010*/             struct _CM_RESOURCE_LIST* AllocatedResourcesTranslated;                                                       
                  }StartDevice;                                                                                                     
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             UINT64       ProviderId;                                                                                      
/*0x010*/             VOID*        DataPath;                                                                                        
/*0x018*/             ULONG32      BufferSize;                                                                                      
/*0x01C*/             UINT8        _PADDING1_[0x4];                                                                                 
/*0x020*/             VOID*        Buffer;                                                                                          
                  }WMI;                                                                                                             
                  struct                                                                        // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                                 
/*0x008*/             VOID*        Argument1;                                                                                       
/*0x010*/             VOID*        Argument2;                                                                                       
/*0x018*/             VOID*        Argument3;                                                                                       
/*0x020*/             VOID*        Argument4;                                                                                       
                  }Others;                                                                                                          
              }Parameters;                                                                                                          
/*0x028*/     struct _DEVICE_OBJECT* DeviceObject;                                                                                  
/*0x030*/     struct _FILE_OBJECT* FileObject;                                                                                      
/*0x038*/     FUNCT_002F_05D4_CompletionRoutine* CompletionRoutine;                                                                 
/*0x040*/     VOID*        Context;                                                                                                 
          }IO_STACK_LOCATION, *PIO_STACK_LOCATION;                                                                                  
                                                                                                                                    
typedef struct _IO_TIMER // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}IO_TIMER, *PIO_TIMER;                                     
                                                           
typedef struct _IO_WORKITEM // 0 elements, 0x0 bytes (sizeof) 
{                                                             
}IO_WORKITEM, *PIO_WORKITEM;                                  
                                                              
          typedef struct _KAPC                 // 14 elements, 0x58 bytes (sizeof) 
          {                                                                        
/*0x000*/     UINT8        Type;                                                   
/*0x001*/     UINT8        SpareByte0;                                             
/*0x002*/     UINT8        Size;                                                   
/*0x003*/     UINT8        SpareByte1;                                             
/*0x004*/     ULONG32      SpareLong0;                                             
/*0x008*/     struct _KTHREAD* Thread;                                             
/*0x010*/     struct _LIST_ENTRY ApcListEntry; // 2 elements, 0x10 bytes (sizeof)  
/*0x020*/     VOID*        Reserved[3];                                            
/*0x038*/     VOID*        NormalContext;                                          
/*0x040*/     VOID*        SystemArgument1;                                        
/*0x048*/     VOID*        SystemArgument2;                                        
/*0x050*/     CHAR         ApcStateIndex;                                          
/*0x051*/     CHAR         ApcMode;                                                
/*0x052*/     UINT8        Inserted;                                               
/*0x053*/     UINT8        _PADDING0_[0x5];                                        
          }KAPC, *PKAPC;                                                           
                                                                                   
          typedef struct _IRP                                              // 21 elements, 0xD0 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     INT16        Type;                                                                               
/*0x002*/     UINT16       Size;                                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                    
/*0x008*/     struct _MDL* MdlAddress;                                                                         
/*0x010*/     ULONG32      Flags;                                                                              
/*0x014*/     UINT8        _PADDING1_[0x4];                                                                    
              union                                                        // 3 elements, 0x8 bytes (sizeof)   
              {                                                                                                
/*0x018*/         struct _IRP* MasterIrp;                                                                      
/*0x018*/         LONG32       IrpCount;                                                                       
/*0x018*/         VOID*        SystemBuffer;                                                                   
              }AssociatedIrp;                                                                                  
/*0x020*/     struct _LIST_ENTRY ThreadListEntry;                          // 2 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _IO_STATUS_BLOCK IoStatus;                            // 3 elements, 0x10 bytes (sizeof)  
/*0x040*/     CHAR         RequestorMode;                                                                      
/*0x041*/     UINT8        PendingReturned;                                                                    
/*0x042*/     CHAR         StackCount;                                                                         
/*0x043*/     CHAR         CurrentLocation;                                                                    
/*0x044*/     UINT8        Cancel;                                                                             
/*0x045*/     UINT8        CancelIrql;                                                                         
/*0x046*/     CHAR         ApcEnvironment;                                                                     
/*0x047*/     UINT8        AllocationFlags;                                                                    
/*0x048*/     struct _IO_STATUS_BLOCK* UserIosb;                                                               
/*0x050*/     struct _KEVENT* UserEvent;                                                                       
              union                                                        // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                
                  struct                                                   // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                                            
                      union                                                // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                        
/*0x058*/                 FUNCT_0037_014A_UserApcRoutine* UserApcRoutine;                                      
/*0x058*/                 VOID*        IssuingProcess;                                                         
                      };                                                                                       
/*0x060*/             VOID*        UserApcContext;                                                             
                  }AsynchronousParameters;                                                                     
/*0x058*/         union _LARGE_INTEGER AllocationSize;                     // 4 elements, 0x8 bytes (sizeof)   
              }Overlay;                                                                                        
/*0x068*/     FUNCT_0037_014F_CancelRoutine_DriverStartIo* CancelRoutine;                                      
/*0x070*/     VOID*        UserBuffer;                                                                         
              union                                                        // 3 elements, 0x58 bytes (sizeof)  
              {                                                                                                
                  struct                                                   // 8 elements, 0x50 bytes (sizeof)  
                  {                                                                                            
                      union                                                // 2 elements, 0x20 bytes (sizeof)  
                      {                                                                                        
/*0x078*/                 struct _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;    // 3 elements, 0x18 bytes (sizeof)  
/*0x078*/                 VOID*        DriverContext[4];                                                       
                      };                                                                                       
/*0x098*/             struct _KTHREAD* Thread;                                                                 
/*0x0A0*/             CHAR*        AuxiliaryBuffer;                                                            
/*0x0A8*/             struct _LIST_ENTRY ListEntry;                        // 2 elements, 0x10 bytes (sizeof)  
                      union                                                // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                        
/*0x0B8*/                 struct _IO_STACK_LOCATION* CurrentStackLocation;                                     
/*0x0B8*/                 ULONG32      PacketType;                                                             
                      };                                                                                       
/*0x0C0*/             struct _FILE_OBJECT* OriginalFileObject;                                                 
                  }Overlay;                                                                                    
/*0x078*/         struct _KAPC Apc;                                        // 14 elements, 0x58 bytes (sizeof) 
/*0x078*/         VOID*        CompletionKey;                                                                  
              }Tail;                                                                                           
          }IRP, *PIRP;                                                                                         
                                                                                                               
          typedef struct _IRP_CALL_CTRL                                  // 6 elements, 0x30 bytes (sizeof) 
          {                                                                                                 
/*0x000*/     struct _FLT_VOLUME* Volume;                                                                   
/*0x008*/     struct _IRP* Irp;     //这里有个irp，下面的IrpCtrl里面也有个irp，两个地方是相同的irp                                                                        
/*0x010*/     struct _IRP_CTRL* IrpCtrl;                                                                    
/*0x018*/     struct _CALLBACK_NODE* StartingCallbackNode;                                                  
/*0x020*/     struct _SINGLE_LIST_ENTRY OperationStatusCallbackListHead; // 1 elements, 0x8 bytes (sizeof)  
/*0x028*/     enum _ICC_FLAGS Flags;                                                                        
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                                 
          }IRP_CALL_CTRL, *PIRP_CALL_CTRL;                                                                  
                                                                                                            
          typedef struct _IRP_CTRL                                                         // 31 elements, 0x188 bytes (sizeof) 
          {                                                                                                                     
/*0x000*/     union _FLT_TYPE Type;                                                        // 2 elements, 0x4 bytes (sizeof)    
/*0x004*/     ULONG32      Flags;             //跟用户的过滤回调函数返回值(FLT_xxOP_CALLBACK_STATUS)有一定关系                                                                                  
/*0x008*/     ULONG32      LookAsideProcessorIndex;                                                                             
/*0x00C*/     UINT8        MajorFunction;                                                                                       
/*0x00D*/     UINT8        DataScanConflictRetryCount;                                                                          
/*0x00E*/     UINT8        CompletionStackLength;                                                                               
/*0x00F*/     UINT8        NextCompletion;                                                                                      
/*0x010*/     struct _COMPLETION_NODE* CompletionStack;                                                                         
/*0x018*/     struct _KEVENT SyncEvent;                                                    // 1 elements, 0x18 bytes (sizeof)   
              union                                                                        // 2 elements, 0x8 bytes (sizeof)    
              {                              //一般来说是Irp                                                                                     
/*0x030*/         struct _IRP* Irp;                                                                                             
/*0x030*/         struct _FS_FILTER_CALLBACK_DATA* FsFilterData;                                                                
              };                                                                                                                
/*0x038*/     FUNCT_0037_0C63_AsyncCompletionRoutine_UserCallback* AsyncCompletionRoutine;                                      
/*0x040*/     VOID*        AsyncCompletionContext;                                                                              
/*0x048*/     struct _FLT_INSTANCE* InitiatingInstance;                                                                         
              union                                                                        // 2 elements, 0x8 bytes (sizeof)    
              {                                                                                                                 
/*0x050*/         struct _CALLBACK_NODE* PendingCallbackNode; //第一个节点是我们的pre\post回调,所有文件过滤驱动的回调都是这个地方链表连在一起的                                                                  
/*0x050*/         struct _CALLBACK_NODE* StartingCallbackNode;                                                                  
              };                                                                                                                
              union                                                                        // 2 elements, 0x8 bytes (sizeof)    
              {                                                                                                                 
                  struct                                                                   // 1 elements, 0x8 bytes (sizeof)    
                  {                                                                                                             
/*0x058*/             struct _IRP_CALL_CTRL* Icc;                                                                               
                  }preOp;                                                                                                       
                  struct                                                                   // 1 elements, 0x8 bytes (sizeof)    
                  {                                                                                                             
/*0x058*/             struct _MDL* SwappedBufferMdl;                                                                            
                  }postOp;                                                                                                      
              };                                                                                                                
/*0x060*/     FUNCT_0037_0C7C_PostCompletionRoutine* PostCompletionRoutine;                                                     
/*0x068*/     struct _DEVICE_OBJECT* DeviceObject;                                                                              
/*0x070*/     struct _FILE_OBJECT* FileObject;                                                                                  
              union                                                                        // 2 elements, 0x28 bytes (sizeof)   
              {                                                                                                                 
/*0x078*/         struct _FLTP_WORKITEM FltWork;                                           // 2 elements, 0x28 bytes (sizeof)   
                  struct                                                                   // 3 elements, 0x28 bytes (sizeof)   
                  {                                                                                                             
/*0x078*/             VOID*        PendingCallbackContext;                                                                      
/*0x080*/             struct _COMPLETION_NODE* CachedCompletionNode;                                                            
/*0x088*/             LONG32       PendingStatus;                                                                               
/*0x08C*/             UINT8        _PADDING0_[0x14];                                                                            
                  };                                                                                                            
              };                                                                                                                
              union                                                                        // 2 elements, 0x20 bytes (sizeof)   
              {                                                                                                                 
                  struct                                                                   // 3 elements, 0x20 bytes (sizeof)   
                  {                                                                                                             
/*0x0A0*/             struct _NAME_CACHE_CREATE_CTRL* NameCacheCtrl;                                                            
/*0x0A8*/             VOID*        SavedFsContext;                                                                              
/*0x0B0*/             struct _UNICODE_STRING SavedFileName;                                // 3 elements, 0x10 bytes (sizeof)   
                  }CreateIrp;                                                                                                   
                  struct                                                                   // 1 elements, 0x8 bytes (sizeof)    
                  {                                                                                                             
/*0x0A0*/             struct _STREAM_LIST_CTRL* StreamListCtrl;                                                                 
                  }CloseIrp;                                                                                                    
              };                                                                                                                
/*0x0C0*/     struct _ETW_KERNEL_TRACE_TIMESTAMP OperationTimestamp;                       // 1 elements, 0x20 bytes (sizeof)   
/*0x0E0*/     LONG32       TraceStatus;                                                                                         
/*0x0E4*/     UINT8        _PADDING1_[0x4];                                                                                     
/*0x0E8*/     struct _FLT_CALLBACK_DATA Data;   //作为第一个参数传给我们的回调                                           // 9 elements, 0x58 bytes (sizeof)   
/*0x140*/     struct _FLT_IO_PARAMETER_BLOCK WorkingParameters;                            // 8 elements, 0x48 bytes (sizeof)   
          }IRP_CTRL, *PIRP_CTRL;                                                                                                
                                                                                                                                
typedef struct _KENLISTMENT // 0 elements, 0x0 bytes (sizeof) 
{                                                             
}KENLISTMENT, *PKENLISTMENT;                                  
                                                              
          typedef struct _KFLOATING_SAVE // 1 elements, 0x4 bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      Dummy;                                          
          }KFLOATING_SAVE, *PKFLOATING_SAVE;                                  
                                                                           
typedef union _KGDTENTRY64 // 0 elements, 0x0 bytes (sizeof) 
{                                                            
}KGDTENTRY64, *PKGDTENTRY64;                                  
                                                             
typedef union _KIDTENTRY64 // 0 elements, 0x0 bytes (sizeof) 
{                                                            
}KIDTENTRY64, *PKIDTENTRY64;                                  
                                                             
          typedef struct _KSPIN_LOCK_QUEUE    // 2 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _KSPIN_LOCK_QUEUE* Next;                                    
/*0x008*/     UINT64*      Lock;                                                 
          }KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE;                                   
                                                                                 
          typedef struct _KLOCK_QUEUE_HANDLE      // 2 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _KSPIN_LOCK_QUEUE LockQueue; // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     UINT8        OldIrql;                                                  
/*0x011*/     UINT8        _PADDING0_[0x7];                                          
          }KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE;                                   
                                                                                     
          typedef struct _NT_TIB                                    // 8 elements, 0x38 bytes (sizeof) 
          {                                                                                            
/*0x000*/     struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;                                    
/*0x008*/     VOID*        StackBase;                                                                  
/*0x010*/     VOID*        StackLimit;                                                                 
/*0x018*/     VOID*        SubSystemTib;                                                               
              union                                                 // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                        
/*0x020*/         VOID*        FiberData;                                                              
/*0x020*/         ULONG32      Version;                                                                
              };                                                                                       
/*0x028*/     VOID*        ArbitraryUserPointer;                                                       
/*0x030*/     struct _NT_TIB* Self;                                                                    
          }NT_TIB, *PNT_TIB;                                                                           
                                                                                                       
          typedef struct _KPCR                             // 26 elements, 0x178 bytes (sizeof) 
          {                                                                                     
              union                                        // 2 elements, 0x38 bytes (sizeof)   
              {                                                                                 
/*0x000*/         struct _NT_TIB NtTib;                    // 8 elements, 0x38 bytes (sizeof)   
                  struct                                   // 7 elements, 0x38 bytes (sizeof)   
                  {                                                                             
/*0x000*/             union _KGDTENTRY64* GdtBase;                                              
/*0x008*/             struct _KTSS64* TssBase;                                                  
/*0x010*/             UINT64       UserRsp;                                                     
/*0x018*/             struct _KPCR* Self;                                                       
/*0x020*/             struct _KPRCB* CurrentPrcb;                                               
/*0x028*/             struct _KSPIN_LOCK_QUEUE* LockArray;                                      
/*0x030*/             VOID*        Used_Self;                                                   
                  };                                                                            
              };                                                                                
/*0x038*/     union _KIDTENTRY64* IdtBase;                                                      
/*0x040*/     UINT64       Unused[2];                                                           
/*0x050*/     UINT8        Irql;                                                                
/*0x051*/     UINT8        SecondLevelCacheAssociativity;                                       
/*0x052*/     UINT8        ObsoleteNumber;                                                      
/*0x053*/     UINT8        Fill0;                                                               
/*0x054*/     ULONG32      Unused0[3];                                                          
/*0x060*/     UINT16       MajorVersion;                                                        
/*0x062*/     UINT16       MinorVersion;                                                        
/*0x064*/     ULONG32      StallScaleFactor;                                                    
/*0x068*/     VOID*        Unused1[3];                                                          
/*0x080*/     ULONG32      KernelReserved[15];                                                  
/*0x0BC*/     ULONG32      SecondLevelCacheSize;                                                
/*0x0C0*/     ULONG32      HalReserved[16];                                                     
/*0x100*/     ULONG32      Unused2;                                                             
/*0x104*/     UINT8        _PADDING0_[0x4];                                                     
/*0x108*/     VOID*        KdVersionBlock;                                                      
/*0x110*/     VOID*        Unused3;                                                             
/*0x118*/     ULONG32      PcrAlign1[24];                                                       
          }KPCR, *PKPCR;                                                                        
                                                                                                
typedef struct _KPRCB // 0 elements, 0x0 bytes (sizeof) 
{                                                       
}KPRCB, *PKPRCB;                                        
                                                        
typedef struct _KPROCESS // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}KPROCESS, *PKPROCESS;                                     
                                                           
typedef struct _KRESOURCEMANAGER // 0 elements, 0x0 bytes (sizeof) 
{                                                                  
}KRESOURCEMANAGER, *PKRESOURCEMANAGER;                                  
                                                                   
typedef struct _KTHREAD // 0 elements, 0x0 bytes (sizeof) 
{                                                         
}KTHREAD, *PKTHREAD;                                      
                                                          
typedef struct _KTRANSACTION // 0 elements, 0x0 bytes (sizeof) 
{                                                              
}KTRANSACTION, *PKTRANSACTION;                                  
                                                               
typedef struct _KTSS64 // 0 elements, 0x0 bytes (sizeof) 
{                                                        
}KTSS64, *PKTSS64;                                       
                                                         
          typedef struct _LIST_ENTRY32 // 2 elements, 0x8 bytes (sizeof) 
          {                                                              
/*0x000*/     ULONG32      Flink;                                        
/*0x004*/     ULONG32      Blink;                                        
          }LIST_ENTRY32, *PLIST_ENTRY32;                                  
                                                                         
          typedef struct _LIST_ENTRY64 // 2 elements, 0x10 bytes (sizeof) 
          {                                                               
/*0x000*/     UINT64       Flink;                                         
/*0x008*/     UINT64       Blink;                                         
          }LIST_ENTRY64, *PLIST_ENTRY64;                                   
                                                                          
          typedef struct _LOOKASIDE_LIST_EX     // 1 elements, 0x60 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _GENERAL_LOOKASIDE_POOL L; // 22 elements, 0x60 bytes (sizeof) 
          }LOOKASIDE_LIST_EX, *PLOOKASIDE_LIST_EX;                                    
                                                                                    
          typedef struct _MAILSLOT_CREATE_PARAMETERS // 4 elements, 0x18 bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      MailslotQuota;                                               
/*0x004*/     ULONG32      MaximumMessageSize;                                          
/*0x008*/     union _LARGE_INTEGER ReadTimeout;      // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     UINT8        TimeoutSpecified;                                            
/*0x011*/     UINT8        _PADDING0_[0x7];                                             
          }MAILSLOT_CREATE_PARAMETERS, *PMAILSLOT_CREATE_PARAMETERS;                                   
                                                                                        
          typedef struct _MDL               // 8 elements, 0x30 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _MDL* Next;                                               
/*0x008*/     INT16        Size;                                               
/*0x00A*/     INT16        MdlFlags;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     struct _EPROCESS* Process;                                       
/*0x018*/     VOID*        MappedSystemVa;                                     
/*0x020*/     VOID*        StartVa;                                            
/*0x028*/     ULONG32      ByteCount;                                          
/*0x02C*/     ULONG32      ByteOffset;                                         
          }MDL, *PMDL;                                                         
                                                                               
          typedef struct _NAME_CACHE_LIST_CTRL // 2 elements, 0x10 bytes (sizeof) 
          {                                                                       
/*0x000*/     ULONG32      NameFormat;                                            
/*0x004*/     UINT8        _PADDING0_[0x4];                                       
/*0x008*/     struct _TREE_ROOT List;          // 1 elements, 0x8 bytes (sizeof)  
          }NAME_CACHE_LIST_CTRL, *PNAME_CACHE_LIST_CTRL;                                   
                                                                                  
          typedef struct _NAME_CACHE_CREATE_CTRL                // 6 elements, 0x38 bytes (sizeof) 
          {                                                                                        
/*0x000*/     ULONG32      Flags;                                                                  
/*0x004*/     LONG32       ErrorStatus;                                                            
/*0x008*/     struct _FLT_INSTANCE* ErrorInstance;                                                 
/*0x010*/     struct _FLT_INSTANCE* CompletingInstance;                                            
/*0x018*/     struct _NAME_CACHE_LIST_CTRL NormalizedNameCache; // 2 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _NAME_CACHE_LIST_CTRL OpenedNameCache;     // 2 elements, 0x10 bytes (sizeof) 
          }NAME_CACHE_CREATE_CTRL, *PNAME_CACHE_CREATE_CTRL;                                       
                                                                                                   
          typedef struct _NAME_CACHE_NODE                 // 6 elements, 0xD0 bytes (sizeof)  
          {                                                                                   
/*0x000*/     union _FLT_TYPE Type;                       // 2 elements, 0x4 bytes (sizeof)   
/*0x004*/     UINT8        _PADDING0_[0x4];                                                   
/*0x008*/     struct _FLT_INSTANCE* ProvidingInstance;                                        
/*0x010*/     union _LARGE_INTEGER CreationTime;          // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/     struct _TREE_NODE TreeLink;                 // 5 elements, 0x38 bytes (sizeof)  
/*0x050*/     struct _FLT_FILE_NAME_INFORMATION NameInfo; // 10 elements, 0x78 bytes (sizeof) 
/*0x0C8*/     LONG32       UseCount;                                                          
/*0x0CC*/     UINT8        _PADDING1_[0x4];                                                   
          }NAME_CACHE_NODE, *PNAME_CACHE_NODE;                                                
                                                                                              
          typedef struct _NAME_CONTROL       // 6 elements, 0x120 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _UNICODE_STRING Name;   // 3 elements, 0x10 bytes (sizeof)  
/*0x010*/     UINT8*       AllocatedBuffer;                                      
/*0x018*/     ULONG32      BufferSize;                                           
/*0x01C*/     UINT16       ShareNameLength;                                      
/*0x01E*/     UINT16       StreamNameLength;                                     
/*0x020*/     CHAR         SmallBuffer[254];                                     
/*0x11E*/     UINT8        _PADDING0_[0x2];                                      
          }NAME_CONTROL, *PNAME_CONTROL;                                         
                                                                                 
          typedef struct _NAMED_PIPE_CREATE_PARAMETERS // 8 elements, 0x28 bytes (sizeof) 
          {                                                                               
/*0x000*/     ULONG32      NamedPipeType;                                                 
/*0x004*/     ULONG32      ReadMode;                                                      
/*0x008*/     ULONG32      CompletionMode;                                                
/*0x00C*/     ULONG32      MaximumInstances;                                              
/*0x010*/     ULONG32      InboundQuota;                                                  
/*0x014*/     ULONG32      OutboundQuota;                                                 
/*0x018*/     union _LARGE_INTEGER DefaultTimeout;     // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     UINT8        TimeoutSpecified;                                              
/*0x021*/     UINT8        _PADDING0_[0x7];                                               
          }NAMED_PIPE_CREATE_PARAMETERS, *PNAMED_PIPE_CREATE_PARAMETERS;                                   
                                                                                          
typedef struct _OBJECT_TYPE // 0 elements, 0x0 bytes (sizeof) 
{                                                             
}OBJECT_TYPE, *POBJECT_TYPE;                                  
                                                              
          typedef struct _PERFINFO_GROUPMASK // 1 elements, 0x20 bytes (sizeof) 
          {                                                                     
/*0x000*/     ULONG32      Masks[8];                                            
          }PERFINFO_GROUPMASK, *PPERFINFO_GROUPMASK;                                   
                                                                                
          typedef struct _POWER_SEQUENCE // 3 elements, 0xC bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      SequenceD1;                                     
/*0x004*/     ULONG32      SequenceD2;                                     
/*0x008*/     ULONG32      SequenceD3;                                     
          }POWER_SEQUENCE, *PPOWER_SEQUENCE;                                  
                                                                           
          typedef struct _RTL_BITMAP        // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     ULONG32      SizeOfBitMap;                                       
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     ULONG32*     Buffer;                                             
          }RTL_BITMAP, *PRTL_BITMAP;                                           
                                                                               
          typedef struct _RTL_DYNAMIC_HASH_TABLE // 9 elements, 0x28 bytes (sizeof) 
          {                                                                         
/*0x000*/     ULONG32      Flags;                                                   
/*0x004*/     ULONG32      Shift;                                                   
/*0x008*/     ULONG32      TableSize;                                               
/*0x00C*/     ULONG32      Pivot;                                                   
/*0x010*/     ULONG32      DivisorMask;                                             
/*0x014*/     ULONG32      NumEntries;                                              
/*0x018*/     ULONG32      NonEmptyBuckets;                                         
/*0x01C*/     ULONG32      NumEnumerators;                                          
/*0x020*/     VOID*        Directory;                                               
          }RTL_DYNAMIC_HASH_TABLE, *PRTL_DYNAMIC_HASH_TABLE;                                   
                                                                                    
          typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                 
/*0x000*/     struct _LIST_ENTRY* ChainHead;                                                
/*0x008*/     struct _LIST_ENTRY* PrevLinkage;                                              
/*0x010*/     UINT64       Signature;                                                       
          }RTL_DYNAMIC_HASH_TABLE_CONTEXT, *PRTL_DYNAMIC_HASH_TABLE_CONTEXT;                                   
                                                                                            
          typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY // 2 elements, 0x18 bytes (sizeof) 
          {                                                                               
/*0x000*/     struct _LIST_ENTRY Linkage;              // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     UINT64       Signature;                                                     
          }RTL_DYNAMIC_HASH_TABLE_ENTRY, *PRTL_DYNAMIC_HASH_TABLE_ENTRY;                                   
                                                                                          
          typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR       // 4 elements, 0x28 bytes (sizeof) 
          {                                                                                          
              union                                               // 2 elements, 0x18 bytes (sizeof) 
              {                                                                                      
/*0x000*/         struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry; // 2 elements, 0x18 bytes (sizeof) 
/*0x000*/         struct _LIST_ENTRY* CurEntry;                                                      
              };                                                                                     
/*0x018*/     struct _LIST_ENTRY* ChainHead;                                                         
/*0x020*/     ULONG32      BucketIndex;                                                              
/*0x024*/     UINT8        _PADDING0_[0x4];                                                          
          }RTL_DYNAMIC_HASH_TABLE_ENUMERATOR, *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR;                                   
                                                                                                     
          typedef struct _RTL_QUERY_REGISTRY_TABLE        // 7 elements, 0x38 bytes (sizeof) 
          {                                                                                  
/*0x000*/     FUNCT_002F_002E_QueryRoutine* QueryRoutine;                                    
/*0x008*/     ULONG32      Flags;                                                            
/*0x00C*/     UINT8        _PADDING0_[0x4];                                                  
/*0x010*/     WCHAR*       Name;                                                             
/*0x018*/     VOID*        EntryContext;                                                     
/*0x020*/     ULONG32      DefaultType;                                                      
/*0x024*/     UINT8        _PADDING1_[0x4];                                                  
/*0x028*/     VOID*        DefaultData;                                                      
/*0x030*/     ULONG32      DefaultLength;                                                    
/*0x034*/     UINT8        _PADDING2_[0x4];                                                  
          }RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE;                                   
                                                                                             
          typedef struct _SCATTER_GATHER_ELEMENT // 3 elements, 0x18 bytes (sizeof) 
          {                                                                         
/*0x000*/     union _LARGE_INTEGER Address;      // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     ULONG32      Length;                                                  
/*0x00C*/     UINT8        _PADDING0_[0x4];                                         
/*0x010*/     UINT64       Reserved;                                                
          }SCATTER_GATHER_ELEMENT, *PSCATTER_GATHER_ELEMENT;                                   
                                                                                    
          typedef struct _SCATTER_GATHER_LIST             // 3 elements, 0x10 bytes (sizeof) 
          {                                                                                  
/*0x000*/     ULONG32      NumberOfElements;                                                 
/*0x004*/     UINT8        _PADDING0_[0x4];                                                  
/*0x008*/     UINT64       Reserved;                                                         
/*0x010*/     struct _SCATTER_GATHER_ELEMENT Elements[0];                                    
          }SCATTER_GATHER_LIST, *PSCATTER_GATHER_LIST;                                       
                                                                                             
typedef struct _SCSI_REQUEST_BLOCK // 0 elements, 0x0 bytes (sizeof) 
{                                                                    
}SCSI_REQUEST_BLOCK, *PSCSI_REQUEST_BLOCK;                                  
                                                                     
          typedef struct _SECTION_CONFLICT_QUEUE          // 6 elements, 0xA0 bytes (sizeof) 
          {                                                                                  
/*0x000*/     struct _IO_CSQ Csq;                         // 8 elements, 0x40 bytes (sizeof) 
/*0x040*/     struct _LIST_ENTRY QueueHead;               // 2 elements, 0x10 bytes (sizeof) 
/*0x050*/     struct _FAST_MUTEX QueueLock;               // 5 elements, 0x38 bytes (sizeof) 
/*0x088*/     LONG32       QueueCoordinationCount;                                           
/*0x08C*/     UINT8        _PADDING0_[0x4];                                                  
/*0x090*/     struct _IO_WORKITEM* WorkItem;                                                 
/*0x098*/     struct _SECTION_LIST_CTRL* SectionListCtrl;                                    
          }SECTION_CONFLICT_QUEUE, *PSECTION_CONFLICT_QUEUE;                                   
                                                                                             
          typedef struct _SET_PURGE_FAILURE_MODE_INPUT // 1 elements, 0x4 bytes (sizeof) 
          {                                                                              
/*0x000*/     ULONG32      Flags;                                                        
          }SET_PURGE_FAILURE_MODE_INPUT, *PSET_PURGE_FAILURE_MODE_INPUT;                                  
                                                                                         
          typedef struct _SECTION_CONTEXT_EXTENSION             // 6 elements, 0x58 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _FLT_INSTANCE* Instance;                                                      
/*0x008*/     struct _FILE_OBJECT* FileObject;                                                     
/*0x010*/     ULONG32      Flags;                                                                  
/*0x014*/     UINT8        _PADDING0_[0x4];                                                        
/*0x018*/     struct _KEVENT Event;                             // 1 elements, 0x18 bytes (sizeof) 
/*0x030*/     struct _SET_PURGE_FAILURE_MODE_INPUT FsctlBuffer; // 1 elements, 0x4 bytes (sizeof)  
/*0x034*/     UINT8        _PADDING1_[0x4];                                                        
/*0x038*/     struct _WORK_QUEUE_ITEM WorkItem;                 // 3 elements, 0x20 bytes (sizeof) 
          }SECTION_CONTEXT_EXTENSION, *PSECTION_CONTEXT_EXTENSION;                                   
                                                                                                   
          typedef struct _SECTION_LIST_CTRL                   // 5 elements, 0xD0 bytes (sizeof) 
          {                                                                                      
/*0x000*/     struct _STREAM_LIST_CTRL* StreamList;                                              
/*0x008*/     struct _EX_RUNDOWN_REF_CACHE_AWARE* RundownRef;                                    
/*0x010*/     struct _KEVENT Event;                           // 1 elements, 0x18 bytes (sizeof) 
/*0x028*/     struct _CONTEXT_LIST_CTRL CtxList;              // 1 elements, 0x8 bytes (sizeof)  
/*0x030*/     struct _SECTION_CONFLICT_QUEUE ConflictQueue;   // 6 elements, 0xA0 bytes (sizeof) 
          }SECTION_LIST_CTRL, *PSECTION_LIST_CTRL;                                               
                                                                                                 
          typedef struct _SECTION_OBJECT_POINTERS // 3 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     VOID*        DataSectionObject;                                        
/*0x008*/     VOID*        SharedCacheMap;                                           
/*0x010*/     VOID*        ImageSectionObject;                                       
          }SECTION_OBJECT_POINTERS, *PSECTION_OBJECT_POINTERS;                                   
                                                                                     
          typedef struct _SECURITY_QUALITY_OF_SERVICE                // 4 elements, 0xC bytes (sizeof) 
          {                                                                                            
/*0x000*/     ULONG32      Length;                                                                     
/*0x004*/     enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;                                   
/*0x008*/     UINT8        ContextTrackingMode;                                                        
/*0x009*/     UINT8        EffectiveOnly;                                                              
/*0x00A*/     UINT8        _PADDING0_[0x2];                                                            
          }SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE;                                  
                                                                                                       
          typedef struct _SLIST_ENTRY       // 1 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _SLIST_ENTRY* Next;                                       
/*0x008*/     UINT8        _PADDING0_[0x8];                                    
          }SLIST_ENTRY, *PSLIST_ENTRY;                                         
                                                                               
          typedef struct _STREAM_LIST_CTRL                      // 15 elements, 0xA8 bytes (sizeof) 
          {                                                                                         
/*0x000*/     union _FLT_TYPE Type;                             // 2 elements, 0x4 bytes (sizeof)   
/*0x004*/     LONG32       AllNameContextsTemporary;                                                
/*0x008*/     struct _FSRTL_PER_STREAM_CONTEXT ContextCtrl;     // 4 elements, 0x28 bytes (sizeof)  
/*0x030*/     struct _LIST_ENTRY VolumeLink;                    // 2 elements, 0x10 bytes (sizeof)  
/*0x040*/     ULONG32      Flags;                                                                   
/*0x044*/     LONG32       UseCount;                                                                
/*0x048*/     struct _EX_PUSH_LOCK ContextLock;                 // 7 elements, 0x8 bytes (sizeof)   
/*0x050*/     struct _CONTEXT_LIST_CTRL StreamContexts;         // 1 elements, 0x8 bytes (sizeof)   
/*0x058*/     struct _CONTEXT_LIST_CTRL StreamHandleContexts;   // 1 elements, 0x8 bytes (sizeof)   
/*0x060*/     struct _SECTION_LIST_CTRL* SectionContexts;                                           
/*0x068*/     struct _EX_PUSH_LOCK NameCacheLock;               // 7 elements, 0x8 bytes (sizeof)   
/*0x070*/     union _LARGE_INTEGER LastRenameCompleted;         // 4 elements, 0x8 bytes (sizeof)   
/*0x078*/     struct _NAME_CACHE_LIST_CTRL NormalizedNameCache; // 2 elements, 0x10 bytes (sizeof)  
/*0x088*/     struct _NAME_CACHE_LIST_CTRL ShortNameCache;      // 2 elements, 0x10 bytes (sizeof)  
/*0x098*/     struct _NAME_CACHE_LIST_CTRL OpenedNameCache;     // 2 elements, 0x10 bytes (sizeof)  
          }STREAM_LIST_CTRL, *PSTREAM_LIST_CTRL;                                                    
                                                                                                    
          typedef struct _STRING            // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT16       Length;                                             
/*0x002*/     UINT16       MaximumLength;                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     CHAR*        Buffer;                                             
          }STRING, *PSTRING;                                                   
                                                                               
          typedef struct _TELEMETRY_GLOBALS                       // 12 elements, 0x100 bytes (sizeof) 
          {                                                                                            
/*0x000*/     struct _KTIMER TelemetryInventoryTimer;             // 6 elements, 0x40 bytes (sizeof)   
/*0x040*/     struct _KDPC TelemetryInventoryTimerDpc;            // 11 elements, 0x40 bytes (sizeof)  
/*0x080*/     struct _WORK_QUEUE_ITEM TelemetryInventoryWork;     // 3 elements, 0x20 bytes (sizeof)   
/*0x0A0*/     union _LARGE_INTEGER TelemetryPerformanceFrequency; // 4 elements, 0x8 bytes (sizeof)    
/*0x0A8*/     LONG32       TelemetryLayoutChangesSinceLastPost;                                        
/*0x0AC*/     LONG32       TelemetryGeneratedGuids;                                                    
/*0x0B0*/     LONG32       TelemetryMissedTelemetryPoints;                                             
/*0x0B4*/     LONG32       TelemetryMissedGeneratedGuids;                                              
/*0x0B8*/     LONG32       TelemetryMissedRawVolumes;                                                  
/*0x0BC*/     LONG32       TelemetryLegacyFiltersLastCount;                                            
/*0x0C0*/     LONG32       TelemetryMissedFilterRegistrations;                                         
/*0x0C4*/     LONG32       TelemetryMissedFilterUnregistrations;                                       
/*0x0C8*/     UINT8        _PADDING0_[0x38];                                                           
          }TELEMETRY_GLOBALS, *PTELEMETRY_GLOBALS;                                                     
                                                                                                       
          typedef struct _TlgProvider_t                       // 7 elements, 0x38 bytes (sizeof) 
          {                                                                                      
/*0x000*/     UINT32       LevelPlus1;                                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                                      
/*0x008*/     UINT16*      ProviderMetadataPtr;                                                  
/*0x010*/     UINT64       KeywordAny;                                                           
/*0x018*/     UINT64       KeywordAll;                                                           
/*0x020*/     UINT64       RegHandle;                                                            
/*0x028*/     FUNCT_0037_0D32_EnableCallback* EnableCallback;                                    
/*0x030*/     VOID*        CallbackContext;                                                      
          }TlgProvider_t, *PTlgProvider_t;                                                       
                                                                                                 
          typedef struct _TlgProviderMetadata_t // 3 elements, 0x13 bytes (sizeof) 
          {                                                                        
/*0x000*/     UINT8        Type;                                                   
/*0x001*/     struct _GUID ProviderId;          // 4 elements, 0x10 bytes (sizeof) 
/*0x011*/     UINT16       RemainingSize;                                          
          }TlgProviderMetadata_t, *PTlgProviderMetadata_t;                                   
                                                                                   
          typedef struct _TraceLoggingMetadata_t // 5 elements, 0x10 bytes (sizeof) 
          {                                                                         
/*0x000*/     UINT32       Signature;                                               
/*0x004*/     UINT16       Size;                                                    
/*0x006*/     UINT8        Version;                                                 
/*0x007*/     UINT8        Flags;                                                   
/*0x008*/     UINT64       Magic;                                                   
          }TraceLoggingMetadata_t, *PTraceLoggingMetadata_t;                                   
                                                                                    
          typedef struct _TRACK_COMPLETION_NODES                    // 4 elements, 0x18 bytes (sizeof) 
          {                                                                                            
/*0x000*/     ULONG32      NumLists;                                                                   
/*0x004*/     ULONG32      DrainingRefCount;                                                           
/*0x008*/     struct _COMPLETION_NODE_TRACKING_LIST* TrackingLists;                                    
/*0x010*/     VOID*        PointerToFree;                                                              
          }TRACK_COMPLETION_NODES, *PTRACK_COMPLETION_NODES;                                           
                                                                                                       
          typedef struct _TX_CONTEXT_EXTENSION              // 5 elements, 0x48 bytes (sizeof) 
          {                                                                                    
/*0x000*/     VOID*        TxEnlistmentHandle;                                                 
/*0x008*/     struct _KENLISTMENT* TxEnlistmentObject;                                         
/*0x010*/     ULONG32      TxNotificationMask;                                                 
/*0x014*/     UINT8        _PADDING0_[0x4];                                                    
/*0x018*/     struct _FLTP_WORKITEM TxCompleteFinalizeWork; // 2 elements, 0x28 bytes (sizeof) 
/*0x040*/     struct _EX_PUSH_LOCK TxCtxExtensionLock;      // 7 elements, 0x8 bytes (sizeof)  
          }TX_CONTEXT_EXTENSION, *PTX_CONTEXT_EXTENSION;                                       
                                                                                               
          typedef struct _TXN_PARAMETER_BLOCK // 3 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     UINT16       Length;                                               
/*0x002*/     UINT16       TxFsContext;                                          
/*0x004*/     UINT8        _PADDING0_[0x4];                                      
/*0x008*/     VOID*        TransactionObject;                                    
          }TXN_PARAMETER_BLOCK, *PTXN_PARAMETER_BLOCK;                                   
                                                                                 
          typedef struct _VOLUME_DEVICE_EXTENSION            // 5 elements, 0x58 bytes (sizeof) 
          {                                                                                     
/*0x000*/     union _FLT_TYPE Type;                          // 2 elements, 0x4 bytes (sizeof)  
/*0x004*/     UINT8        _PADDING0_[0x4];                                                     
/*0x008*/     struct _DEVICE_OBJECT* AttachedToDeviceObject;                                    
/*0x010*/     struct _FLTP_FRAME* Frame;                                                        
/*0x018*/     struct _FAST_MUTEX VolumeAccessLock;           // 5 elements, 0x38 bytes (sizeof) 
/*0x050*/     struct _FLT_VOLUME* Volume;                                                       
          }VOLUME_DEVICE_EXTENSION, *PVOLUME_DEVICE_EXTENSION;                                   
                                                                                                
          typedef struct _VPB                      // 9 elements, 0x60 bytes (sizeof) 
          {                                                                           
/*0x000*/     INT16        Type;                                                      
/*0x002*/     INT16        Size;                                                      
/*0x004*/     UINT16       Flags;                                                     
/*0x006*/     UINT16       VolumeLabelLength;                                         
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                    
/*0x010*/     struct _DEVICE_OBJECT* RealDevice;                                      
/*0x018*/     ULONG32      SerialNumber;                                              
/*0x01C*/     ULONG32      ReferenceCount;                                            
/*0x020*/     WCHAR        VolumeLabel[32];                                           
          }VPB, *PVPB;                                                                
                                                                                      
          typedef union _WHEA_ERROR_PACKET_FLAGS            // 8 elements, 0x4 bytes (sizeof) 
          {                                                                                   
              struct                                        // 7 elements, 0x4 bytes (sizeof) 
              {                                                                               
/*0x000*/         ULONG32      PreviousError : 1;           // 0 BitPosition                  
/*0x000*/         ULONG32      Reserved1 : 1;               // 1 BitPosition                  
/*0x000*/         ULONG32      HypervisorError : 1;         // 2 BitPosition                  
/*0x000*/         ULONG32      Simulated : 1;               // 3 BitPosition                  
/*0x000*/         ULONG32      PlatformPfaControl : 1;      // 4 BitPosition                  
/*0x000*/         ULONG32      PlatformDirectedOffline : 1; // 5 BitPosition                  
/*0x000*/         ULONG32      Reserved2 : 26;              // 6 BitPosition                  
              };                                                                              
/*0x000*/     ULONG32      AsULONG;                                                           
          }WHEA_ERROR_PACKET_FLAGS, *PWHEA_ERROR_PACKET_FLAGS;                                  
                                                                                              
          typedef struct _WHEA_ERROR_PACKET_V2                // 16 elements, 0x50 bytes (sizeof) 
          {                                                                                       
/*0x000*/     ULONG32      Signature;                                                             
/*0x004*/     ULONG32      Version;                                                               
/*0x008*/     ULONG32      Length;                                                                
/*0x00C*/     union _WHEA_ERROR_PACKET_FLAGS Flags;           // 8 elements, 0x4 bytes (sizeof)   
/*0x010*/     enum _WHEA_ERROR_TYPE ErrorType;                                                    
/*0x014*/     enum _WHEA_ERROR_SEVERITY ErrorSeverity;                                            
/*0x018*/     ULONG32      ErrorSourceId;                                                         
/*0x01C*/     enum _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;                                       
/*0x020*/     struct _GUID NotifyType;                        // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     UINT64       Context;                                                               
/*0x038*/     enum _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;                                     
/*0x03C*/     ULONG32      Reserved1;                                                             
/*0x040*/     ULONG32      DataOffset;                                                            
/*0x044*/     ULONG32      DataLength;                                                            
/*0x048*/     ULONG32      PshedDataOffset;                                                       
/*0x04C*/     ULONG32      PshedDataLength;                                                       
          }WHEA_ERROR_PACKET_V2, *PWHEA_ERROR_PACKET_V2;                                          
                                                                                                  
          typedef union _WHEA_REVISION        // 3 elements, 0x2 bytes (sizeof) 
          {                                                                     
              struct                          // 2 elements, 0x2 bytes (sizeof) 
              {                                                                 
/*0x000*/         UINT8        MinorRevision;                                   
/*0x001*/         UINT8        MajorRevision;                                   
              };                                                                
/*0x000*/     UINT16       AsUSHORT;                                            
          }WHEA_REVISION, *PWHEA_REVISION;                                      
                                                                                
          typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS // 5 elements, 0x4 bytes (sizeof) 
          {                                                                                   
              struct                                        // 4 elements, 0x4 bytes (sizeof) 
              {                                                                               
/*0x000*/         ULONG32      PlatformId : 1;              // 0 BitPosition                  
/*0x000*/         ULONG32      Timestamp : 1;               // 1 BitPosition                  
/*0x000*/         ULONG32      PartitionId : 1;             // 2 BitPosition                  
/*0x000*/         ULONG32      Reserved : 29;               // 3 BitPosition                  
              };                                                                              
/*0x000*/     ULONG32      AsULONG;                                                           
          }WHEA_ERROR_RECORD_HEADER_VALIDBITS, *PWHEA_ERROR_RECORD_HEADER_VALIDBITS;                                  
                                                                                              
          typedef union _WHEA_TIMESTAMP             // 10 elements, 0x8 bytes (sizeof) 
          {                                                                            
              struct                                // 9 elements, 0x8 bytes (sizeof)  
              {                                                                        
/*0x000*/         UINT64       Seconds : 8;         // 0 BitPosition                   
/*0x000*/         UINT64       Minutes : 8;         // 8 BitPosition                   
/*0x000*/         UINT64       Hours : 8;           // 16 BitPosition                  
/*0x000*/         UINT64       Precise : 1;         // 24 BitPosition                  
/*0x000*/         UINT64       Reserved : 7;        // 25 BitPosition                  
/*0x000*/         UINT64       Day : 8;             // 32 BitPosition                  
/*0x000*/         UINT64       Month : 8;           // 40 BitPosition                  
/*0x000*/         UINT64       Year : 8;            // 48 BitPosition                  
/*0x000*/         UINT64       Century : 8;         // 56 BitPosition                  
              };                                                                       
/*0x000*/     union _LARGE_INTEGER AsLARGE_INTEGER; // 4 elements, 0x8 bytes (sizeof)  
          }WHEA_TIMESTAMP, *PWHEA_TIMESTAMP;                                           
                                                                                       
          typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS // 5 elements, 0x4 bytes (sizeof) 
          {                                                                               
              struct                                    // 4 elements, 0x4 bytes (sizeof) 
              {                                                                           
/*0x000*/         ULONG32      Recovered : 1;           // 0 BitPosition                  
/*0x000*/         ULONG32      PreviousError : 1;       // 1 BitPosition                  
/*0x000*/         ULONG32      Simulated : 1;           // 2 BitPosition                  
/*0x000*/         ULONG32      Reserved : 29;           // 3 BitPosition                  
              };                                                                          
/*0x000*/     ULONG32      AsULONG;                                                       
          }WHEA_ERROR_RECORD_HEADER_FLAGS, *PWHEA_ERROR_RECORD_HEADER_FLAGS;                                  
                                                                                          
          typedef union _WHEA_PERSISTENCE_INFO  // 7 elements, 0x8 bytes (sizeof) 
          {                                                                       
              struct                            // 6 elements, 0x8 bytes (sizeof) 
              {                                                                   
/*0x000*/         UINT64       Signature : 16;  // 0 BitPosition                  
/*0x000*/         UINT64       Length : 24;     // 16 BitPosition                 
/*0x000*/         UINT64       Identifier : 16; // 40 BitPosition                 
/*0x000*/         UINT64       Attributes : 2;  // 56 BitPosition                 
/*0x000*/         UINT64       DoNotLog : 1;    // 58 BitPosition                 
/*0x000*/         UINT64       Reserved : 5;    // 59 BitPosition                 
              };                                                                  
/*0x000*/     UINT64       AsULONGLONG;                                           
          }WHEA_PERSISTENCE_INFO, *PWHEA_PERSISTENCE_INFO;                                  
                                                                                  
          typedef struct _WHEA_ERROR_RECORD_HEADER                 // 16 elements, 0x80 bytes (sizeof) 
          {                                                                                            
/*0x000*/     ULONG32      Signature;                                                                  
/*0x004*/     union _WHEA_REVISION Revision;                       // 3 elements, 0x2 bytes (sizeof)   
/*0x006*/     ULONG32      SignatureEnd;                                                               
/*0x00A*/     UINT16       SectionCount;                                                               
/*0x00C*/     enum _WHEA_ERROR_SEVERITY Severity;                                                      
/*0x010*/     union _WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits; // 5 elements, 0x4 bytes (sizeof)   
/*0x014*/     ULONG32      Length;                                                                     
/*0x018*/     union _WHEA_TIMESTAMP Timestamp;                     // 10 elements, 0x8 bytes (sizeof)  
/*0x020*/     struct _GUID PlatformId;                             // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _GUID PartitionId;                            // 4 elements, 0x10 bytes (sizeof)  
/*0x040*/     struct _GUID CreatorId;                              // 4 elements, 0x10 bytes (sizeof)  
/*0x050*/     struct _GUID NotifyType;                             // 4 elements, 0x10 bytes (sizeof)  
/*0x060*/     UINT64       RecordId;                                                                   
/*0x068*/     union _WHEA_ERROR_RECORD_HEADER_FLAGS Flags;         // 5 elements, 0x4 bytes (sizeof)   
/*0x06C*/     union _WHEA_PERSISTENCE_INFO PersistenceInfo;        // 7 elements, 0x8 bytes (sizeof)   
/*0x074*/     UINT8        Reserved[12];                                                               
          }WHEA_ERROR_RECORD_HEADER, *PWHEA_ERROR_RECORD_HEADER;                                       
                                                                                                       
          typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS // 4 elements, 0x1 bytes (sizeof) 
          {                                                                                               
              struct                                                    // 3 elements, 0x1 bytes (sizeof) 
              {                                                                                           
/*0x000*/         UINT8        FRUId : 1;                               // 0 BitPosition                  
/*0x000*/         UINT8        FRUText : 1;                             // 1 BitPosition                  
/*0x000*/         UINT8        Reserved : 6;                            // 2 BitPosition                  
              };                                                                                          
/*0x000*/     UINT8        AsUCHAR;                                                                       
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;                                  
                                                                                                          
          typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS // 9 elements, 0x4 bytes (sizeof) 
          {                                                                                           
              struct                                                // 8 elements, 0x4 bytes (sizeof) 
              {                                                                                       
/*0x000*/         ULONG32      Primary : 1;                         // 0 BitPosition                  
/*0x000*/         ULONG32      ContainmentWarning : 1;              // 1 BitPosition                  
/*0x000*/         ULONG32      Reset : 1;                           // 2 BitPosition                  
/*0x000*/         ULONG32      ThresholdExceeded : 1;               // 3 BitPosition                  
/*0x000*/         ULONG32      ResourceNotAvailable : 1;            // 4 BitPosition                  
/*0x000*/         ULONG32      LatentError : 1;                     // 5 BitPosition                  
/*0x000*/         ULONG32      Propagated : 1;                      // 6 BitPosition                  
/*0x000*/         ULONG32      Reserved : 25;                       // 7 BitPosition                  
              };                                                                                      
/*0x000*/     ULONG32      AsULONG;                                                                   
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;                                  
                                                                                                      
          typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR                 // 10 elements, 0x48 bytes (sizeof) 
          {                                                                                                        
/*0x000*/     ULONG32      SectionOffset;                                                                          
/*0x004*/     ULONG32      SectionLength;                                                                          
/*0x008*/     union _WHEA_REVISION Revision;                                   // 3 elements, 0x2 bytes (sizeof)   
/*0x00A*/     union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits; // 4 elements, 0x1 bytes (sizeof)   
/*0x00B*/     UINT8        Reserved;                                                                               
/*0x00C*/     union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags;         // 9 elements, 0x4 bytes (sizeof)   
/*0x010*/     struct _GUID SectionType;                                        // 4 elements, 0x10 bytes (sizeof)  
/*0x020*/     struct _GUID FRUId;                                              // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     enum _WHEA_ERROR_SEVERITY SectionSeverity;                                                           
/*0x034*/     CHAR         FRUText[20];                                                                            
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR;                                    
                                                                                                                   
          typedef struct _WHEA_ERROR_RECORD                                      // 2 elements, 0xC8 bytes (sizeof)  
          {                                                                                                          
/*0x000*/     struct _WHEA_ERROR_RECORD_HEADER Header;                           // 16 elements, 0x80 bytes (sizeof) 
/*0x080*/     struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR SectionDescriptor[1];                                     
          }WHEA_ERROR_RECORD, *PWHEA_ERROR_RECORD;                                                                   
                                                                                                                     
          typedef union _WHEA_EVENT_LOG_ENTRY_FLAGS // 2 elements, 0x4 bytes (sizeof) 
          {                                                                           
/*0x000*/     ULONG32      Reserved : 32;           // 0 BitPosition                  
/*0x000*/     ULONG32      AsULONG;                                                   
          }WHEA_EVENT_LOG_ENTRY_FLAGS, *PWHEA_EVENT_LOG_ENTRY_FLAGS;                                  
                                                                                      
          typedef struct _WHEA_EVENT_LOG_ENTRY_HEADER  // 8 elements, 0x20 bytes (sizeof) 
          {                                                                               
/*0x000*/     ULONG32      Signature;                                                     
/*0x004*/     ULONG32      Version;                                                       
/*0x008*/     ULONG32      Length;                                                        
/*0x00C*/     enum _WHEA_EVENT_LOG_ENTRY_TYPE Type;                                       
/*0x010*/     ULONG32      OwnerTag;                                                      
/*0x014*/     enum _WHEA_EVENT_LOG_ENTRY_ID Id;                                           
/*0x018*/     union _WHEA_EVENT_LOG_ENTRY_FLAGS Flags; // 2 elements, 0x4 bytes (sizeof)  
/*0x01C*/     ULONG32      PayloadLength;                                                 
          }WHEA_EVENT_LOG_ENTRY_HEADER, *PWHEA_EVENT_LOG_ENTRY_HEADER;                                   
                                                                                          
          typedef struct _WHEA_EVENT_LOG_ENTRY            // 1 elements, 0x20 bytes (sizeof) 
          {                                                                                  
/*0x000*/     struct _WHEA_EVENT_LOG_ENTRY_HEADER Header; // 8 elements, 0x20 bytes (sizeof) 
          }WHEA_EVENT_LOG_ENTRY, *PWHEA_EVENT_LOG_ENTRY;                                     
                                                                                             
          typedef struct _WORK_CONTEXT                      // 7 elements, 0x68 bytes (sizeof) 
          {                                                                                    
/*0x000*/     struct _FLTP_WORKITEM FltWork;                // 2 elements, 0x28 bytes (sizeof) 
/*0x028*/     FUNCT_002F_0FF6_SyncOpRoutine* SyncOpRoutine;                                    
/*0x030*/     VOID*        Parameter;                                                          
/*0x038*/     struct _KEVENT SyncEvent;                     // 1 elements, 0x18 bytes (sizeof) 
/*0x050*/     LONG32       Status;                                                             
/*0x054*/     enum _FLTP_WORK_QUEUE_TYPE QueueType;                                            
/*0x058*/     struct _IO_PRIORITY_INFO IoPriorityInfo;      // 4 elements, 0x10 bytes (sizeof) 
          }WORK_CONTEXT, *PWORK_CONTEXT;                                                       
                                                                                               
          typedef struct _WPP_TRACE_CONTROL_BLOCK    // 7 elements, 0x20 bytes (sizeof) 
          {                                                                             
/*0x000*/     FUNCT_002F_0F69_Callback* Callback;                                       
/*0x008*/     struct _WPP_TRACE_CONTROL_BLOCK* Next;                                    
/*0x010*/     INT64        Logger;                                                      
/*0x018*/     UINT8        FlagsLen;                                                    
/*0x019*/     UINT8        Level;                                                       
/*0x01A*/     UINT16       Reserved;                                                    
/*0x01C*/     ULONG32      Flags[1];                                                    
          }WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;                                   
                                                                                        

#ifdef __cplusplus
}
#endif

