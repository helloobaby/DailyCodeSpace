# Dont run this script on windows!
import os
import sys
import hashlib
import re

flag = sys.argv[1]

def sha256file(file):
    with open(file,"rb") as f:
        bytes = f.read() # read entire file as bytes
        readable_hash = hashlib.sha256(bytes).hexdigest()
        return readable_hash
def process_one_file(file):
# only process a file

        #print(file)
        abs_file = os.path.abspath(file)
        print(abs_file)

        hash256 = sha256file(abs_file)
        #print('>> '+hash256)

        res = os.popen('diec '+abs_file)
        #print(res.read())

        all = res.readlines()

        # None
        if(len(all) == 0):
            return

        # File type   APK  or PE32  or
        file_type = all[0]
        print('>> '+file_type)

        if('Binary' in file_type):
            print('>> exit')
            return

        compiler_type = ''
        lib_type = ''
        link_type = ''

        # Compiler
        # Library
        for s in all:
            if 'Compiler' in s:
                compiler_type = s.strip()
        for s in all:
            if 'Library' in s:
                lib_type = s.strip()

        # Linker
        for s in all:
            if 'Linker' in s:
                link_type = s.strip()

        ## [():/]
        compiler_type = re.sub(r'\s+|[:/]', '_', compiler_type)+'_'
        lib_type = re.sub(r'\s+|[:/]', '_', lib_type)+'_'
        link_type = re.sub(r'\s+|[:/]', '_', link_type)+'_'

        #print(compiler_type)
        #print(lib_type)
        #print(link_type)


        final_file_name = hash256+'_'+file_type+compiler_type+lib_type+link_type
        #print('>> '+final_file_name)

        path,name = os.path.split(abs_file)
        #print('>>' + path)
        #print('>> '+name)
        os.rename(abs_file,path+'/'+final_file_name)

if flag == '-f':
    file = sys.argv[2]
    process_one_file(file)
elif flag == '-d':
    dir = sys.argv[2]
    #print('>> '+dir)
    g = os.walk(dir)
    for path,dir_list,file_list in g:  
        for file_name in file_list:  
            #print(os.path.join(path, file_name))
            process_one_file(file_name)
else:
    print('[ERROR] Only support -f or -d cmdline')
